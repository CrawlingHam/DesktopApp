{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/authentication/createNewClientUser.ts"],"sourcesContent":["import { toast } from \"sonner\";\r\nimport { useSignup } from \"./index\";\r\n\r\nexport default async function createNewClientUser(email: string, password: string, confirmPassword: string) {\r\n    const result = await useSignup(email, password, confirmPassword);\r\n    if (result.success) return result;\r\n\r\n    switch (result.error) {\r\n        case \"auth/email-already-in-use\":\r\n            toast.error(\"Email is already in use.\");\r\n            break;\r\n        case \"auth/invalid-email\":\r\n            toast.error(\"Invalid email address.\");\r\n            break;\r\n        case \"auth/weak-password\":\r\n            toast.error(\"Weak password. Please choose a stronger password.\");\r\n            break;\r\n        case \"Password must be between 8 and 266 characters.\":\r\n            toast.error(\"Password must be between 8 and 266 characters.\");\r\n            break;\r\n        case \"Password must contain at least 2 letters.\":\r\n            toast.error(\"Password must contain at least 2 letters.\");\r\n            break;\r\n        case \"Password must contain at least 2 numbers.\":\r\n            toast.error(\"Password must contain at least 2 numbers.\");\r\n            break;\r\n        case \"Passwords do not match.\":\r\n            toast.error(\"Passwords do not match.\");\r\n            break;\r\n        default:\r\n            toast.error(\"An unknown error occurred.\");\r\n            break;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;;AAEe,eAAe,oBAAoB,KAAa,EAAE,QAAgB,EAAE,eAAuB;;IACtG,MAAM,SAAS,MAAM,CAAA,GAAA,sLAAA,CAAA,YAAS,AAAD,EAAE,OAAO,UAAU;IAChD,IAAI,OAAO,OAAO,EAAE,OAAO;IAE3B,OAAQ,OAAO,KAAK;QAChB,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACJ;YACI,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;IACR;AACJ;GA9B8B;;QACL,sLAAA,CAAA,YAAS"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/formatTime.ts"],"sourcesContent":["export function formatTime(seconds: number) {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = Math.round(seconds % 60);\r\n\r\n    if (hours > 0) {\r\n        return `${hours}:${minutes.toString().padStart(2, \"0\")}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n    } else {\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS,WAAW,OAAe;IACtC,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;IACnC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ;IAC9C,MAAM,mBAAmB,KAAK,KAAK,CAAC,UAAU;IAE9C,IAAI,QAAQ,GAAG;QACX,OAAO,GAAG,MAAM,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,iBAAiB,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IAC5G,OAAO;QACH,OAAO,GAAG,QAAQ,CAAC,EAAE,iBAAiB,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IACvE;AACJ"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/randomCodeGenerator.ts"],"sourcesContent":["import { randomBytes } from \"crypto\";\r\n\r\nexport default function randomCodeGenerator() {\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const length = 6;\r\n    const code = Array.from(randomBytes(length))\r\n        .map((byte) => characters[byte % characters.length])\r\n        .join(\"\");\r\n\r\n    const minutes = 10;\r\n    const timelimit = minutes * 60 * 1000;\r\n    const expirationDate = Date.now() + timelimit;\r\n\r\n    return {\r\n        code,\r\n        expirationDate,\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEe,SAAS;IACpB,MAAM,aAAa;IACnB,MAAM,SAAS;IACf,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,GAAA,4KAAA,CAAA,cAAW,AAAD,EAAE,SAC/B,GAAG,CAAC,CAAC,OAAS,UAAU,CAAC,OAAO,WAAW,MAAM,CAAC,EAClD,IAAI,CAAC;IAEV,MAAM,UAAU;IAChB,MAAM,YAAY,UAAU,KAAK;IACjC,MAAM,iBAAiB,KAAK,GAAG,KAAK;IAEpC,OAAO;QACH;QACA;IACJ;AACJ"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/createSearchParams.ts"],"sourcesContent":["export function createSearchParams(params: Record<string, string>) {\r\n    const searchParams = new URLSearchParams();\r\n\r\n    setTimeout(() => {\r\n        Object.entries(params).forEach(([key, value]) => {\r\n            searchParams.set(key, value);\r\n        });\r\n    \r\n        const newUrl = `${window.location.pathname}?${searchParams.toString()}`;\r\n    \r\n        if (window.location.search !== `?${searchParams.toString()}`) {\r\n            window.history.replaceState(null, \"\", newUrl);\r\n        }\r\n    }, 1000);\r\n}"],"names":[],"mappings":";;;AAAO,SAAS,mBAAmB,MAA8B;IAC7D,MAAM,eAAe,IAAI;IAEzB,WAAW;QACP,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;YACxC,aAAa,GAAG,CAAC,KAAK;QAC1B;QAEA,MAAM,SAAS,GAAG,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI;QAEvE,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI,EAAE;YAC1D,OAAO,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI;QAC1C;IACJ,GAAG;AACP"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/Email/sendVerificationEmail.ts"],"sourcesContent":["export async function sendVerificationEmail(email: string) {\r\n    try {\r\n        const response = await fetch(\"/api/emails/verification\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const { data, code, expirationDate } = await response.json();\r\n            return { success: true, data, code, expirationDate };\r\n        } else {\r\n            const errorData = await response.json();\r\n            return { success: false, error: errorData.error || \"Failed to send email\" };\r\n        }\r\n    } catch (error) {\r\n        return { success: false, error: (error as Error).message };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,eAAe,sBAAsB,KAAa;IACrD,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,4BAA4B;YACrD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAM;QACjC;QAEA,IAAI,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,MAAM,SAAS,IAAI;YAC1D,OAAO;gBAAE,SAAS;gBAAM;gBAAM;gBAAM;YAAe;QACvD,OAAO;YACH,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO;gBAAE,SAAS;gBAAO,OAAO,UAAU,KAAK,IAAI;YAAuB;QAC9E;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YAAE,SAAS;YAAO,OAAO,AAAC,MAAgB,OAAO;QAAC;IAC7D;AACJ"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/setNewVideo.ts"],"sourcesContent":["import { useMedia } from \"@/app/store\";\r\nimport { createSearchParams } from \"../createSearchParams\";\r\nimport { Player } from \"../interfaces\";\r\nimport { containsVideoID } from \"./containsVideo\";\r\nimport getVideoDetails from \"./getVideoDetails\";\r\n\r\ntype SetVideo = (video: Player) => void;\r\n\r\nexport default async function setNewVideo(\r\n    setYoutubeVideo: SetVideo,\r\n    setTiktokVideo: SetVideo,\r\n    isPlaylistActive: boolean,\r\n    setSliderValue: (value: [number, number]) => void,\r\n    playlistID?: string | undefined\r\n) {\r\n    const { playlistVideos, queueVideos, currentVideo, setCurrentVideo } = useMedia();\r\n\r\n    const activeVideos = isPlaylistActive ? playlistVideos : queueVideos;\r\n    console.log(\"Active Videos:\", activeVideos); // Check active videos\r\n\r\n    console.log(currentVideo);\r\n    if (!currentVideo || activeVideos.length === 0) return;\r\n\r\n    const currentIndex = activeVideos.findIndex((video) => video?.videoID === currentVideo.videoID);\r\n    const nextIndex = (currentIndex + 1) % activeVideos.length;\r\n    const nextVideo = activeVideos[nextIndex];\r\n\r\n    console.log(\"Current Video:\", currentVideo); // Check current video\r\n    console.log(\"Next Video:\", nextVideo); // Check next video\r\n\r\n    if ((nextVideo && nextVideo.platform === \"youtube\") || (nextVideo && nextVideo.url.includes(\"youtube\"))) {\r\n        setTiktokVideo(null);\r\n        setYoutubeVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n        const { start, end } = nextVideo;\r\n        setTimeout(() => {\r\n            if (start && end) {\r\n                setSliderValue([parseInt(start), parseInt(end)]);\r\n            }\r\n        }, 500);\r\n    } else if ((nextVideo && nextVideo.platform === \"tiktok\") || (nextVideo && nextVideo.url.includes(\"tiktok\"))) {\r\n        console.log(\"Setting TikTok video:\", nextVideo.videoID); // Log next TikTok video\r\n        setYoutubeVideo(null);\r\n        setTiktokVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n        const index = nextVideo?.index?.toString();\r\n        if (playlistID && index) {\r\n            const newSearchParams: Record<string, string> = {\r\n                tVideoID: currentVideo.videoID,\r\n                list: playlistID,\r\n                index,\r\n            };\r\n            console.log(newSearchParams);\r\n            // createSearchParams(newSearchParams);\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    // const result = await getVideoDetails(url);\r\n    // if (!result) return;\r\n\r\n    // const videoDetails = result.soundCloudVideoDetails || result.tiktokVideoDetails || result.youtubeVideoDetails;\r\n    // if (!videoDetails) return;\r\n\r\n    // const { index, video } = containsVideoID(videos, videoDetails.videoID);\r\n    // if (!index || !video) return;\r\n\r\n    // const ccurrentVideo = videos[index];\r\n    // if (!currentVideo) return;\r\n\r\n    // const list = playlistID;\r\n    // const { start, end } = currentVideo;\r\n\r\n    // if (result.youtubeVideoDetails) {\r\n    //     if (start && end) {\r\n    //         if (!list || !index) {\r\n    //             setSliderValue([parseInt(start), parseInt(end)]);\r\n    //         } else {\r\n    //             setTimeout(() => {\r\n    //                 setSliderValue([parseInt(start), parseInt(end)]);\r\n    //             }, 500);\r\n    //         }\r\n    //     } else {\r\n    //         setSliderValue([0, duration]);\r\n    //     }\r\n\r\n    //     const extendedVideo: Player = {\r\n    //         ...currentVideo,\r\n    //         list: playlistID,\r\n    //         index: index.toString(),\r\n    //     };\r\n    //     setTiktokVideo(null);\r\n    //     setYoutubeVideo(extendedVideo);\r\n    // } else if (result.tiktokVideoDetails) {\r\n    //     const extendedVideo: Player = {\r\n    //         ...currentVideo,\r\n    //         list: playlistID,\r\n    //         index: index.toString(),\r\n    //     };\r\n    //     setYoutubeVideo(null);\r\n    //     setTiktokVideo(extendedVideo);\r\n    // }\r\n    // if (videos[index]) setCurrentVideo(videos[index]);\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/sanitizeURLs.ts"],"sourcesContent":["function sanitizeTiktokURL(url: string) {\r\n    const match = url.match(/\\/video\\/(\\d+)/); // Regex to match the video ID\r\n    return match ? match[1] : null;\r\n}\r\nfunction sanitizeYoutubeShortsURL(url: string) {\r\n    const match = url.match(/\\/shorts\\/([\\w-]+)/)\r\n    return match ? match[1] : null\r\n}\r\nfunction sanitizeYoutubeURL(url: string): string | null {\r\n    const match = url.match(/(?:v=)([^\"&?/\\s]{11})/)\r\n    return match ? match[1] : null\r\n}\r\nfunction sanitizeEmbeddedYoutubeURL(url: string): string | null {\r\n    const match = url.match(/youtu\\.be\\/([^\"&?/\\s]{11})/)\r\n    return match ? match[1] : null\r\n}\r\n\r\nexport {\r\n    sanitizeTiktokURL,\r\n    sanitizeYoutubeURL,\r\n    sanitizeYoutubeShortsURL,\r\n    sanitizeEmbeddedYoutubeURL,\r\n}"],"names":[],"mappings":";;;;;;AAAA,SAAS,kBAAkB,GAAW;IAClC,MAAM,QAAQ,IAAI,KAAK,CAAC,mBAAmB,8BAA8B;IACzE,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,yBAAyB,GAAW;IACzC,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,mBAAmB,GAAW;IACnC,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,2BAA2B,GAAW;IAC3C,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getVideoID.ts"],"sourcesContent":["import { \r\n    sanitizeTiktokURL,\r\n    sanitizeYoutubeURL,\r\n    sanitizeYoutubeShortsURL,\r\n    sanitizeEmbeddedYoutubeURL,\r\n } from './sanitizeURLs'\r\n\r\nexport default function getVideoID(platform: string, url: string) {\r\n    if (platform === \"Youtube\") return sanitizeYoutubeURL(url)\r\n    else if (platform === 'Youtube Shorts') return sanitizeYoutubeShortsURL(url)\r\n    else if (platform === 'Youtu.be') return sanitizeEmbeddedYoutubeURL(url)\r\n    else if (platform === 'Tiktok') return sanitizeTiktokURL(url)\r\n    else if (platform === 'SoundCloud') return 'SoundCloud'\r\n    else return null\r\n}"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,WAAW,QAAgB,EAAE,GAAW;IAC5D,IAAI,aAAa,WAAW,OAAO,CAAA,GAAA,8IAAA,CAAA,qBAAkB,AAAD,EAAE;SACjD,IAAI,aAAa,kBAAkB,OAAO,CAAA,GAAA,8IAAA,CAAA,2BAAwB,AAAD,EAAE;SACnE,IAAI,aAAa,YAAY,OAAO,CAAA,GAAA,8IAAA,CAAA,6BAA0B,AAAD,EAAE;SAC/D,IAAI,aAAa,UAAU,OAAO,CAAA,GAAA,8IAAA,CAAA,oBAAiB,AAAD,EAAE;SACpD,IAAI,aAAa,cAAc,OAAO;SACtC,OAAO;AAChB"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getPlatform.ts"],"sourcesContent":["export default function getPlatform(url: string) {\r\n    const supportedPlatforms: { regex: RegExp; name: string }[] = [\r\n        { regex: /youtu\\.be/i, name: \"Youtu.be\" },\r\n        { regex: /tiktok\\.com/i, name: \"Tiktok\" },\r\n        { regex: /youtube\\.com/i, name: \"Youtube\" },\r\n        { regex: /twitter\\.com/i, name: \"Twitter\" },\r\n        { regex: /instagram\\.com/i, name: \"Instagram\" },\r\n        { regex: /soundcloud\\.com/i, name: \"SoundCloud\" },\r\n    ];\r\n\r\n    for (const platform of supportedPlatforms) {\r\n        if (platform.regex.test(url)) {\r\n            if (platform.name === \"Youtube\" && url.includes(\"shorts\")) return \"Youtube Shorts\";\r\n            return platform.name;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n"],"names":[],"mappings":";;;AAAe,SAAS,YAAY,GAAW;IAC3C,MAAM,qBAAwD;QAC1D;YAAE,OAAO;YAAc,MAAM;QAAW;QACxC;YAAE,OAAO;YAAgB,MAAM;QAAS;QACxC;YAAE,OAAO;YAAiB,MAAM;QAAU;QAC1C;YAAE,OAAO;YAAiB,MAAM;QAAU;QAC1C;YAAE,OAAO;YAAmB,MAAM;QAAY;QAC9C;YAAE,OAAO;YAAoB,MAAM;QAAa;KACnD;IAED,KAAK,MAAM,YAAY,mBAAoB;QACvC,IAAI,SAAS,KAAK,CAAC,IAAI,CAAC,MAAM;YAC1B,IAAI,SAAS,IAAI,KAAK,aAAa,IAAI,QAAQ,CAAC,WAAW,OAAO;YAClE,OAAO,SAAS,IAAI;QACxB;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getYoutubeVideoDetails.ts"],"sourcesContent":["const YOUTUBE_API_KEY = process.env.NEXT_PUBLIC_YOUTUBE_API_KEY\r\n\r\nexport default async function getYoutubeVideoDetails(videoID: string) {\r\n    try {\r\n        const result = await fetch(\r\n            `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoID}&key=${YOUTUBE_API_KEY}`\r\n        )\r\n\r\n        if (!result.ok) throw new Error(`Failed to fetch video details: ${result.statusText}`)\r\n\r\n        const data = await result.json()\r\n        if (data.items && data.items.length < 0) throw new Error(`No video Found`)\r\n\r\n        const video = data.items[0].snippet\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: video.title,\r\n            creator: video.channelTitle,\r\n            thumbnail: video.thumbnails?.high?.url || video.thumbnails?.medium?.url || video.thumbnails?.default?.url,\r\n        }\r\n    }\r\n    catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n        }\r\n    }\r\n}"],"names":[],"mappings":";;;AAAwB;AAAxB,MAAM;AAES,eAAe,uBAAuB,OAAe;IAChE,IAAI;QACA,MAAM,SAAS,MAAM,MACjB,CAAC,6DAA6D,EAAE,QAAQ,KAAK,EAAE,iBAAiB;QAGpG,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,OAAO,UAAU,EAAE;QAErF,MAAM,OAAO,MAAM,OAAO,IAAI;QAC9B,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,MAAM,CAAC,cAAc,CAAC;QAEzE,MAAM,QAAQ,KAAK,KAAK,CAAC,EAAE,CAAC,OAAO;QAEnC,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,MAAM,KAAK;YAClB,SAAS,MAAM,YAAY;YAC3B,WAAW,MAAM,UAAU,EAAE,MAAM,OAAO,MAAM,UAAU,EAAE,QAAQ,OAAO,MAAM,UAAU,EAAE,SAAS;QAC1G;IACJ,EACA,OAAO,OAAO;QACV,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;QACf;IACJ;AACJ"}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/fetchTiktokVideoDetails.ts"],"sourcesContent":["export default async function fetchTiktokVideoDetails(url: string) {\r\n    try {\r\n        const response = await fetch(`/api/tiktok/video?url=${encodeURIComponent(url)}`);\r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n        }\r\n        \r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            data,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            data: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAe,eAAe,wBAAwB,GAAW;IAC7D,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,mBAAmB,MAAM;QAC/E,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getVideoDetails.ts"],"sourcesContent":["import getVideoID from \"./getVideoID\";\r\nimport getPlatform from \"./getPlatform\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\nimport fetchTiktokVideoDetails from \"./fetchTiktokVideoDetails\";\r\n\r\nexport default async function getVideoDetails(url: string) {\r\n    const platform = getPlatform(url);\r\n    if (!platform) return null;\r\n\r\n    const videoID = getVideoID(platform, url);\r\n    if (!videoID) return null;\r\n\r\n    const PlayerDetails: IPlayerDetails = {\r\n        tiktokVideoDetails: null,\r\n        youtubeVideoDetails: null,\r\n        soundCloudVideoDetails: null,\r\n    };\r\n\r\n    if (platform === \"Youtube\") {\r\n        const result = await getYoutubeVideoDetails(videoID);\r\n        if (result.error) return null;\r\n\r\n        const { thumbnail, title, creator } = result;\r\n        return {\r\n            ...PlayerDetails,\r\n            youtubeVideoDetails: {\r\n                title,\r\n                videoID,\r\n                thumbnail,\r\n                creator,\r\n                url: `https://www.youtube.com/watch?v=${videoID}`,\r\n            },\r\n        };\r\n    } else if (platform === \"Tiktok\") {\r\n        const result = await fetchTiktokVideoDetails(url);\r\n        if (result.error) return null;\r\n\r\n        const { creator, title, thumbnail } = result.data;\r\n        const creatorAndID = `${creator}+${videoID}`;\r\n\r\n        return {\r\n            ...PlayerDetails,\r\n            tiktokVideoDetails: {\r\n                url,\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                videoID: creatorAndID,\r\n            },\r\n        };\r\n    }\r\n}\r\n\r\ninterface IPlayerDetails {\r\n    tiktokVideoDetails: null;\r\n    youtubeVideoDetails: null;\r\n    soundCloudVideoDetails: null;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEe,eAAe,gBAAgB,GAAW;IACrD,MAAM,WAAW,CAAA,GAAA,6IAAA,CAAA,UAAW,AAAD,EAAE;IAC7B,IAAI,CAAC,UAAU,OAAO;IAEtB,MAAM,UAAU,CAAA,GAAA,4IAAA,CAAA,UAAU,AAAD,EAAE,UAAU;IACrC,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,gBAAgC;QAClC,oBAAoB;QACpB,qBAAqB;QACrB,wBAAwB;IAC5B;IAEA,IAAI,aAAa,WAAW;QACxB,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,UAAsB,AAAD,EAAE;QAC5C,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;QACtC,OAAO;YACH,GAAG,aAAa;YAChB,qBAAqB;gBACjB;gBACA;gBACA;gBACA;gBACA,KAAK,CAAC,gCAAgC,EAAE,SAAS;YACrD;QACJ;IACJ,OAAO,IAAI,aAAa,UAAU;QAC9B,MAAM,SAAS,MAAM,CAAA,GAAA,yJAAA,CAAA,UAAuB,AAAD,EAAE;QAC7C,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,OAAO,IAAI;QACjD,MAAM,eAAe,GAAG,QAAQ,CAAC,EAAE,SAAS;QAE5C,OAAO;YACH,GAAG,aAAa;YAChB,oBAAoB;gBAChB;gBACA;gBACA;gBACA;gBACA,SAAS;YACb;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createVideoObject.ts"],"sourcesContent":["import { Player } from \"../interfaces\";\r\n\r\nexport default function createVideoObject(duration: number, tiktokVideo?: Player, youtubeVideo?: Player, soundCloudVideo?: Player): Player | null {\r\n    const video = tiktokVideo || youtubeVideo || soundCloudVideo;\r\n    if (!video) return null;\r\n\r\n    // Fetch url params\r\n    const params = new URLSearchParams(window.location.search);\r\n    const soundCloudVideoID = params.get(\"sVideoID\");\r\n    const youtubeVideoID = params.get(\"yVideoID\");\r\n    const tiktokVideoID = params.get(\"tVideoID\");\r\n    const start = params.get(\"start\");\r\n    const index = params.get(\"index\");\r\n    const list = params.get(\"list\");\r\n    const end = params.get(\"end\");\r\n\r\n    return {\r\n        ...video,\r\n        start: start || video.start || \"0\",\r\n        end: end || video.end || duration.toString(),\r\n        platform: tiktokVideo ? \"tiktok\" : youtubeVideo ? \"youtube\" : \"soundcloud\",\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAEe,SAAS,kBAAkB,QAAgB,EAAE,WAAoB,EAAE,YAAqB,EAAE,eAAwB;IAC7H,MAAM,QAAQ,eAAe,gBAAgB;IAC7C,IAAI,CAAC,OAAO,OAAO;IAEnB,mBAAmB;IACnB,MAAM,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACzD,MAAM,oBAAoB,OAAO,GAAG,CAAC;IACrC,MAAM,iBAAiB,OAAO,GAAG,CAAC;IAClC,MAAM,gBAAgB,OAAO,GAAG,CAAC;IACjC,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,MAAM,OAAO,GAAG,CAAC;IAEvB,OAAO;QACH,GAAG,KAAK;QACR,OAAO,SAAS,MAAM,KAAK,IAAI;QAC/B,KAAK,OAAO,MAAM,GAAG,IAAI,SAAS,QAAQ;QAC1C,UAAU,cAAc,WAAW,eAAe,YAAY;IAClE;AACJ"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createNewVideo.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\n\r\nexport default function createNewVideo(required: Player, optionals?: Record<string, string>) {\r\n    if (!required) return;\r\n\r\n    return {\r\n        ...required,\r\n        ...optionals,\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAEe,SAAS,eAAe,QAAgB,EAAE,SAAkC;IACvF,IAAI,CAAC,UAAU;IAEf,OAAO;QACH,GAAG,QAAQ;QACX,GAAG,SAAS;IAChB;AACJ"}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createVideo.ts"],"sourcesContent":["import createNewVideo from \"./createNewVideo\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\nimport { ICreateVideo, Player } from \"../interfaces\";\r\nimport fetchTiktokVideoDetails from \"./fetchTiktokVideoDetails\";\r\n\r\nexport default async function createVideo({ videoID, platform, setYoutubeVideo, setTiktokVideo, setSoundCloudVideo, optionals }: ICreateVideo) {\r\n    switch (platform) {\r\n        case \"youtube\":\r\n            if (typeof setYoutubeVideo === \"undefined\" || !setYoutubeVideo) return;\r\n\r\n            const youtubeResults = await getYoutubeVideoDetails(videoID);\r\n            if (!youtubeResults) return;\r\n\r\n            console.log(youtubeResults.creator);\r\n\r\n            const requiredYoutubeVideoDetails: Player = {\r\n                videoID: videoID,\r\n                title: youtubeResults.title,\r\n                platform: \"youtube\",\r\n                creator: youtubeResults.creator,\r\n                thumbnail: youtubeResults.thumbnail,\r\n                url: `https://www.youtube.com/watch?v=${videoID}`,\r\n            };\r\n\r\n            const newYoutubeVideo = createNewVideo(requiredYoutubeVideoDetails, optionals);\r\n            if (newYoutubeVideo) setYoutubeVideo(newYoutubeVideo);\r\n            break;\r\n\r\n        case \"tiktok\":\r\n            if (typeof setTiktokVideo === \"undefined\" || !setTiktokVideo) return;\r\n\r\n            const tiktokVideoURL = `https://www.tiktok.com/@${videoID.split(\"+\")[0]}/video/${videoID.split(\"+\")[1]}`;\r\n            const tiktokResults = await fetchTiktokVideoDetails(tiktokVideoURL);\r\n            if (tiktokResults.error) return null;\r\n            const { creator, title, thumbnail } = tiktokResults.data;\r\n            const creatorAndID = `${creator}+${videoID}`;\r\n            const requiredTiktokVideoDetails: Player = {\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                platform: \"tiktok\",\r\n                url: tiktokVideoURL,\r\n                videoID,\r\n            };\r\n            const newTiktokVideo = createNewVideo(requiredTiktokVideoDetails, optionals);\r\n            if (newTiktokVideo) setTiktokVideo(newTiktokVideo);\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;;;;AAEe,eAAe,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,SAAS,EAAgB;IACzI,OAAQ;QACJ,KAAK;YACD,IAAI,OAAO,oBAAoB,eAAe,CAAC,iBAAiB;YAEhE,MAAM,iBAAiB,MAAM,CAAA,GAAA,wJAAA,CAAA,UAAsB,AAAD,EAAE;YACpD,IAAI,CAAC,gBAAgB;YAErB,QAAQ,GAAG,CAAC,eAAe,OAAO;YAElC,MAAM,8BAAsC;gBACxC,SAAS;gBACT,OAAO,eAAe,KAAK;gBAC3B,UAAU;gBACV,SAAS,eAAe,OAAO;gBAC/B,WAAW,eAAe,SAAS;gBACnC,KAAK,CAAC,gCAAgC,EAAE,SAAS;YACrD;YAEA,MAAM,kBAAkB,CAAA,GAAA,gJAAA,CAAA,UAAc,AAAD,EAAE,6BAA6B;YACpE,IAAI,iBAAiB,gBAAgB;YACrC;QAEJ,KAAK;YACD,IAAI,OAAO,mBAAmB,eAAe,CAAC,gBAAgB;YAE9D,MAAM,iBAAiB,CAAC,wBAAwB,EAAE,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE;YACxG,MAAM,gBAAgB,MAAM,CAAA,GAAA,yJAAA,CAAA,UAAuB,AAAD,EAAE;YACpD,IAAI,cAAc,KAAK,EAAE,OAAO;YAChC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,cAAc,IAAI;YACxD,MAAM,eAAe,GAAG,QAAQ,CAAC,EAAE,SAAS;YAC5C,MAAM,6BAAqC;gBACvC;gBACA;gBACA;gBACA,UAAU;gBACV,KAAK;gBACL;YACJ;YACA,MAAM,iBAAiB,CAAA,GAAA,gJAAA,CAAA,UAAc,AAAD,EAAE,4BAA4B;YAClE,IAAI,gBAAgB,eAAe;YACnC;QAEJ;YACI;IACR;AACJ"}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/setNewPlayerVideo.ts"],"sourcesContent":["import { fetchTiktokVideoDetails, Player } from \"../index\";\r\nimport createVideo from \"./createVideo\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\n\r\nexport default async function setNewPlayerVideo(\r\n    setTiktokVideo: (tiktokVideo: Player) => void,\r\n    setYoutubeVideo: (youtubeVideo: Player) => void,\r\n    setSliderValue: (value: [number, number]) => void,\r\n    setSoundCloudVideo: (soundCloudVideo: Player) => void\r\n) {\r\n    // Fetch url params\r\n    const params = new URLSearchParams(window.location.search);\r\n    const soundCloudVideoID = params.get(\"sVideoID\");\r\n    const youtubeVideoID = params.get(\"yVideoID\");\r\n    const tiktokVideoID = params.get(\"tVideoID\");\r\n    const start = params.get(\"start\");\r\n    const index = params.get(\"index\");\r\n    const list = params.get(\"list\");\r\n    const end = params.get(\"end\");\r\n\r\n    // Default video\r\n    const defaultVideoID = \"FfsINwUQ75Q\";\r\n    const defaultUrl = `https://www.youtube.com/watch?v=${defaultVideoID}`;\r\n\r\n    // Youtube\r\n    const youtube_all = youtubeVideoID && start && end && list && index;\r\n    const youtube_base = youtubeVideoID && !start && !end && !list && !index;\r\n    const youtube_base_start_end = youtubeVideoID && start && end && !list && !index;\r\n\r\n    // Tiktok\r\n    const tiktok_all = tiktokVideoID && list && index;\r\n    const tiktok_base = tiktokVideoID && !list && !index;\r\n\r\n    // SoundCloud\r\n    const soundCloud_all = soundCloudVideoID && start && end && list && index;\r\n    const soundCloud_base = soundCloudVideoID && !start && !end && !list && !index;\r\n    const soundCloud_start_end = soundCloudVideoID && start && end && !list && !index;\r\n\r\n    // Default\r\n    const default_ = !youtubeVideoID && !tiktokVideoID && !soundCloudVideoID && !start && !end && !list && !index;\r\n\r\n    // Clear all video states\r\n    setTiktokVideo(null);\r\n    setYoutubeVideo(null);\r\n    setSoundCloudVideo(null);\r\n\r\n    // Play default video if no url params exist\r\n    if (params.size === 0 || default_) {\r\n        const result = await getYoutubeVideoDetails(defaultVideoID);\r\n        if (!result.success) return;\r\n\r\n        setYoutubeVideo({\r\n            url: defaultUrl,\r\n            platform: \"youtube\",\r\n            title: result.title,\r\n            creator: result.creator,\r\n            videoID: defaultVideoID,\r\n            thumbnail: result.thumbnail,\r\n        });\r\n    } else if (youtube_base) {\r\n        await createVideo({ setYoutubeVideo, platform: \"youtube\", videoID: youtubeVideoID });\r\n    } else if (youtube_all || youtube_base_start_end) {\r\n        await createVideo({\r\n            platform: \"youtube\",\r\n            optionals: { start, end },\r\n            setYoutubeVideo,\r\n            videoID: youtubeVideoID,\r\n        });\r\n        setTimeout(() => {\r\n            setSliderValue([parseInt(start), parseInt(end)]);\r\n        }, 1000);\r\n    } else if (tiktok_base || tiktok_all) {\r\n        await createVideo({ setTiktokVideo, platform: \"tiktok\", videoID: tiktokVideoID });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,kBAC1B,cAA6C,EAC7C,eAA+C,EAC/C,cAAiD,EACjD,kBAAqD;IAErD,mBAAmB;IACnB,MAAM,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACzD,MAAM,oBAAoB,OAAO,GAAG,CAAC;IACrC,MAAM,iBAAiB,OAAO,GAAG,CAAC;IAClC,MAAM,gBAAgB,OAAO,GAAG,CAAC;IACjC,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,MAAM,OAAO,GAAG,CAAC;IAEvB,gBAAgB;IAChB,MAAM,iBAAiB;IACvB,MAAM,aAAa,CAAC,gCAAgC,EAAE,gBAAgB;IAEtE,UAAU;IACV,MAAM,cAAc,kBAAkB,SAAS,OAAO,QAAQ;IAC9D,MAAM,eAAe,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IACnE,MAAM,yBAAyB,kBAAkB,SAAS,OAAO,CAAC,QAAQ,CAAC;IAE3E,SAAS;IACT,MAAM,aAAa,iBAAiB,QAAQ;IAC5C,MAAM,cAAc,iBAAiB,CAAC,QAAQ,CAAC;IAE/C,aAAa;IACb,MAAM,iBAAiB,qBAAqB,SAAS,OAAO,QAAQ;IACpE,MAAM,kBAAkB,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IACzE,MAAM,uBAAuB,qBAAqB,SAAS,OAAO,CAAC,QAAQ,CAAC;IAE5E,UAAU;IACV,MAAM,WAAW,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IAExG,yBAAyB;IACzB,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IAEnB,4CAA4C;IAC5C,IAAI,OAAO,IAAI,KAAK,KAAK,UAAU;QAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,UAAsB,AAAD,EAAE;QAC5C,IAAI,CAAC,OAAO,OAAO,EAAE;QAErB,gBAAgB;YACZ,KAAK;YACL,UAAU;YACV,OAAO,OAAO,KAAK;YACnB,SAAS,OAAO,OAAO;YACvB,SAAS;YACT,WAAW,OAAO,SAAS;QAC/B;IACJ,OAAO,IAAI,cAAc;QACrB,MAAM,CAAA,GAAA,6IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAiB,UAAU;YAAW,SAAS;QAAe;IACtF,OAAO,IAAI,eAAe,wBAAwB;QAC9C,MAAM,CAAA,GAAA,6IAAA,CAAA,UAAW,AAAD,EAAE;YACd,UAAU;YACV,WAAW;gBAAE;gBAAO;YAAI;YACxB;YACA,SAAS;QACb;QACA,WAAW;YACP,eAAe;gBAAC,SAAS;gBAAQ,SAAS;aAAK;QACnD,GAAG;IACP,OAAO,IAAI,eAAe,YAAY;QAClC,MAAM,CAAA,GAAA,6IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAgB,UAAU;YAAU,SAAS;QAAc;IACnF;AACJ"}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/containsVideo.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\n\r\nfunction containsVideo(videos: Player[], newVideo: Player): boolean {\r\n    return videos.some((video) => (video && video.url) === (newVideo && newVideo.url));\r\n}\r\n\r\nfunction containsVideoID(videos: Player[], videoID: string) {\r\n    const index = videos.findIndex((video) => (video && video.videoID) === videoID);\r\n    return {\r\n        video: index !== -1 ? videos[index] : null,\r\n        index: index !== -1 ? index : null,\r\n    };\r\n}\r\n\r\nexport {\r\n    containsVideo,\r\n    containsVideoID,\r\n}"],"names":[],"mappings":";;;;AAEA,SAAS,cAAc,MAAgB,EAAE,QAAgB;IACrD,OAAO,OAAO,IAAI,CAAC,CAAC,QAAU,CAAC,SAAS,MAAM,GAAG,MAAM,CAAC,YAAY,SAAS,GAAG;AACpF;AAEA,SAAS,gBAAgB,MAAgB,EAAE,OAAe;IACtD,MAAM,QAAQ,OAAO,SAAS,CAAC,CAAC,QAAU,CAAC,SAAS,MAAM,OAAO,MAAM;IACvE,OAAO;QACH,OAAO,UAAU,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG;QACtC,OAAO,UAAU,CAAC,IAAI,QAAQ;IAClC;AACJ"}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/processVideoAddition.ts"],"sourcesContent":["import { toast } from \"sonner\";\r\nimport { Player } from \"../interfaces\";\r\nimport { addVideoToPlaylist } from \"@/app/firebase\";\r\nimport { User } from \"firebase/auth\";\r\nimport createVideoObject from \"./createVideoObject\";\r\nimport { containsVideo } from \"./containsVideo\";\r\n\r\nexport default async function processVideoAddition(\r\n    buttonType: \"queue\" | \"playlist\",\r\n    setCurrentVideo: (video: Player) => void,\r\n    videos: Player[],\r\n    addVideo: (video: Player) => void,\r\n    user: User | null,\r\n    togglePlaylist: (enabled: boolean) => void,\r\n    duration: number,\r\n    soundCloudVideo: Player,\r\n    youtubeVideo: Player,\r\n    tiktokVideo: Player,\r\n    clearVideos: () => void,\r\n    setShowTooltips?: React.Dispatch<React.SetStateAction<boolean>>\r\n) {\r\n    const video = createVideoObject(duration, tiktokVideo, youtubeVideo, soundCloudVideo);\r\n    if (!video) return;\r\n\r\n    if (containsVideo(videos, video)) return toast.error(\"Video is already in the playlist\");\r\n\r\n    if (buttonType === \"playlist\") {\r\n        console.log('running playlist process')\r\n        clearVideos();\r\n        console.log('clearVideos was ran')\r\n        togglePlaylist(true);\r\n\r\n        if (user) {\r\n            await addVideoToDB(user.uid, video);\r\n            addVideoToArray(setCurrentVideo, addVideo, video);\r\n            toastMessage(buttonType);\r\n        } else {\r\n            if (setShowTooltips) {\r\n                setShowTooltips(true);\r\n                return;\r\n            }\r\n        }\r\n    } else if (buttonType === \"queue\") {\r\n        console.log(\"running queue process\");\r\n        clearVideos();\r\n        console.log('cearVideos was ran')\r\n        togglePlaylist(false);\r\n        addVideoToArray(setCurrentVideo, addVideo, video);\r\n        toastMessage(buttonType);\r\n    }\r\n}\r\n\r\nasync function addVideoToDB(userID: string, video: Player) {\r\n    const result = await addVideoToPlaylist(userID, video);\r\n    if (result.error && result.error === \"Video already exists in the playlist\") {\r\n        toast.error(\"Video already exists in the playlist\");\r\n        return null;\r\n    }\r\n    return result.playlistID;\r\n}\r\n\r\nfunction addVideoToArray(setCurrentVideo: (video: Player) => void, addVideo: (video: Player) => void, video: Player) {\r\n    addVideo(video);\r\n    setCurrentVideo(video);\r\n}\r\nfunction toastMessage(buttonType: \"queue\" | \"playlist\") {\r\n    switch (buttonType) {\r\n        case \"queue\":\r\n            toast.success(\"Video added to the queue\");\r\n            break;\r\n        case \"playlist\":\r\n            toast.success(\"Video added to the playlist\");\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;AAHA;;;;;AAKe,eAAe,qBAC1B,UAAgC,EAChC,eAAwC,EACxC,MAAgB,EAChB,QAAiC,EACjC,IAAiB,EACjB,cAA0C,EAC1C,QAAgB,EAChB,eAAuB,EACvB,YAAoB,EACpB,WAAmB,EACnB,WAAuB,EACvB,eAA+D;IAE/D,MAAM,QAAQ,CAAA,GAAA,mJAAA,CAAA,UAAiB,AAAD,EAAE,UAAU,aAAa,cAAc;IACrE,IAAI,CAAC,OAAO;IAEZ,IAAI,CAAA,GAAA,+IAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,QAAQ,OAAO,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;IAErD,IAAI,eAAe,YAAY;QAC3B,QAAQ,GAAG,CAAC;QACZ;QACA,QAAQ,GAAG,CAAC;QACZ,eAAe;QAEf,IAAI,MAAM;YACN,MAAM,aAAa,KAAK,GAAG,EAAE;YAC7B,gBAAgB,iBAAiB,UAAU;YAC3C,aAAa;QACjB,OAAO;YACH,IAAI,iBAAiB;gBACjB,gBAAgB;gBAChB;YACJ;QACJ;IACJ,OAAO,IAAI,eAAe,SAAS;QAC/B,QAAQ,GAAG,CAAC;QACZ;QACA,QAAQ,GAAG,CAAC;QACZ,eAAe;QACf,gBAAgB,iBAAiB,UAAU;QAC3C,aAAa;IACjB;AACJ;AAEA,eAAe,aAAa,MAAc,EAAE,KAAa;IACrD,MAAM,SAAS,MAAM,CAAA,GAAA,yLAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;IAChD,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,KAAK,wCAAwC;QACzE,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACZ,OAAO;IACX;IACA,OAAO,OAAO,UAAU;AAC5B;AAEA,SAAS,gBAAgB,eAAwC,EAAE,QAAiC,EAAE,KAAa;IAC/G,SAAS;IACT,gBAAgB;AACpB;AACA,SAAS,aAAa,UAAgC;IAClD,OAAQ;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd;QACJ,KAAK;YACD,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd;QACJ;YACI;IACR;AACJ"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getTiktokVideoDetails.ts"],"sourcesContent":["export async function getTikTokVideoDetails(url: string) {\r\n    try {\r\n        const apiUrl = `https://www.tiktok.com/oembed?url=${encodeURIComponent(url)}`;\r\n\r\n        const response = await fetch(apiUrl);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to fetch TikTok metadata: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: data.title,\r\n            creator: data.author_unique_id,\r\n            thumbnail: data.thumbnail_url,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,eAAe,sBAAsB,GAAW;IACnD,IAAI;QACA,MAAM,SAAS,CAAC,kCAAkC,EAAE,mBAAmB,MAAM;QAE7E,MAAM,WAAW,MAAM,MAAM;QAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,SAAS,UAAU,EAAE;QAC7E;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,KAAK,KAAK;YACjB,SAAS,KAAK,gBAAgB;YAC9B,WAAW,KAAK,aAAa;QACjC;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;QACf;IACJ;AACJ"}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 931, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 960, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/AuthPages/Input.tsx"],"sourcesContent":["import { IInput } from \"@/app/utils\";\r\n\r\nexport default function Input({\r\n    Icon,\r\n    type,\r\n    value,\r\n    iconSize,\r\n    onChange,\r\n    placeholder,\r\n    divClassName,\r\n    autoComplete,\r\n    iconClassName,\r\n    inputClassName,\r\n}: IInput) {\r\n    return (\r\n        <div className={divClassName}>\r\n            <input\r\n                required\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n                className={inputClassName}\r\n                autoComplete={autoComplete}\r\n            />\r\n            <Icon fontSize={iconSize} className={iconClassName} />\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEe,SAAS,MAAM,EAC1B,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,cAAc,EACT;IACL,qBACI,6LAAC;QAAI,WAAW;;0BACZ,6LAAC;gBACG,QAAQ;gBACR,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,aAAa;gBACb,WAAW;gBACX,cAAc;;;;;;0BAElB,6LAAC;gBAAK,UAAU;gBAAU,WAAW;;;;;;;;;;;;AAGjD;KA1BwB"}},
    {"offset": {"line": 1003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/AuthPages/PageModel.tsx"],"sourcesContent":["import Input from \"./Input\";\r\nimport { IPageModel } from \"@/app/utils\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\n\r\nexport default function PageModel({\r\n    email,\r\n    password,\r\n    titleName,\r\n    buttonName,\r\n    isLoginPage,\r\n    onClickEvent,\r\n    onEmailChange,\r\n    confirmPassword,\r\n    onPasswordChange,\r\n    emailPlaceholder,\r\n    passwordIsVisible,\r\n    passwordPlaceholder,\r\n    onConfirmPasswordChange,\r\n    confirmPasswordPlaceholder,\r\n}: IPageModel) {\r\n    // shared classnames\r\n    const sharedDivClassName = \"relative my-8 h-12 w-full\";\r\n\r\n    const sharedIconClassName = `absolute right-4 top-1/2 -translate-y-1/2 transform text-xl hover:text-pink-500 text-teal-400`;\r\n\r\n    const sharedInputClassName = `h-full w-full rounded-full border-2 border-gray-200 bg-transparent px-6 py-2 text-black \r\n    placeholder-black outline-none`;\r\n\r\n    return (\r\n        <form onSubmit={onClickEvent}>\r\n            {/* Title */}\r\n            <h1 className=\"text-4xl text-center \">{titleName}</h1>\r\n\r\n            {/* Email Field */}\r\n            <Input\r\n                type=\"text\"\r\n                value={email}\r\n                iconSize=\"small\"\r\n                autoComplete=\"off\"\r\n                onChange={onEmailChange}\r\n                Icon={AccountCircleIcon}\r\n                placeholder={emailPlaceholder}\r\n                divClassName={sharedDivClassName}\r\n                iconClassName={sharedIconClassName}\r\n                inputClassName={sharedInputClassName}\r\n            />\r\n\r\n            {/* Password Field */}\r\n            <Input\r\n                type=\"password\"\r\n                iconSize=\"small\"\r\n                value={password}\r\n                autoComplete=\"off\"\r\n                onChange={onPasswordChange}\r\n                divClassName={sharedDivClassName}\r\n                iconClassName={sharedIconClassName}\r\n                inputClassName={sharedInputClassName}\r\n                placeholder={passwordPlaceholder}\r\n                Icon={passwordIsVisible ? VisibilityIcon : VisibilityOffIcon}\r\n            />\r\n\r\n            {/* Confirm Password Field -- Only for Sign Up Route */}\r\n            {!isLoginPage && (\r\n                <Input\r\n                    iconSize=\"small\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    value={confirmPassword}\r\n                    divClassName={sharedDivClassName}\r\n                    onChange={onConfirmPasswordChange}\r\n                    iconClassName={sharedIconClassName}\r\n                    inputClassName={sharedInputClassName}\r\n                    placeholder={confirmPasswordPlaceholder}\r\n                    Icon={passwordIsVisible ? VisibilityIcon : VisibilityOffIcon}\r\n                />\r\n            )}\r\n\r\n            {/* Log in or Sign up Button --Depends on route*/}\r\n            <button\r\n                type=\"submit\"\r\n                className=\"h-12 w-full rounded-full shadow-md hover:shadow-lg \r\n                    bg-gradient-to-r from-gray-300 to-teal-400 text-white border \r\n                    cursor-pointer hover:from-orange-50 hover:to-pink-500\"\r\n            >\r\n                {buttonName}\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAGA;AACA;AAFA;;;;;;AAIe,SAAS,UAAU,EAC9B,KAAK,EACL,QAAQ,EACR,SAAS,EACT,UAAU,EACV,WAAW,EACX,YAAY,EACZ,aAAa,EACb,eAAe,EACf,gBAAgB,EAChB,gBAAgB,EAChB,iBAAiB,EACjB,mBAAmB,EACnB,uBAAuB,EACvB,0BAA0B,EACjB;IACT,oBAAoB;IACpB,MAAM,qBAAqB;IAE3B,MAAM,sBAAsB,CAAC,6FAA6F,CAAC;IAE3H,MAAM,uBAAuB,CAAC;kCACA,CAAC;IAE/B,qBACI,6LAAC;QAAK,UAAU;;0BAEZ,6LAAC;gBAAG,WAAU;0BAAyB;;;;;;0BAGvC,6LAAC,2IAAA,CAAA,UAAK;gBACF,MAAK;gBACL,OAAO;gBACP,UAAS;gBACT,cAAa;gBACb,UAAU;gBACV,MAAM,qKAAA,CAAA,UAAiB;gBACvB,aAAa;gBACb,cAAc;gBACd,eAAe;gBACf,gBAAgB;;;;;;0BAIpB,6LAAC,2IAAA,CAAA,UAAK;gBACF,MAAK;gBACL,UAAS;gBACT,OAAO;gBACP,cAAa;gBACb,UAAU;gBACV,cAAc;gBACd,eAAe;gBACf,gBAAgB;gBAChB,aAAa;gBACb,MAAM,oBAAoB,kKAAA,CAAA,UAAc,GAAG,qKAAA,CAAA,UAAiB;;;;;;YAI/D,CAAC,6BACE,6LAAC,2IAAA,CAAA,UAAK;gBACF,UAAS;gBACT,MAAK;gBACL,cAAa;gBACb,OAAO;gBACP,cAAc;gBACd,UAAU;gBACV,eAAe;gBACf,gBAAgB;gBAChB,aAAa;gBACb,MAAM,oBAAoB,kKAAA,CAAA,UAAc,GAAG,qKAAA,CAAA,UAAiB;;;;;;0BAKpE,6LAAC;gBACG,MAAK;gBACL,WAAU;0BAIT;;;;;;;;;;;;AAIjB;KApFwB"}},
    {"offset": {"line": 1109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1115, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/AuthPages/Form.tsx"],"sourcesContent":["import PageModel from \"./PageModel\";\r\nimport { IForm } from \"@/app/utils\";\r\n\r\nexport default function Form({\r\n    email,\r\n    password,\r\n    isLoginPage,\r\n    onEmailChange,\r\n    confirmPassword,\r\n    onPasswordChange,\r\n    passwordIsVisible,\r\n    onLoginButtonClick,\r\n    onSignupButtonClick,\r\n    onConfirmPasswordChange,\r\n}: IForm) {\r\n    return (\r\n        <PageModel\r\n            email={email}\r\n            password={password}\r\n            isLoginPage={isLoginPage}\r\n            onEmailChange={onEmailChange}\r\n            emailPlaceholder=\"Enter email\"\r\n            confirmPassword={confirmPassword}\r\n            onPasswordChange={onPasswordChange}\r\n            passwordPlaceholder=\"Enter password\"\r\n            passwordIsVisible={passwordIsVisible}\r\n            titleName={isLoginPage ? \"Login\" : \"Sign Up\"}\r\n            confirmPasswordPlaceholder=\"Confirm password\"\r\n            buttonName={isLoginPage ? \"Login\" : \"Sign Up\"}\r\n            onConfirmPasswordChange={onConfirmPasswordChange}\r\n            onClickEvent={isLoginPage ? onLoginButtonClick : onSignupButtonClick}\r\n        />\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAGe,SAAS,KAAK,EACzB,KAAK,EACL,QAAQ,EACR,WAAW,EACX,aAAa,EACb,eAAe,EACf,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,EACnB;IACJ,qBACI,6LAAC,+IAAA,CAAA,UAAS;QACN,OAAO;QACP,UAAU;QACV,aAAa;QACb,eAAe;QACf,kBAAiB;QACjB,iBAAiB;QACjB,kBAAkB;QAClB,qBAAoB;QACpB,mBAAmB;QACnB,WAAW,cAAc,UAAU;QACnC,4BAA2B;QAC3B,YAAY,cAAc,UAAU;QACpC,yBAAyB;QACzB,cAAc,cAAc,qBAAqB;;;;;;AAG7D;KA9BwB"}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1156, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/AuthPages/ThirdPartyAuth.tsx"],"sourcesContent":["import GoogleIcon from \"@mui/icons-material/Google\";\r\nimport { IThirdPartyAuth } from \"@/app/utils\";\r\n\r\nexport default function ThirdPartyAuth({ onGoogleIconClick, fontSize }: IThirdPartyAuth) {\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <GoogleIcon className=\"hover:cursor-pointer\" fontSize={fontSize} onClick={onGoogleIconClick} />\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAGe,SAAS,eAAe,EAAE,iBAAiB,EAAE,QAAQ,EAAmB;IACnF,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC,8JAAA,CAAA,UAAU;YAAC,WAAU;YAAuB,UAAU;YAAU,SAAS;;;;;;;;;;;AAGtF;KANwB"}},
    {"offset": {"line": 1187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1193, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/AuthPages/ToggleForms.tsx"],"sourcesContent":["import Link from \"next/link\";\r\n\r\nexport default function ToggleForms({ isLoginPage }: { isLoginPage: boolean }) {\r\n    return (\r\n        <Link href={isLoginPage ? \"/signup\" : \"/login\"}>\r\n            <div className=\"mt-6 text-center\">\r\n                <span>\r\n                    {isLoginPage ? \"Don't have an account?\" : \"Already Have An Account?\"}\r\n                    <button\r\n                        className=\"w-[100px] h-10 ml-2 p-2 bg-gradient-to-r from-gray-300 \r\n                            to-teal-400 text-white border rounded-lg cursor-pointer \r\n                            hover:from-orange-50 hover:to-pink-500\"\r\n                    >\r\n                        {isLoginPage ? \"Sign Up\" : \"Log In\"}\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,YAAY,EAAE,WAAW,EAA4B;IACzE,qBACI,6LAAC,+HAAA,CAAA,UAAI;QAAC,MAAM,cAAc,YAAY;kBAClC,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;;oBACI,cAAc,2BAA2B;kCAC1C,6LAAC;wBACG,WAAU;kCAIT,cAAc,YAAY;;;;;;;;;;;;;;;;;;;;;;AAMnD;KAjBwB"}},
    {"offset": {"line": 1239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/AuthPages/CodeModal.tsx"],"sourcesContent":["import { ICodeModal } from \"@/app/utils\";\r\n\r\nexport default function CodeModal({ handleCloseModal, handleVerify, email, setCode, code }: ICodeModal) {\r\n    return (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-gray-500 bg-opacity-50\">\r\n            <div className=\"bg-white p-8 rounded-lg shadow-md max-w-sm w-full\">\r\n                <button\r\n                    onClick={handleCloseModal}\r\n                    className=\"ml-80 text-gray-500 text-2xl hover:text-teal-300 transform hover:scale-125 transition-transform duration-100\"\r\n                >\r\n                    &times;\r\n                </button>\r\n                <h3 className=\"text-xl font-semibold text-center mb-4\">Enter a 6-Digit Code to verify your Email</h3>\r\n                <h6 className=\"mb-3\"> You're almost there! We've sent a 6 digit code to {email}.</h6>\r\n                <form onSubmit={handleVerify}>\r\n                    {\" \"}\r\n                    <input\r\n                        type=\"text\"\r\n                        value={code}\r\n                        onChange={(e) => setCode(e.target.value)}\r\n                        maxLength={6}\r\n                        className=\"w-full h-12 p-2 mb-4 border rounded-md border-gray-300 focus:outline-none focus:ring-2 focus:ring-teal-400\"\r\n                        placeholder=\"Enter Code\"\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={`w-full h-12 mt-4 bg-gradient-to-r from-gray-300 to-teal-400 text-white border rounded-lg cursor-pointer ${\r\n                            code.length !== 6 ? \"bg-gray-300 cursor-not-allowed\" : \"hover:from-orange-50 hover:to-pink-500\"\r\n                        }`}\r\n                        disabled={code.length !== 6}\r\n                    >\r\n                        Verify\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEe,SAAS,UAAU,EAAE,gBAAgB,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAc;IAClG,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBACG,SAAS;oBACT,WAAU;8BACb;;;;;;8BAGD,6LAAC;oBAAG,WAAU;8BAAyC;;;;;;8BACvD,6LAAC;oBAAG,WAAU;;wBAAO;wBAAoD;wBAAM;;;;;;;8BAC/E,6LAAC;oBAAK,UAAU;;wBACX;sCACD,6LAAC;4BACG,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;4BACvC,WAAW;4BACX,WAAU;4BACV,aAAY;;;;;;sCAEhB,6LAAC;4BACG,MAAK;4BACL,WAAW,CAAC,wGAAwG,EAChH,KAAK,MAAM,KAAK,IAAI,mCAAmC,0CACzD;4BACF,UAAU,KAAK,MAAM,KAAK;sCAC7B;;;;;;;;;;;;;;;;;;;;;;;AAOrB;KAnCwB"}},
    {"offset": {"line": 1335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1381, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/AuthPages/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { AddNewClientUser, auth, googleLogin, isCodeValid, storeGeneratedCode, useLogin } from \"@/app/firebase\";\r\nimport createNewClientUser from \"@/app/firebase/authentication/createNewClientUser\";\r\nimport { useUser } from \"@/app/store/useUser\";\r\nimport { sendVerificationEmail } from \"@/app/utils\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast, Toaster } from \"sonner\";\r\nimport Form from \"./Form\";\r\nimport ThirdPartyAuth from \"./ThirdPartyAuth\";\r\nimport ToggleForms from \"./ToggleForms\";\r\nimport CodeModal from \"./CodeModal\";\r\nimport { useClient } from \"@/app/store/useClient\";\r\n\r\nexport default function AuthPages() {\r\n    const router = useRouter();\r\n    const [code, setCode] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const isLoginPage = usePathname() === \"/login\";\r\n    const handleCloseModal = () => setShowCodeModal(false);\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [showCodeModal, setShowCodeModal] = useState<boolean | null>(null);\r\n    const [passwordIsVisible, setPasswordIsVisible] = useState<boolean>(false);\r\n    const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => setEmail(event.target.value);\r\n    const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => setPassword(event.target.value);\r\n    const onConfirmPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => setConfirmPassword(event.target.value);\r\n    const {\r\n        email: userEmail,\r\n        role,\r\n        username,\r\n        isVerified,\r\n        setUserRole,\r\n        setUserIsVerified,\r\n        setUserEmail,\r\n        setUserUsername,\r\n        fetchUserData,\r\n        user,\r\n    } = useUser();\r\n\r\n    const { initializeClient, isClient } = useClient();\r\n\r\n    useEffect(() => {\r\n        initializeClient();\r\n    }, [initializeClient]);\r\n\r\n    const handleSignupClick = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (!email || !password || !confirmPassword) {\r\n            toast.error(\"Email, password, and confirmation are required.\");\r\n            return;\r\n        }\r\n        setShowCodeModal(true);\r\n        const verificationResult = await sendVerificationEmail(email);\r\n        console.log(verificationResult, \"verification result\");\r\n        if (!verificationResult.success || !verificationResult.expirationDate) {\r\n            toast.error(verificationResult.error);\r\n            return;\r\n        }\r\n        const expirationDate = verificationResult.expirationDate;\r\n        const verificationCode = verificationResult.code;\r\n        const storeResult = await storeGeneratedCode(email, verificationCode, expirationDate);\r\n        if (!storeResult.success) {\r\n            toast.error(storeResult.error);\r\n            return;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = useUser.getState().subscribeToAuthState();\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const handleVerify = async (e: any) => {\r\n        e.preventDefault();\r\n        const validCode = await isCodeValid(email, code);\r\n\r\n        if (!validCode.success || !validCode.valid) {\r\n            toast.error(validCode.error);\r\n            return;\r\n        }\r\n        setCode(\"\");\r\n        setUserIsVerified(true);\r\n        setShowCodeModal(false);\r\n\r\n        const userCredentials = await createNewClientUser(email, password, confirmPassword);\r\n\r\n        if (!userCredentials?.success || !userCredentials?.user) {\r\n            toast.error(userCredentials?.error);\r\n            return;\r\n        }\r\n        const uid = userCredentials.user.uid;\r\n        const emailVerified = true;\r\n        const displayName = userCredentials.user.displayName;\r\n\r\n        const dbResult = await AddNewClientUser({\r\n            uid,\r\n            email,\r\n            displayName,\r\n            emailVerified,\r\n            setUserRole,\r\n            setUserIsVerified,\r\n            setUserEmail,\r\n            setUserUsername,\r\n        });\r\n        if (dbResult.success) router.push(\"/login\");\r\n    };\r\n\r\n    const onGoogleIconClick = async () => {\r\n        try {\r\n            const result = await googleLogin();\r\n            if (result.success && result.user) router.push(\"/\");\r\n            else if (result.error) throw Error(result.error);\r\n        } catch (error) {\r\n            console.error((error as Error).message);\r\n        }\r\n    };\r\n\r\n    const onLoginButtonClick = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (!email || !password) return;\r\n\r\n        try {\r\n            const result = await useLogin(email, password);\r\n            if (result.success && result.user) {\r\n                // Sync user data with store\r\n                const currentUser = auth.currentUser;\r\n                if (!currentUser) {\r\n                    const errorMessage = \"An error occurred. Please try again.\";\r\n                    toast.error(errorMessage);\r\n                    throw new Error(errorMessage);\r\n                }\r\n\r\n                useUser.getState().fetchUserData(currentUser.uid);\r\n                useUser.getState().setUserEmail(currentUser.email);\r\n                console.log(\"Forced user sync:\", currentUser);\r\n                console.log(\"Login successfull: \", result.user);\r\n                router.push(\"/\");\r\n            } else throw new Error(\"An error occurred. Please try again.\");\r\n        } catch (error) {\r\n            console.error((error as Error).message);\r\n        } finally {\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) router.push(\"/VideoPlayer\");\r\n    }, [user, router]);\r\n\r\n    if (!isClient) return; // return loading spinner\r\n\r\n    return (\r\n        <>\r\n            {isClient && (\r\n                <div className=\"bg-cover bg-center bg-wavy-lines flex items-stretch bg-grey-lighter min-h-screen\">\r\n                    <div className=\"pt-20 pb-10 w-96 bg-transparent border-2 border-black/30 backdrop-blur-lg shadow-md text-black rounded-lg p-10 mx-auto my-28\">\r\n                        {/* Form */}\r\n                        <Form\r\n                            passwordIsVisible={passwordIsVisible}\r\n                            email={email}\r\n                            password={password}\r\n                            confirmPassword={confirmPassword}\r\n                            isLoginPage={isLoginPage}\r\n                            onConfirmPasswordChange={onConfirmPasswordChange}\r\n                            onEmailChange={onEmailChange}\r\n                            onPasswordChange={onPasswordChange}\r\n                            onLoginButtonClick={onLoginButtonClick}\r\n                            onSignupButtonClick={handleSignupClick} // Custom handler\r\n                            onGoogleIconClick={onGoogleIconClick}\r\n                        />\r\n                        <hr className=\"my-5 text-center text-gray-700\" />\r\n                        <ThirdPartyAuth fontSize=\"medium\" onGoogleIconClick={onGoogleIconClick} /> {/* Third Party Authentication Icons */}\r\n                        <ToggleForms isLoginPage={isLoginPage} /> {/* 'Don't have an account?' And 'Already have an account?' */}\r\n                    </div>\r\n\r\n                    {/* Modal for 6-digit Code Verification */}\r\n                    {showCodeModal && (\r\n                        <CodeModal code={code} email={email} handleCloseModal={handleCloseModal} handleVerify={handleVerify} setCode={setCode} />\r\n                    )}\r\n\r\n                    <div className=\"fixed bottom-8 left-8 z-50 w-auto max-w-xs\">\r\n                        <Toaster duration={5000} richColors /> {/* Sonner Notification */}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}