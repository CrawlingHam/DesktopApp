{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/Loop.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMedia } from \"@/app/store\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport RepeatOneIcon from \"@mui/icons-material/RepeatOne\";\r\n\r\nconst Loop = () => {\r\n    const { toggleLoop } = useMedia();\r\n\r\n    const onLoop = () => toggleLoop(true);\r\n    return (\r\n        <StyledWrapper>\r\n            <button className=\"btn\" onClick={onLoop}>\r\n                <RepeatOneIcon className=\"icon\" />\r\n            </button>\r\n        </StyledWrapper>\r\n    );\r\n};\r\n\r\nconst wiggle = keyframes`\r\n    0%, 100% { transform: rotate(0deg); }\r\n    25% { transform: rotate(-10deg); }\r\n    50% { transform: rotate(10deg); }\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    .btn {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        border-radius: 10px;\r\n        border: none;\r\n        background-color: transparent;\r\n        position: relative;\r\n        cursor: pointer;\r\n        transition: transform 0.2s ease-in-out;\r\n        margin-left: 20px; /* Adjust margin as needed */\r\n    }\r\n\r\n    .btn::after {\r\n        content: \"Loop this Video\";\r\n        white-space: nowrap;\r\n        position: absolute;\r\n        font-size: 15px;\r\n        color: white;\r\n        font-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\", \"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transition: opacity 0.2s linear, top 0.2s linear;\r\n        top: 115%; /* Position the text below the button */\r\n    }\r\n\r\n    .btn:hover::after {\r\n        opacity: 1;\r\n        visibility: visible;\r\n        top: 105%; /* Position adjustment on hover */\r\n    }\r\n\r\n    .icon {\r\n        fill: black;\r\n        height: 28px;\r\n        width: 28px;\r\n        transition: fill 0.4s ease-in-out;\r\n    }\r\n\r\n    .btn:hover > .icon {\r\n        transform: scale(1.2); /* Scale effect on hover */\r\n        fill: rgb(255, 255, 255);\r\n    }\r\n\r\n    .btn:active > .icon {\r\n        animation: ${wiggle} 0.5s ease; /* Wiggle effect on click */\r\n    }\r\n`;\r\n\r\nexport default Loop;\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AAEA;AADA;;;;;AAGA,MAAM,OAAO;IACT,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAE9B,MAAM,SAAS,IAAM,WAAW;IAChC,qBACI,8OAAC;kBACG,cAAA,8OAAC;YAAO,WAAU;YAAM,SAAS;sBAC7B,cAAA,8OAAC,8JAAA,CAAA,UAAa;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIzC;AAEA,MAAM,SAAS,2KAAA,CAAA,YAAS,CAAC;;;;AAIzB,CAAC;AAED,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAgDd,EAAE,OAAO;;AAE5B,CAAC;uCAEc"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/formatTime.ts"],"sourcesContent":["export function formatTime(seconds: number) {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = Math.round(seconds % 60);\r\n\r\n    if (hours > 0) {\r\n        return `${hours}:${minutes.toString().padStart(2, \"0\")}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n    } else {\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS,WAAW,OAAe;IACtC,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;IACnC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ;IAC9C,MAAM,mBAAmB,KAAK,KAAK,CAAC,UAAU;IAE9C,IAAI,QAAQ,GAAG;QACX,OAAO,GAAG,MAAM,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,iBAAiB,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IAC5G,OAAO;QACH,OAAO,GAAG,QAAQ,CAAC,EAAE,iBAAiB,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IACvE;AACJ"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/randomCodeGenerator.ts"],"sourcesContent":["import { randomBytes } from \"crypto\";\r\n\r\nexport default function randomCodeGenerator() {\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const length = 6;\r\n    const code = Array.from(randomBytes(length))\r\n        .map((byte) => characters[byte % characters.length])\r\n        .join(\"\");\r\n\r\n    const minutes = 10;\r\n    const timelimit = minutes * 60 * 1000;\r\n    const expirationDate = Date.now() + timelimit;\r\n\r\n    return {\r\n        code,\r\n        expirationDate,\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEe,SAAS;IACpB,MAAM,aAAa;IACnB,MAAM,SAAS;IACf,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,GAAA,+FAAA,CAAA,cAAW,AAAD,EAAE,SAC/B,GAAG,CAAC,CAAC,OAAS,UAAU,CAAC,OAAO,WAAW,MAAM,CAAC,EAClD,IAAI,CAAC;IAEV,MAAM,UAAU;IAChB,MAAM,YAAY,UAAU,KAAK;IACjC,MAAM,iBAAiB,KAAK,GAAG,KAAK;IAEpC,OAAO;QACH;QACA;IACJ;AACJ"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/createSearchParams.ts"],"sourcesContent":["export function createSearchParams(params: Record<string, string>) {\r\n    const searchParams = new URLSearchParams();\r\n\r\n    setTimeout(() => {\r\n        Object.entries(params).forEach(([key, value]) => {\r\n            searchParams.set(key, value);\r\n        });\r\n    \r\n        const newUrl = `${window.location.pathname}?${searchParams.toString()}`;\r\n    \r\n        if (window.location.search !== `?${searchParams.toString()}`) {\r\n            window.history.replaceState(null, \"\", newUrl);\r\n        }\r\n    }, 1000);\r\n}"],"names":[],"mappings":";;;AAAO,SAAS,mBAAmB,MAA8B;IAC7D,MAAM,eAAe,IAAI;IAEzB,WAAW;QACP,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;YACxC,aAAa,GAAG,CAAC,KAAK;QAC1B;QAEA,MAAM,SAAS,GAAG,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI;QAEvE,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI,EAAE;YAC1D,OAAO,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI;QAC1C;IACJ,GAAG;AACP"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/Email/sendVerificationEmail.ts"],"sourcesContent":["export async function sendVerificationEmail(email: string) {\r\n    try {\r\n        const response = await fetch(\"/api/emails/verification\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const { data, code, expirationDate } = await response.json();\r\n            return { success: true, data, code, expirationDate };\r\n        } else {\r\n            const errorData = await response.json();\r\n            return { success: false, error: errorData.error || \"Failed to send email\" };\r\n        }\r\n    } catch (error) {\r\n        return { success: false, error: (error as Error).message };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,eAAe,sBAAsB,KAAa;IACrD,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,4BAA4B;YACrD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAM;QACjC;QAEA,IAAI,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,MAAM,SAAS,IAAI;YAC1D,OAAO;gBAAE,SAAS;gBAAM;gBAAM;gBAAM;YAAe;QACvD,OAAO;YACH,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO;gBAAE,SAAS;gBAAO,OAAO,UAAU,KAAK,IAAI;YAAuB;QAC9E;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YAAE,SAAS;YAAO,OAAO,AAAC,MAAgB,OAAO;QAAC;IAC7D;AACJ"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/setNewVideo.ts"],"sourcesContent":["import { useMedia } from \"@/app/store\";\r\nimport { createSearchParams } from \"../createSearchParams\";\r\nimport { Player } from \"../interfaces\";\r\nimport { containsVideoID } from \"./containsVideo\";\r\nimport getVideoDetails from \"./getVideoDetails\";\r\n\r\ntype SetVideo = (video: Player) => void;\r\n\r\nexport default async function setNewVideo(\r\n    setYoutubeVideo: SetVideo,\r\n    setTiktokVideo: SetVideo,\r\n    isPlaylistActive: boolean,\r\n    setSliderValue: (value: [number, number]) => void,\r\n    playlistID?: string | undefined\r\n) {\r\n    const { playlistVideos, queueVideos, currentVideo, setCurrentVideo } = useMedia();\r\n\r\n    const activeVideos = isPlaylistActive ? playlistVideos : queueVideos;\r\n    console.log(\"Active Videos:\", activeVideos); // Check active videos\r\n\r\n    console.log(currentVideo);\r\n    if (!currentVideo || activeVideos.length === 0) return;\r\n\r\n    const currentIndex = activeVideos.findIndex((video) => video?.videoID === currentVideo.videoID);\r\n    const nextIndex = (currentIndex + 1) % activeVideos.length;\r\n    const nextVideo = activeVideos[nextIndex];\r\n\r\n    console.log(\"Current Video:\", currentVideo); // Check current video\r\n    console.log(\"Next Video:\", nextVideo); // Check next video\r\n\r\n    if ((nextVideo && nextVideo.platform === \"youtube\") || (nextVideo && nextVideo.url.includes(\"youtube\"))) {\r\n        setTiktokVideo(null);\r\n        setYoutubeVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n        const { start, end } = nextVideo;\r\n        setTimeout(() => {\r\n            if (start && end) {\r\n                setSliderValue([parseInt(start), parseInt(end)]);\r\n            }\r\n        }, 500);\r\n    } else if ((nextVideo && nextVideo.platform === \"tiktok\") || (nextVideo && nextVideo.url.includes(\"tiktok\"))) {\r\n        console.log(\"Setting TikTok video:\", nextVideo.videoID); // Log next TikTok video\r\n        setYoutubeVideo(null);\r\n        setTiktokVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n        const index = nextVideo?.index?.toString();\r\n        if (playlistID && index) {\r\n            const newSearchParams: Record<string, string> = {\r\n                tVideoID: currentVideo.videoID,\r\n                list: playlistID,\r\n                index,\r\n            };\r\n            console.log(newSearchParams);\r\n            // createSearchParams(newSearchParams);\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    // const result = await getVideoDetails(url);\r\n    // if (!result) return;\r\n\r\n    // const videoDetails = result.soundCloudVideoDetails || result.tiktokVideoDetails || result.youtubeVideoDetails;\r\n    // if (!videoDetails) return;\r\n\r\n    // const { index, video } = containsVideoID(videos, videoDetails.videoID);\r\n    // if (!index || !video) return;\r\n\r\n    // const ccurrentVideo = videos[index];\r\n    // if (!currentVideo) return;\r\n\r\n    // const list = playlistID;\r\n    // const { start, end } = currentVideo;\r\n\r\n    // if (result.youtubeVideoDetails) {\r\n    //     if (start && end) {\r\n    //         if (!list || !index) {\r\n    //             setSliderValue([parseInt(start), parseInt(end)]);\r\n    //         } else {\r\n    //             setTimeout(() => {\r\n    //                 setSliderValue([parseInt(start), parseInt(end)]);\r\n    //             }, 500);\r\n    //         }\r\n    //     } else {\r\n    //         setSliderValue([0, duration]);\r\n    //     }\r\n\r\n    //     const extendedVideo: Player = {\r\n    //         ...currentVideo,\r\n    //         list: playlistID,\r\n    //         index: index.toString(),\r\n    //     };\r\n    //     setTiktokVideo(null);\r\n    //     setYoutubeVideo(extendedVideo);\r\n    // } else if (result.tiktokVideoDetails) {\r\n    //     const extendedVideo: Player = {\r\n    //         ...currentVideo,\r\n    //         list: playlistID,\r\n    //         index: index.toString(),\r\n    //     };\r\n    //     setYoutubeVideo(null);\r\n    //     setTiktokVideo(extendedVideo);\r\n    // }\r\n    // if (videos[index]) setCurrentVideo(videos[index]);\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/fetchTrackURL.ts"],"sourcesContent":["export default async function fetchTrackURL(trackURL: string) {\r\n    try {\r\n        const response = await fetch(`/api/scrape/soundcloud/track?url=${encodeURIComponent(trackURL)}`);\r\n        if (!response.ok) throw new Error(\"Network response was not ok\");\r\n\r\n        const data = await response.json();\r\n\r\n        const { href } = data;\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            href,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            href: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAe,eAAe,cAAc,QAAgB;IACxD,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,iCAAiC,EAAE,mBAAmB,WAAW;QAC/F,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAElC,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getTrackURL.ts"],"sourcesContent":["const cheerio = require(\"cheerio\");\r\n\r\nexport async function getTrackURL(embeddedTrackURL: string) {\r\n    try {\r\n        // Fetch the public SoundCloud page\r\n        const response = await fetch(embeddedTrackURL);\r\n        const html = await response.text();\r\n\r\n        // Load the page into Cheerio\r\n        const $ = cheerio.load(html);\r\n\r\n        // Get the real URL path from the embedded player page\r\n        const canonicalHref = $('link[rel=\"canonical\"]').attr('href');\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            href: canonicalHref ?? 'Canonical href not found',\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            href: null,\r\n        }\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA,MAAM;AAEC,eAAe,YAAY,gBAAwB;IACtD,IAAI;QACA,mCAAmC;QACnC,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,6BAA6B;QAC7B,MAAM,IAAI,QAAQ,IAAI,CAAC;QAEvB,sDAAsD;QACtD,MAAM,gBAAgB,EAAE,yBAAyB,IAAI,CAAC;QACtD,OAAO;YACH,SAAS;YACT,OAAO;YACP,MAAM,iBAAiB;QAC3B;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/sanitizeURLs.ts"],"sourcesContent":["function sanitizeTiktokURL(url: string) {\r\n    const match = url.match(/\\/video\\/(\\d+)/); // Regex to match the video ID\r\n    return match ? match[1] : null;\r\n}\r\nfunction sanitizeYoutubeShortsURL(url: string) {\r\n    const match = url.match(/\\/shorts\\/([\\w-]+)/)\r\n    return match ? match[1] : null\r\n}\r\nfunction sanitizeYoutubeURL(url: string): string | null {\r\n    const match = url.match(/(?:v=)([^\"&?/\\s]{11})/)\r\n    return match ? match[1] : null\r\n}\r\nfunction sanitizeEmbeddedYoutubeURL(url: string): string | null {\r\n    const match = url.match(/youtu\\.be\\/([^\"&?/\\s]{11})/)\r\n    return match ? match[1] : null\r\n}\r\n\r\nexport {\r\n    sanitizeTiktokURL,\r\n    sanitizeYoutubeURL,\r\n    sanitizeYoutubeShortsURL,\r\n    sanitizeEmbeddedYoutubeURL,\r\n}"],"names":[],"mappings":";;;;;;AAAA,SAAS,kBAAkB,GAAW;IAClC,MAAM,QAAQ,IAAI,KAAK,CAAC,mBAAmB,8BAA8B;IACzE,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,yBAAyB,GAAW;IACzC,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,mBAAmB,GAAW;IACnC,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,2BAA2B,GAAW;IAC3C,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B"}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getVideoID.ts"],"sourcesContent":["import { \r\n    sanitizeTiktokURL,\r\n    sanitizeYoutubeURL,\r\n    sanitizeYoutubeShortsURL,\r\n    sanitizeEmbeddedYoutubeURL,\r\n } from './sanitizeURLs'\r\n\r\nexport default function getVideoID(platform: string, url: string) {\r\n    if (platform === \"Youtube\") return sanitizeYoutubeURL(url)\r\n    else if (platform === 'Youtube Shorts') return sanitizeYoutubeShortsURL(url)\r\n    else if (platform === 'Youtu.be') return sanitizeEmbeddedYoutubeURL(url)\r\n    else if (platform === 'Tiktok') return sanitizeTiktokURL(url)\r\n    else if (platform === 'SoundCloud') return 'SoundCloud'\r\n    else return null\r\n}"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,WAAW,QAAgB,EAAE,GAAW;IAC5D,IAAI,aAAa,WAAW,OAAO,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAD,EAAE;SACjD,IAAI,aAAa,kBAAkB,OAAO,CAAA,GAAA,2IAAA,CAAA,2BAAwB,AAAD,EAAE;SACnE,IAAI,aAAa,YAAY,OAAO,CAAA,GAAA,2IAAA,CAAA,6BAA0B,AAAD,EAAE;SAC/D,IAAI,aAAa,UAAU,OAAO,CAAA,GAAA,2IAAA,CAAA,oBAAiB,AAAD,EAAE;SACpD,IAAI,aAAa,cAAc,OAAO;SACtC,OAAO;AAChB"}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getPlatform.ts"],"sourcesContent":["export default function getPlatform(url: string) {\r\n    const supportedPlatforms: { regex: RegExp; name: string }[] = [\r\n        { regex: /youtu\\.be/i, name: \"Youtu.be\" },\r\n        { regex: /tiktok\\.com/i, name: \"Tiktok\" },\r\n        { regex: /youtube\\.com/i, name: \"Youtube\" },\r\n        { regex: /twitter\\.com/i, name: \"Twitter\" },\r\n        { regex: /instagram\\.com/i, name: \"Instagram\" },\r\n        { regex: /soundcloud\\.com/i, name: \"SoundCloud\" },\r\n    ];\r\n\r\n    for (const platform of supportedPlatforms) {\r\n        if (platform.regex.test(url)) {\r\n            if (platform.name === \"Youtube\" && url.includes(\"shorts\")) return \"Youtube Shorts\";\r\n            return platform.name;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n"],"names":[],"mappings":";;;AAAe,SAAS,YAAY,GAAW;IAC3C,MAAM,qBAAwD;QAC1D;YAAE,OAAO;YAAc,MAAM;QAAW;QACxC;YAAE,OAAO;YAAgB,MAAM;QAAS;QACxC;YAAE,OAAO;YAAiB,MAAM;QAAU;QAC1C;YAAE,OAAO;YAAiB,MAAM;QAAU;QAC1C;YAAE,OAAO;YAAmB,MAAM;QAAY;QAC9C;YAAE,OAAO;YAAoB,MAAM;QAAa;KACnD;IAED,KAAK,MAAM,YAAY,mBAAoB;QACvC,IAAI,SAAS,KAAK,CAAC,IAAI,CAAC,MAAM;YAC1B,IAAI,SAAS,IAAI,KAAK,aAAa,IAAI,QAAQ,CAAC,WAAW,OAAO;YAClE,OAAO,SAAS,IAAI;QACxB;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/fetchTrackDetails.ts"],"sourcesContent":["export default async function fetchTrackDetails(trackURL: string) {\r\n    try {\r\n        const response = await fetch(`/api/scrape/soundcloud?url=${encodeURIComponent(trackURL)}`);\r\n        if (!response.ok) throw new Error(\"Network response was not ok\");\r\n\r\n        const data = await response.json();\r\n\r\n        const { title, creator, thumbnail, trackID } = data;\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title,\r\n            creator,\r\n            thumbnail,\r\n            trackID,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n            trackID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAe,eAAe,kBAAkB,QAAgB;IAC5D,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,2BAA2B,EAAE,mBAAmB,WAAW;QACzF,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAElC,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG;QAE/C,OAAO;YACH,SAAS;YACT,OAAO;YACP;YACA;YACA;YACA;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;YACX,SAAS;QACb;IACJ;AACJ"}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getYoutubeVideoDetails.ts"],"sourcesContent":["const YOUTUBE_API_KEY = process.env.NEXT_PUBLIC_YOUTUBE_API_KEY\r\n\r\nexport default async function getYoutubeVideoDetails(videoID: string) {\r\n    try {\r\n        const result = await fetch(\r\n            `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoID}&key=${YOUTUBE_API_KEY}`\r\n        )\r\n\r\n        if (!result.ok) throw new Error(`Failed to fetch video details: ${result.statusText}`)\r\n\r\n        const data = await result.json()\r\n        if (data.items && data.items.length < 0) throw new Error(`No video Found`)\r\n\r\n        const video = data.items[0].snippet\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: video.title,\r\n            creator: video.channelTitle,\r\n            thumbnail: video.thumbnails?.high?.url || video.thumbnails?.medium?.url || video.thumbnails?.default?.url,\r\n        }\r\n    }\r\n    catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n        }\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA,MAAM;AAES,eAAe,uBAAuB,OAAe;IAChE,IAAI;QACA,MAAM,SAAS,MAAM,MACjB,CAAC,6DAA6D,EAAE,QAAQ,KAAK,EAAE,iBAAiB;QAGpG,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,OAAO,UAAU,EAAE;QAErF,MAAM,OAAO,MAAM,OAAO,IAAI;QAC9B,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,MAAM,CAAC,cAAc,CAAC;QAEzE,MAAM,QAAQ,KAAK,KAAK,CAAC,EAAE,CAAC,OAAO;QAEnC,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,MAAM,KAAK;YAClB,SAAS,MAAM,YAAY;YAC3B,WAAW,MAAM,UAAU,EAAE,MAAM,OAAO,MAAM,UAAU,EAAE,QAAQ,OAAO,MAAM,UAAU,EAAE,SAAS;QAC1G;IACJ,EACA,OAAO,OAAO;QACV,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;QACf;IACJ;AACJ"}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/fetchTiktokVideoDetails.ts"],"sourcesContent":["export default async function fetchTiktokVideoDetails(url: string) {\r\n    try {\r\n        const response = await fetch(`/api/tiktok/video?url=${encodeURIComponent(url)}`);\r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n        }\r\n        \r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            data,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            data: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAe,eAAe,wBAAwB,GAAW;IAC7D,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,mBAAmB,MAAM;QAC/E,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getVideoDetails.ts"],"sourcesContent":["import getVideoID from \"./getVideoID\";\r\nimport getPlatform from \"./getPlatform\";\r\nimport fetchTrackDetails from \"./fetchTrackDetails\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\nimport fetchTiktokVideoDetails from \"./fetchTiktokVideoDetails\";\r\n\r\nexport default async function getVideoDetails(url: string) {\r\n    const platform = getPlatform(url);\r\n    if (!platform) return null;\r\n\r\n    const videoID = getVideoID(platform, url);\r\n    if (!videoID) return null;\r\n\r\n    const PlayerDetails: IPlayerDetails = {\r\n        tiktokVideoDetails: null,\r\n        youtubeVideoDetails: null,\r\n        soundCloudVideoDetails: null,\r\n    };\r\n\r\n    if (platform === \"Youtube\") {\r\n        const result = await getYoutubeVideoDetails(videoID);\r\n        if (result.error) return null;\r\n\r\n        const { thumbnail, title, creator } = result;\r\n        return {\r\n            ...PlayerDetails,\r\n            youtubeVideoDetails: {\r\n                title,\r\n                videoID,\r\n                thumbnail,\r\n                creator,\r\n                url: `https://www.youtube.com/watch?v=${videoID}`,\r\n            },\r\n        };\r\n    } else if (platform === \"Tiktok\") {\r\n        const result = await fetchTiktokVideoDetails(url);\r\n        if (result.error) return null;\r\n\r\n        const { creator, title, thumbnail } = result.data;\r\n        const creatorAndID = `${creator}+${videoID}`;\r\n\r\n        return {\r\n            ...PlayerDetails,\r\n            tiktokVideoDetails: {\r\n                url,\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                videoID: creatorAndID,\r\n            },\r\n        };\r\n    } else if (platform === \"SoundCloud\") {\r\n        const result = await fetchTrackDetails(url);\r\n        if (result.error) return null;\r\n\r\n        const { creator, thumbnail, title, trackID } = result;\r\n        console.log({ creator, thumbnail, title, trackID })\r\n        return {\r\n            ...PlayerDetails,\r\n            soundCloudVideoDetails: {\r\n                url,\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                videoID: trackID,\r\n            },\r\n        };\r\n    }\r\n}\r\n\r\ninterface IPlayerDetails {\r\n    tiktokVideoDetails: null;\r\n    youtubeVideoDetails: null;\r\n    soundCloudVideoDetails: null;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEe,eAAe,gBAAgB,GAAW;IACrD,MAAM,WAAW,CAAA,GAAA,0IAAA,CAAA,UAAW,AAAD,EAAE;IAC7B,IAAI,CAAC,UAAU,OAAO;IAEtB,MAAM,UAAU,CAAA,GAAA,yIAAA,CAAA,UAAU,AAAD,EAAE,UAAU;IACrC,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,gBAAgC;QAClC,oBAAoB;QACpB,qBAAqB;QACrB,wBAAwB;IAC5B;IAEA,IAAI,aAAa,WAAW;QACxB,MAAM,SAAS,MAAM,CAAA,GAAA,qJAAA,CAAA,UAAsB,AAAD,EAAE;QAC5C,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;QACtC,OAAO;YACH,GAAG,aAAa;YAChB,qBAAqB;gBACjB;gBACA;gBACA;gBACA;gBACA,KAAK,CAAC,gCAAgC,EAAE,SAAS;YACrD;QACJ;IACJ,OAAO,IAAI,aAAa,UAAU;QAC9B,MAAM,SAAS,MAAM,CAAA,GAAA,sJAAA,CAAA,UAAuB,AAAD,EAAE;QAC7C,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,OAAO,IAAI;QACjD,MAAM,eAAe,GAAG,QAAQ,CAAC,EAAE,SAAS;QAE5C,OAAO;YACH,GAAG,aAAa;YAChB,oBAAoB;gBAChB;gBACA;gBACA;gBACA;gBACA,SAAS;YACb;QACJ;IACJ,OAAO,IAAI,aAAa,cAAc;QAClC,MAAM,SAAS,MAAM,CAAA,GAAA,gJAAA,CAAA,UAAiB,AAAD,EAAE;QACvC,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;QAC/C,QAAQ,GAAG,CAAC;YAAE;YAAS;YAAW;YAAO;QAAQ;QACjD,OAAO;YACH,GAAG,aAAa;YAChB,wBAAwB;gBACpB;gBACA;gBACA;gBACA;gBACA,SAAS;YACb;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getTrackDetails.ts"],"sourcesContent":["const cheerio = require(\"cheerio\");\r\n\r\nexport async function getTrackDetails(trackUrl: string) {\r\n    try {\r\n        // Fetch the public SoundCloud page\r\n        const response = await fetch(trackUrl);\r\n        const html = await response.text();\r\n\r\n        // Load the page into Cheerio\r\n        const $ = cheerio.load(html);\r\n\r\n        // Look for the details in the Open Graph metadata\r\n        const thumbnail = $('meta[property=\"og:image\"]').attr(\"content\");\r\n        const title = $('meta[property=\"og:title\"]').attr(\"content\");\r\n\r\n        // Parse creator name:\r\n        let creator;\r\n        const fullTitle = $(\"title\").text();\r\n        const match = fullTitle.match(/ by (.*?) \\| Listen online/i);\r\n        if (match) {\r\n            creator = match[1]?.trim();\r\n        }\r\n\r\n        // const canonicalHref = $('link[rel=\"canonical\"]').attr('href');\r\n\r\n        // Parse track ID\r\n        let trackID = null;\r\n\r\n        // Try to find the track ID from twitter:player\r\n        const playerMeta = $('meta[property=\"twitter:player\"]').attr(\"content\");\r\n        if (playerMeta) {\r\n            const match = playerMeta.match(/tracks\\/(\\d+)/);\r\n            if (match) {\r\n                trackID = match[1];\r\n            }\r\n        }\r\n\r\n        // If trackID is still not found, try twitter:app:url:googleplay\r\n        if (!trackID) {\r\n            const appMeta = $('meta[property=\"twitter:app:url:googleplay\"]').attr(\"content\");\r\n            if (appMeta) {\r\n                const match = appMeta.match(/sounds:(\\d+)/);\r\n                if (match) {\r\n                    trackID = match[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: title ?? \"Title not found\",\r\n            creator: creator ?? \"Creator not found\",\r\n            thumbnail: thumbnail ?? \"Thumbnail not found\",\r\n            trackID: trackID ?? \"Track ID not found\",\r\n        };\r\n    } catch (error) {\r\n        console.error(\"Error fetching track page:\", error);\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n            trackID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA,MAAM;AAEC,eAAe,gBAAgB,QAAgB;IAClD,IAAI;QACA,mCAAmC;QACnC,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,6BAA6B;QAC7B,MAAM,IAAI,QAAQ,IAAI,CAAC;QAEvB,kDAAkD;QAClD,MAAM,YAAY,EAAE,6BAA6B,IAAI,CAAC;QACtD,MAAM,QAAQ,EAAE,6BAA6B,IAAI,CAAC;QAElD,sBAAsB;QACtB,IAAI;QACJ,MAAM,YAAY,EAAE,SAAS,IAAI;QACjC,MAAM,QAAQ,UAAU,KAAK,CAAC;QAC9B,IAAI,OAAO;YACP,UAAU,KAAK,CAAC,EAAE,EAAE;QACxB;QAEA,iEAAiE;QAEjE,iBAAiB;QACjB,IAAI,UAAU;QAEd,+CAA+C;QAC/C,MAAM,aAAa,EAAE,mCAAmC,IAAI,CAAC;QAC7D,IAAI,YAAY;YACZ,MAAM,QAAQ,WAAW,KAAK,CAAC;YAC/B,IAAI,OAAO;gBACP,UAAU,KAAK,CAAC,EAAE;YACtB;QACJ;QAEA,gEAAgE;QAChE,IAAI,CAAC,SAAS;YACV,MAAM,UAAU,EAAE,+CAA+C,IAAI,CAAC;YACtE,IAAI,SAAS;gBACT,MAAM,QAAQ,QAAQ,KAAK,CAAC;gBAC5B,IAAI,OAAO;oBACP,UAAU,KAAK,CAAC,EAAE;gBACtB;YACJ;QACJ;QAEA,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,SAAS;YAChB,SAAS,WAAW;YACpB,WAAW,aAAa;YACxB,SAAS,WAAW;QACxB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;YACX,SAAS;QACb;IACJ;AACJ"}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createVideoObject.ts"],"sourcesContent":["import { Player } from \"../interfaces\";\r\n\r\nexport default function createVideoObject(duration: number, tiktokVideo?: Player, youtubeVideo?: Player, soundCloudVideo?: Player): Player | null {\r\n    const video = tiktokVideo || youtubeVideo || soundCloudVideo;\r\n    if (!video) return null;\r\n\r\n    // Fetch url params\r\n    const params = new URLSearchParams(window.location.search);\r\n    const soundCloudVideoID = params.get(\"sVideoID\");\r\n    const youtubeVideoID = params.get(\"yVideoID\");\r\n    const tiktokVideoID = params.get(\"tVideoID\");\r\n    const start = params.get(\"start\");\r\n    const index = params.get(\"index\");\r\n    const list = params.get(\"list\");\r\n    const end = params.get(\"end\");\r\n\r\n    return {\r\n        ...video,\r\n        start: start || video.start || \"0\",\r\n        end: end || video.end || duration.toString(),\r\n        platform: tiktokVideo ? \"tiktok\" : youtubeVideo ? \"youtube\" : \"soundcloud\",\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAEe,SAAS,kBAAkB,QAAgB,EAAE,WAAoB,EAAE,YAAqB,EAAE,eAAwB;IAC7H,MAAM,QAAQ,eAAe,gBAAgB;IAC7C,IAAI,CAAC,OAAO,OAAO;IAEnB,mBAAmB;IACnB,MAAM,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACzD,MAAM,oBAAoB,OAAO,GAAG,CAAC;IACrC,MAAM,iBAAiB,OAAO,GAAG,CAAC;IAClC,MAAM,gBAAgB,OAAO,GAAG,CAAC;IACjC,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,MAAM,OAAO,GAAG,CAAC;IAEvB,OAAO;QACH,GAAG,KAAK;QACR,OAAO,SAAS,MAAM,KAAK,IAAI;QAC/B,KAAK,OAAO,MAAM,GAAG,IAAI,SAAS,QAAQ;QAC1C,UAAU,cAAc,WAAW,eAAe,YAAY;IAClE;AACJ"}},
    {"offset": {"line": 925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 931, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createNewVideo.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\n\r\nexport default function createNewVideo(required: Player, optionals?: Record<string, string>) {\r\n    if (!required) return;\r\n\r\n    return {\r\n        ...required,\r\n        ...optionals,\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAEe,SAAS,eAAe,QAAgB,EAAE,SAAkC;IACvF,IAAI,CAAC,UAAU;IAEf,OAAO;QACH,GAAG,QAAQ;QACX,GAAG,SAAS;IAChB;AACJ"}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createVideo.ts"],"sourcesContent":["import createNewVideo from \"./createNewVideo\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\nimport { ICreateVideo, Player } from \"../interfaces\";\r\nimport fetchTiktokVideoDetails from \"./fetchTiktokVideoDetails\";\r\nimport fetchTrackURL from \"./fetchTrackURL\";\r\nimport fetchTrackDetails from \"./fetchTrackDetails\";\r\n\r\nexport default async function createVideo({ videoID, platform, setYoutubeVideo, setTiktokVideo, setSoundCloudVideo, optionals }: ICreateVideo) {\r\n    switch (platform) {\r\n        case \"youtube\":\r\n            if (typeof setYoutubeVideo === \"undefined\" || !setYoutubeVideo) return;\r\n\r\n            const youtubeResults = await getYoutubeVideoDetails(videoID);\r\n            if (!youtubeResults) return;\r\n\r\n            console.log(youtubeResults.creator);\r\n\r\n            const requiredYoutubeVideoDetails: Player = {\r\n                videoID: videoID,\r\n                title: youtubeResults.title,\r\n                platform: \"youtube\",\r\n                creator: youtubeResults.creator,\r\n                thumbnail: youtubeResults.thumbnail,\r\n                url: `https://www.youtube.com/watch?v=${videoID}`,\r\n            };\r\n\r\n            const newYoutubeVideo = createNewVideo(requiredYoutubeVideoDetails, optionals);\r\n            if (newYoutubeVideo) setYoutubeVideo(newYoutubeVideo);\r\n            break;\r\n\r\n        case \"tiktok\":\r\n            if (typeof setTiktokVideo === \"undefined\" || !setTiktokVideo) return;\r\n\r\n            const tiktokVideoURL = `https://www.tiktok.com/@${videoID.split(\"+\")[0]}/video/${videoID.split(\"+\")[1]}`;\r\n            const tiktokResults = await fetchTiktokVideoDetails(tiktokVideoURL);\r\n            if (tiktokResults.error) return null;\r\n            const { creator, title, thumbnail } = tiktokResults.data;\r\n            const creatorAndID = `${creator}+${videoID}`;\r\n            const requiredTiktokVideoDetails: Player = {\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                platform: \"tiktok\",\r\n                url: tiktokVideoURL,\r\n                videoID,\r\n            };\r\n            const newTiktokVideo = createNewVideo(requiredTiktokVideoDetails, optionals);\r\n            if (newTiktokVideo) setTiktokVideo(newTiktokVideo);\r\n            break;\r\n\r\n        case \"soundcloud\":\r\n            if (typeof setSoundCloudVideo === \"undefined\" || !setSoundCloudVideo) return;\r\n\r\n            const embedUrl = `https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${videoID}&color=%23ff5500&auto_play=true&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true`;\r\n            const extraction = await fetchTrackURL(embedUrl);\r\n            if (!extraction.success) return;\r\n\r\n            const soundCloudResults = await fetchTrackDetails(extraction.href);\r\n            if (soundCloudResults.success) {\r\n                const { title, creator, thumbnail, trackID } = soundCloudResults;\r\n                const newEmbedUrl = `https://api.soundcloud.com/tracks/${videoID}`;\r\n\r\n                const requiredSoundCloudVideoDetails: Player = {\r\n                    title,\r\n                    creator,\r\n                    thumbnail,\r\n                    videoID: trackID,\r\n                    url: newEmbedUrl,\r\n                    platform: \"soundcloud\",\r\n                };\r\n                const newSoundCloudVideo = createNewVideo(requiredSoundCloudVideoDetails, optionals);\r\n                if (newSoundCloudVideo) setSoundCloudVideo(newSoundCloudVideo);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;;;;;;AAEe,eAAe,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,SAAS,EAAgB;IACzI,OAAQ;QACJ,KAAK;YACD,IAAI,OAAO,oBAAoB,eAAe,CAAC,iBAAiB;YAEhE,MAAM,iBAAiB,MAAM,CAAA,GAAA,qJAAA,CAAA,UAAsB,AAAD,EAAE;YACpD,IAAI,CAAC,gBAAgB;YAErB,QAAQ,GAAG,CAAC,eAAe,OAAO;YAElC,MAAM,8BAAsC;gBACxC,SAAS;gBACT,OAAO,eAAe,KAAK;gBAC3B,UAAU;gBACV,SAAS,eAAe,OAAO;gBAC/B,WAAW,eAAe,SAAS;gBACnC,KAAK,CAAC,gCAAgC,EAAE,SAAS;YACrD;YAEA,MAAM,kBAAkB,CAAA,GAAA,6IAAA,CAAA,UAAc,AAAD,EAAE,6BAA6B;YACpE,IAAI,iBAAiB,gBAAgB;YACrC;QAEJ,KAAK;YACD,IAAI,OAAO,mBAAmB,eAAe,CAAC,gBAAgB;YAE9D,MAAM,iBAAiB,CAAC,wBAAwB,EAAE,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE;YACxG,MAAM,gBAAgB,MAAM,CAAA,GAAA,sJAAA,CAAA,UAAuB,AAAD,EAAE;YACpD,IAAI,cAAc,KAAK,EAAE,OAAO;YAChC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,cAAc,IAAI;YACxD,MAAM,eAAe,GAAG,QAAQ,CAAC,EAAE,SAAS;YAC5C,MAAM,6BAAqC;gBACvC;gBACA;gBACA;gBACA,UAAU;gBACV,KAAK;gBACL;YACJ;YACA,MAAM,iBAAiB,CAAA,GAAA,6IAAA,CAAA,UAAc,AAAD,EAAE,4BAA4B;YAClE,IAAI,gBAAgB,eAAe;YACnC;QAEJ,KAAK;YACD,IAAI,OAAO,uBAAuB,eAAe,CAAC,oBAAoB;YAEtE,MAAM,WAAW,CAAC,yEAAyE,EAAE,QAAQ,oIAAoI,CAAC;YAC1O,MAAM,aAAa,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAa,AAAD,EAAE;YACvC,IAAI,CAAC,WAAW,OAAO,EAAE;YAEzB,MAAM,oBAAoB,MAAM,CAAA,GAAA,gJAAA,CAAA,UAAiB,AAAD,EAAE,WAAW,IAAI;YACjE,IAAI,kBAAkB,OAAO,EAAE;gBAC3B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG;gBAC/C,MAAM,cAAc,CAAC,kCAAkC,EAAE,SAAS;gBAElE,MAAM,iCAAyC;oBAC3C;oBACA;oBACA;oBACA,SAAS;oBACT,KAAK;oBACL,UAAU;gBACd;gBACA,MAAM,qBAAqB,CAAA,GAAA,6IAAA,CAAA,UAAc,AAAD,EAAE,gCAAgC;gBAC1E,IAAI,oBAAoB,mBAAmB;YAC/C;YAEA;QAEJ;YACI;IACR;AACJ"}},
    {"offset": {"line": 1021, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1027, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/setNewPlayerVideo.ts"],"sourcesContent":["import { fetchTiktokVideoDetails, Player } from \"../index\";\r\nimport createVideo from \"./createVideo\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\n\r\nexport default async function setNewPlayerVideo(\r\n    setTiktokVideo: (tiktokVideo: Player) => void,\r\n    setYoutubeVideo: (youtubeVideo: Player) => void,\r\n    setSliderValue: (value: [number, number]) => void,\r\n    setSoundCloudVideo: (soundCloudVideo: Player) => void\r\n) {\r\n    // Fetch url params\r\n    const params = new URLSearchParams(window.location.search);\r\n    const soundCloudVideoID = params.get(\"sVideoID\");\r\n    const youtubeVideoID = params.get(\"yVideoID\");\r\n    const tiktokVideoID = params.get(\"tVideoID\");\r\n    const start = params.get(\"start\");\r\n    const index = params.get(\"index\");\r\n    const list = params.get(\"list\");\r\n    const end = params.get(\"end\");\r\n\r\n    // Default video\r\n    const defaultVideoID = \"FfsINwUQ75Q\";\r\n    const defaultUrl = `https://www.youtube.com/watch?v=${defaultVideoID}`;\r\n\r\n    // Youtube\r\n    const youtube_all = youtubeVideoID && start && end && list && index;\r\n    const youtube_base = youtubeVideoID && !start && !end && !list && !index;\r\n    const youtube_base_start_end = youtubeVideoID && start && end && !list && !index;\r\n\r\n    // Tiktok\r\n    const tiktok_all = tiktokVideoID && list && index;\r\n    const tiktok_base = tiktokVideoID && !list && !index;\r\n\r\n    // SoundCloud\r\n    const soundCloud_all = soundCloudVideoID && start && end && list && index;\r\n    const soundCloud_base = soundCloudVideoID && !start && !end && !list && !index;\r\n    const soundCloud_start_end = soundCloudVideoID && start && end && !list && !index;\r\n\r\n    // Default\r\n    const default_ = !youtubeVideoID && !tiktokVideoID && !soundCloudVideoID && !start && !end && !list && !index;\r\n\r\n    // Clear all video states\r\n    setTiktokVideo(null);\r\n    setYoutubeVideo(null);\r\n    setSoundCloudVideo(null);\r\n\r\n    // Play default video if no url params exist\r\n    if (params.size === 0 || default_) {\r\n        const result = await getYoutubeVideoDetails(defaultVideoID);\r\n        if (!result.success) return;\r\n\r\n        setYoutubeVideo({\r\n            url: defaultUrl,\r\n            platform: \"youtube\",\r\n            title: result.title,\r\n            creator: result.creator,\r\n            videoID: defaultVideoID,\r\n            thumbnail: result.thumbnail,\r\n        });\r\n    } else if (youtube_base) {\r\n        await createVideo({ setYoutubeVideo, platform: \"youtube\", videoID: youtubeVideoID });\r\n    } else if (youtube_all || youtube_base_start_end) {\r\n        await createVideo({\r\n            platform: \"youtube\",\r\n            optionals: { start, end },\r\n            setYoutubeVideo,\r\n            videoID: youtubeVideoID,\r\n        });\r\n        setTimeout(() => {\r\n            setSliderValue([parseInt(start), parseInt(end)]);\r\n        }, 1000);\r\n    } else if (tiktok_base || tiktok_all) {\r\n        await createVideo({ setTiktokVideo, platform: \"tiktok\", videoID: tiktokVideoID });\r\n    } else if (soundCloud_base) {\r\n        console.log('running soundcloud base')\r\n        await createVideo({ setSoundCloudVideo, platform: \"soundcloud\", videoID: soundCloudVideoID });\r\n    } else if (soundCloud_start_end || soundCloud_all) {\r\n        console.log('running soundcloud start_end or all')\r\n        await createVideo({\r\n            platform: \"soundcloud\",\r\n            optionals: { start, end },\r\n            setSoundCloudVideo,\r\n            videoID: soundCloudVideoID,\r\n        });\r\n        setTimeout(() => {\r\n            setSliderValue([parseInt(start), parseInt(end)]);\r\n        }, 1000);\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,kBAC1B,cAA6C,EAC7C,eAA+C,EAC/C,cAAiD,EACjD,kBAAqD;IAErD,mBAAmB;IACnB,MAAM,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACzD,MAAM,oBAAoB,OAAO,GAAG,CAAC;IACrC,MAAM,iBAAiB,OAAO,GAAG,CAAC;IAClC,MAAM,gBAAgB,OAAO,GAAG,CAAC;IACjC,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,MAAM,OAAO,GAAG,CAAC;IAEvB,gBAAgB;IAChB,MAAM,iBAAiB;IACvB,MAAM,aAAa,CAAC,gCAAgC,EAAE,gBAAgB;IAEtE,UAAU;IACV,MAAM,cAAc,kBAAkB,SAAS,OAAO,QAAQ;IAC9D,MAAM,eAAe,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IACnE,MAAM,yBAAyB,kBAAkB,SAAS,OAAO,CAAC,QAAQ,CAAC;IAE3E,SAAS;IACT,MAAM,aAAa,iBAAiB,QAAQ;IAC5C,MAAM,cAAc,iBAAiB,CAAC,QAAQ,CAAC;IAE/C,aAAa;IACb,MAAM,iBAAiB,qBAAqB,SAAS,OAAO,QAAQ;IACpE,MAAM,kBAAkB,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IACzE,MAAM,uBAAuB,qBAAqB,SAAS,OAAO,CAAC,QAAQ,CAAC;IAE5E,UAAU;IACV,MAAM,WAAW,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IAExG,yBAAyB;IACzB,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IAEnB,4CAA4C;IAC5C,IAAI,OAAO,IAAI,KAAK,KAAK,UAAU;QAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,qJAAA,CAAA,UAAsB,AAAD,EAAE;QAC5C,IAAI,CAAC,OAAO,OAAO,EAAE;QAErB,gBAAgB;YACZ,KAAK;YACL,UAAU;YACV,OAAO,OAAO,KAAK;YACnB,SAAS,OAAO,OAAO;YACvB,SAAS;YACT,WAAW,OAAO,SAAS;QAC/B;IACJ,OAAO,IAAI,cAAc;QACrB,MAAM,CAAA,GAAA,0IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAiB,UAAU;YAAW,SAAS;QAAe;IACtF,OAAO,IAAI,eAAe,wBAAwB;QAC9C,MAAM,CAAA,GAAA,0IAAA,CAAA,UAAW,AAAD,EAAE;YACd,UAAU;YACV,WAAW;gBAAE;gBAAO;YAAI;YACxB;YACA,SAAS;QACb;QACA,WAAW;YACP,eAAe;gBAAC,SAAS;gBAAQ,SAAS;aAAK;QACnD,GAAG;IACP,OAAO,IAAI,eAAe,YAAY;QAClC,MAAM,CAAA,GAAA,0IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAgB,UAAU;YAAU,SAAS;QAAc;IACnF,OAAO,IAAI,iBAAiB;QACxB,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAA,GAAA,0IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAoB,UAAU;YAAc,SAAS;QAAkB;IAC/F,OAAO,IAAI,wBAAwB,gBAAgB;QAC/C,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAA,GAAA,0IAAA,CAAA,UAAW,AAAD,EAAE;YACd,UAAU;YACV,WAAW;gBAAE;gBAAO;YAAI;YACxB;YACA,SAAS;QACb;QACA,WAAW;YACP,eAAe;gBAAC,SAAS;gBAAQ,SAAS;aAAK;QACnD,GAAG;IACP;AACJ"}},
    {"offset": {"line": 1130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/containsVideo.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\n\r\nfunction containsVideo(videos: Player[], newVideo: Player): boolean {\r\n    return videos.some((video) => (video && video.url) === (newVideo && newVideo.url));\r\n}\r\n\r\nfunction containsVideoID(videos: Player[], videoID: string) {\r\n    const index = videos.findIndex((video) => (video && video.videoID) === videoID);\r\n    return {\r\n        video: index !== -1 ? videos[index] : null,\r\n        index: index !== -1 ? index : null,\r\n    };\r\n}\r\n\r\nexport {\r\n    containsVideo,\r\n    containsVideoID,\r\n}"],"names":[],"mappings":";;;;AAEA,SAAS,cAAc,MAAgB,EAAE,QAAgB;IACrD,OAAO,OAAO,IAAI,CAAC,CAAC,QAAU,CAAC,SAAS,MAAM,GAAG,MAAM,CAAC,YAAY,SAAS,GAAG;AACpF;AAEA,SAAS,gBAAgB,MAAgB,EAAE,OAAe;IACtD,MAAM,QAAQ,OAAO,SAAS,CAAC,CAAC,QAAU,CAAC,SAAS,MAAM,OAAO,MAAM;IACvE,OAAO;QACH,OAAO,UAAU,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG;QACtC,OAAO,UAAU,CAAC,IAAI,QAAQ;IAClC;AACJ"}},
    {"offset": {"line": 1151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/processVideoAddition.ts"],"sourcesContent":["import { toast } from \"sonner\";\r\nimport { Player } from \"../interfaces\";\r\nimport { addVideoToPlaylist } from \"@/app/firebase\";\r\nimport { User } from \"firebase/auth\";\r\nimport createVideoObject from \"./createVideoObject\";\r\nimport { containsVideo } from \"./containsVideo\";\r\n\r\nexport default async function processVideoAddition(\r\n    buttonType: \"queue\" | \"playlist\",\r\n    setCurrentVideo: (video: Player) => void,\r\n    videos: Player[],\r\n    addVideo: (video: Player) => void,\r\n    user: User | null,\r\n    togglePlaylist: (enabled: boolean) => void,\r\n    duration: number,\r\n    soundCloudVideo: Player,\r\n    youtubeVideo: Player,\r\n    tiktokVideo: Player,\r\n    clearVideos: () => void,\r\n    pressed: boolean,\r\n    setPressed: React.Dispatch<React.SetStateAction<boolean>>,\r\n    setShowTooltips?: React.Dispatch<React.SetStateAction<boolean>>\r\n) {\r\n    const video = createVideoObject(duration, tiktokVideo, youtubeVideo, soundCloudVideo);\r\n    if (!video) return;\r\n\r\n    if (containsVideo(videos, video)) {\r\n        console.log(buttonType)\r\n        buttonType === \"playlist\" ? toast.error(\"Video is already in the playlist\") : toast.error(\"Video is already in the queue\");\r\n        return;\r\n    }\r\n\r\n    if (buttonType === \"playlist\") {\r\n        console.log(\"running playlist process\");\r\n        if (!pressed) clearVideos();\r\n        setPressed(true);\r\n        console.log(\"clearVideos was ran\");\r\n        togglePlaylist(true);\r\n\r\n        if (user) {\r\n            await addVideoToDB(user.uid, video);\r\n            addVideoToArray(setCurrentVideo, addVideo, video);\r\n            toastMessage(buttonType);\r\n        } else {\r\n            if (setShowTooltips) {\r\n                setShowTooltips(true);\r\n                return;\r\n            }\r\n        }\r\n    } else if (buttonType === \"queue\") {\r\n        console.log(\"running queue process\");\r\n        if (!pressed) clearVideos();\r\n        setPressed(true);\r\n        console.log(\"cearVideos was ran\");\r\n        togglePlaylist(false);\r\n        addVideoToArray(setCurrentVideo, addVideo, video);\r\n        toastMessage(buttonType);\r\n    }\r\n}\r\n\r\nasync function addVideoToDB(userID: string, video: Player) {\r\n    const result = await addVideoToPlaylist(userID, video);\r\n    if (result.error && result.error === \"Video already exists in the playlist\") {\r\n        toast.error(\"Video already exists in the playlist\");\r\n        return null;\r\n    }\r\n    return result.playlistID;\r\n}\r\n\r\nfunction addVideoToArray(setCurrentVideo: (video: Player) => void, addVideo: (video: Player) => void, video: Player) {\r\n    addVideo(video);\r\n    setCurrentVideo(video);\r\n}\r\nfunction toastMessage(buttonType: \"queue\" | \"playlist\") {\r\n    switch (buttonType) {\r\n        case \"queue\":\r\n            toast.success(\"Video added to the queue\");\r\n            break;\r\n        case \"playlist\":\r\n            toast.success(\"Video added to the playlist\");\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;AAHA;;;;;AAKe,eAAe,qBAC1B,UAAgC,EAChC,eAAwC,EACxC,MAAgB,EAChB,QAAiC,EACjC,IAAiB,EACjB,cAA0C,EAC1C,QAAgB,EAChB,eAAuB,EACvB,YAAoB,EACpB,WAAmB,EACnB,WAAuB,EACvB,OAAgB,EAChB,UAAyD,EACzD,eAA+D;IAE/D,MAAM,QAAQ,CAAA,GAAA,gJAAA,CAAA,UAAiB,AAAD,EAAE,UAAU,aAAa,cAAc;IACrE,IAAI,CAAC,OAAO;IAEZ,IAAI,CAAA,GAAA,4IAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,QAAQ;QAC9B,QAAQ,GAAG,CAAC;QACZ,eAAe,aAAa,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,sCAAsC,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QAC1F;IACJ;IAEA,IAAI,eAAe,YAAY;QAC3B,QAAQ,GAAG,CAAC;QACZ,IAAI,CAAC,SAAS;QACd,WAAW;QACX,QAAQ,GAAG,CAAC;QACZ,eAAe;QAEf,IAAI,MAAM;YACN,MAAM,aAAa,KAAK,GAAG,EAAE;YAC7B,gBAAgB,iBAAiB,UAAU;YAC3C,aAAa;QACjB,OAAO;YACH,IAAI,iBAAiB;gBACjB,gBAAgB;gBAChB;YACJ;QACJ;IACJ,OAAO,IAAI,eAAe,SAAS;QAC/B,QAAQ,GAAG,CAAC;QACZ,IAAI,CAAC,SAAS;QACd,WAAW;QACX,QAAQ,GAAG,CAAC;QACZ,eAAe;QACf,gBAAgB,iBAAiB,UAAU;QAC3C,aAAa;IACjB;AACJ;AAEA,eAAe,aAAa,MAAc,EAAE,KAAa;IACrD,MAAM,SAAS,MAAM,CAAA,GAAA,sLAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;IAChD,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,KAAK,wCAAwC;QACzE,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACZ,OAAO;IACX;IACA,OAAO,OAAO,UAAU;AAC5B;AAEA,SAAS,gBAAgB,eAAwC,EAAE,QAAiC,EAAE,KAAa;IAC/G,SAAS;IACT,gBAAgB;AACpB;AACA,SAAS,aAAa,UAAgC;IAClD,OAAQ;QACJ,KAAK;YACD,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd;QACJ,KAAK;YACD,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd;QACJ;YACI;IACR;AACJ"}},
    {"offset": {"line": 1237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1243, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getTiktokVideoDetails.ts"],"sourcesContent":["export async function getTikTokVideoDetails(url: string) {\r\n    try {\r\n        const apiUrl = `https://www.tiktok.com/oembed?url=${encodeURIComponent(url)}`;\r\n\r\n        const response = await fetch(apiUrl);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to fetch TikTok metadata: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: data.title,\r\n            creator: data.author_unique_id,\r\n            thumbnail: data.thumbnail_url,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,eAAe,sBAAsB,GAAW;IACnD,IAAI;QACA,MAAM,SAAS,CAAC,kCAAkC,EAAE,mBAAmB,MAAM;QAE7E,MAAM,WAAW,MAAM,MAAM;QAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,SAAS,UAAU,EAAE;QAC7E;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,KAAK,KAAK;YACjB,SAAS,KAAK,gBAAgB;YAC9B,WAAW,KAAK,aAAa;QACjC;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;QACf;IACJ;AACJ"}},
    {"offset": {"line": 1271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1353, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/Input.tsx"],"sourcesContent":["import { usePlayer } from \"@/app/store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { createSearchParams, Player, getVideoDetails } from \"@/app/utils\";\r\n\r\nexport default function Input() {\r\n    const [url, setUrl] = useState<string>(\"\");\r\n    const { setYoutubeVideo, setTiktokVideo, setSoundCloudVideo } = usePlayer();\r\n\r\n    useEffect(() => {\r\n        if (url.length < 10) return;\r\n        fetchVideoData(url, setYoutubeVideo, setTiktokVideo, setSoundCloudVideo);\r\n    }, [url]);\r\n\r\n    return (\r\n        <div className=\"relative mb-4 h-12 w-full\">\r\n            <input\r\n                type=\"text\"\r\n                value={url}\r\n                autoComplete=\"off\"\r\n                onChange={(e) => setUrl(e.target.value)}\r\n                placeholder=\"https://www.youtube.com/watch?v=FfsINwUQ75Q\"\r\n                className=\"h-full w-full rounded-lg border-2 border-gray-200 bg-white px-6 py-2 text-black placeholder-gray-500 outline-none\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\nasync function fetchVideoData(\r\n    url: string,\r\n    setYoutubeVideo: (youtubeVideo: Player) => void,\r\n    setTiktokVideo: (tiktokVideo: Player) => void,\r\n    setSoundCloudVideo: (soundCloudVideo: Player) => void\r\n) {\r\n    let newSearchParams: Record<string, string> = {};\r\n    const result = await getVideoDetails(url);\r\n    let videoDetails: any = null;\r\n    if (!result) return;\r\n\r\n    if (result.youtubeVideoDetails) {\r\n        videoDetails = result.youtubeVideoDetails;\r\n        newSearchParams = { yVideoID: videoDetails.videoID };\r\n    } else if (result.tiktokVideoDetails) {\r\n        videoDetails = result.tiktokVideoDetails;\r\n        newSearchParams = { tVideoID: videoDetails.videoID };\r\n    } else if (result.soundCloudVideoDetails) {\r\n        videoDetails = result.soundCloudVideoDetails;\r\n        newSearchParams = { sVideoID: videoDetails.videoID };\r\n    }\r\n\r\n    if (videoDetails) {\r\n        console.log(\"running in Input.tsx\", videoDetails, newSearchParams);\r\n\r\n        if (result.youtubeVideoDetails) {\r\n            setSoundCloudVideo(null);\r\n            setTiktokVideo(null);\r\n            setYoutubeVideo(videoDetails);\r\n        } else if (result.tiktokVideoDetails) {\r\n            setSoundCloudVideo(null);\r\n            setYoutubeVideo(null);\r\n            setTiktokVideo(videoDetails);\r\n        } else if (result.soundCloudVideoDetails) {\r\n            setYoutubeVideo(null);\r\n            setTiktokVideo(null);\r\n            setSoundCloudVideo(videoDetails);\r\n        }\r\n        createSearchParams(newSearchParams);\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAFA;AAEA;AAAA;;;;;AAEe,SAAS;IACpB,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvC,MAAM,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IAExE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,IAAI,MAAM,GAAG,IAAI;QACrB,eAAe,KAAK,iBAAiB,gBAAgB;IACzD,GAAG;QAAC;KAAI;IAER,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YACG,MAAK;YACL,OAAO;YACP,cAAa;YACb,UAAU,CAAC,IAAM,OAAO,EAAE,MAAM,CAAC,KAAK;YACtC,aAAY;YACZ,WAAU;;;;;;;;;;;AAI1B;AACA,eAAe,eACX,GAAW,EACX,eAA+C,EAC/C,cAA6C,EAC7C,kBAAqD;IAErD,IAAI,kBAA0C,CAAC;IAC/C,MAAM,SAAS,MAAM,CAAA,GAAA,4LAAA,CAAA,kBAAe,AAAD,EAAE;IACrC,IAAI,eAAoB;IACxB,IAAI,CAAC,QAAQ;IAEb,IAAI,OAAO,mBAAmB,EAAE;QAC5B,eAAe,OAAO,mBAAmB;QACzC,kBAAkB;YAAE,UAAU,aAAa,OAAO;QAAC;IACvD,OAAO,IAAI,OAAO,kBAAkB,EAAE;QAClC,eAAe,OAAO,kBAAkB;QACxC,kBAAkB;YAAE,UAAU,aAAa,OAAO;QAAC;IACvD,OAAO,IAAI,OAAO,sBAAsB,EAAE;QACtC,eAAe,OAAO,sBAAsB;QAC5C,kBAAkB;YAAE,UAAU,aAAa,OAAO;QAAC;IACvD;IAEA,IAAI,cAAc;QACd,QAAQ,GAAG,CAAC,wBAAwB,cAAc;QAElD,IAAI,OAAO,mBAAmB,EAAE;YAC5B,mBAAmB;YACnB,eAAe;YACf,gBAAgB;QACpB,OAAO,IAAI,OAAO,kBAAkB,EAAE;YAClC,mBAAmB;YACnB,gBAAgB;YAChB,eAAe;QACnB,OAAO,IAAI,OAAO,sBAAsB,EAAE;YACtC,gBAAgB;YAChB,eAAe;YACf,mBAAmB;QACvB;QACA,CAAA,GAAA,kIAAA,CAAA,qBAAkB,AAAD,EAAE;IACvB;AACJ"}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/hooks/useDebounce.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useDebounce<T>(value: T, delay = 300) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [value, delay]);\r\n    return debouncedValue;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEe,SAAS,YAAe,KAAQ,EAAE,QAAQ,GAAG;IACxD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,UAAU,WAAW;YACvB,kBAAkB;QACtB,GAAG;QAEH,OAAO,IAAM,aAAa;IAC9B,GAAG;QAAC;QAAO;KAAM;IACjB,OAAO;AACX"}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1465, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/hooks/useClickOutside.ts"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nexport default function useClickOutside(\r\n    clickRef: React.RefObject<HTMLDivElement | null>,\r\n    setState: React.Dispatch<React.SetStateAction<boolean>>,\r\n    eventTypes: Array<\"click\" | \"mousedown\"> = [\"click\"], // Specify the event types to listen for\r\n    onOutsideClick?: () => void // Optional callback for custom behavior on outside click\r\n) {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n        if (clickRef.current && !clickRef.current.contains(e.target as Node)) {\r\n            setState(false);\r\n            if (onOutsideClick) {\r\n                onOutsideClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const eventListener = (e: MouseEvent) => handleClickOutside(e);\r\n\r\n        eventTypes.forEach((eventType) => {\r\n            document.addEventListener(eventType, eventListener, true);\r\n        });\r\n\r\n        return () => {\r\n            eventTypes.forEach((eventType) => {\r\n                document.removeEventListener(eventType, eventListener, true);\r\n            });\r\n        };\r\n    }, [eventTypes, clickRef]);\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEe,SAAS,gBACpB,QAAgD,EAChD,QAAuD,EACvD,aAA2C;IAAC;CAAQ,EACpD,cAA2B,AAAC,yDAAyD;;IAErF,MAAM,qBAAqB,CAAC;QACxB,IAAI,SAAS,OAAO,IAAI,CAAC,SAAS,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,GAAW;YAClE,SAAS;YACT,IAAI,gBAAgB;gBAChB;YACJ;QACJ;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,gBAAgB,CAAC,IAAkB,mBAAmB;QAE5D,WAAW,OAAO,CAAC,CAAC;YAChB,SAAS,gBAAgB,CAAC,WAAW,eAAe;QACxD;QAEA,OAAO;YACH,WAAW,OAAO,CAAC,CAAC;gBAChB,SAAS,mBAAmB,CAAC,WAAW,eAAe;YAC3D;QACJ;IACJ,GAAG;QAAC;QAAY;KAAS;AAC7B"}},
    {"offset": {"line": 1497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1507, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1533, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/Playlist.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { containsVideo, containsVideoID, createSearchParams, Player, setNewVideo } from \"@/app/utils\";\r\nimport { usePlayer, useMedia, useUser, usePlaylist } from \"@/app/store\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport { useClickOutside } from \"@/app/hooks\";\r\n\r\nexport default function Playlist() {\r\n    const { user, isPlaylistActive } = useUser();\r\n    const clickRef = useRef<HTMLDivElement | null>(null);\r\n    const [tooltipVisible, setTooltipVisible] = useState(false);\r\n    const { setYoutubeVideo, setTiktokVideo, youtubeVideo, tiktokVideo, soundCloudVideo, setSliderValue, duration } = usePlayer();\r\n    const [activeVideoIndex, setActiveVideoIndex] = useState<number | null>(null);\r\n    const {\r\n        removeFromPlaylist,\r\n        removeVideo,\r\n        playlistID,\r\n        playlistTitle,\r\n        videos,\r\n        setVideos,\r\n        setCurrentVideo,\r\n        currentVideo,\r\n        playNextVideo,\r\n        playSelectedVideo,\r\n    } = useMedia();\r\n\r\n    const videoPlaying = currentVideo || youtubeVideo || tiktokVideo || soundCloudVideo;\r\n\r\n    useEffect(() => {\r\n        if (videoPlaying) {\r\n            const { video } = containsVideoID(videos, videoPlaying.videoID);\r\n            if (video && video.videoID !== currentVideo?.videoID) {\r\n                setCurrentVideo(video);\r\n            }\r\n        }\r\n    }, [videoPlaying, videos, setCurrentVideo]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const fetchPlaylist = async () => {\r\n                // Fetch the playlist data\r\n                await useMedia.getState().fetchPlaylistData(user);\r\n                const fetchedVideos = useMedia.getState().playlistVideos;\r\n\r\n                // Function to remove duplicates and handle removal from the playlist\r\n                const uniqueVideos = Array.from(new Map(fetchedVideos.map((video) => [video?.videoID, video])).values());\r\n\r\n                // Remove duplicates from the playlist\r\n                for (const video of fetchedVideos) {\r\n                    if (!uniqueVideos.some((uniqueVideo) => uniqueVideo?.videoID === video?.videoID)) {\r\n                        // Video is a duplicate; remove it from the playlist\r\n                        await removeFromPlaylist(video, user.uid);\r\n                    }\r\n                }\r\n\r\n                setVideos(uniqueVideos); // Set the unique playlist videos\r\n\r\n                const video = youtubeVideo || tiktokVideo || soundCloudVideo;\r\n                if (!video) return;\r\n\r\n                const { index } = containsVideoID(uniqueVideos, video.videoID); // Check in unique videos\r\n                if (index === null) return;\r\n\r\n                setCurrentVideo(uniqueVideos[index]);\r\n            };\r\n\r\n            fetchPlaylist();\r\n        }\r\n    }, [user]);\r\n\r\n    useClickOutside(clickRef, setTooltipVisible, [\"click\"], () => {\r\n        console.log(\"Clicked outside\");\r\n    });\r\n\r\n    const onVideoClick = async (url: string | undefined, index: number) => {\r\n        if (!videoPlaying || !url || url === videoPlaying.url) return;\r\n        try {\r\n            new URL(url);\r\n            playSelectedVideo(index, setTiktokVideo, setYoutubeVideo, setSliderValue, isPlaylistActive, playlistID);\r\n        } catch (error) {\r\n            const err = (error as Error).message;\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleTooltipClick = (index: number) => {\r\n        if (activeVideoIndex === index) {\r\n            setTooltipVisible(false);\r\n            setActiveVideoIndex(null);\r\n        } else {\r\n            setTooltipVisible(true);\r\n            setActiveVideoIndex(index);\r\n        }\r\n    };\r\n\r\n    const handleRemoveVideo = async (videoIndex: number) => {\r\n        const videoToRemove = videos[videoIndex];\r\n\r\n        if (isPlaylistActive && user) {\r\n            await removeFromPlaylist(videoToRemove, user?.uid);\r\n        } else {\r\n            removeVideo(videoToRemove);\r\n        }\r\n        setTooltipVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"h-[850px] w-full pt-2 p-4 flex flex-col justify-start bg-transparent rounded-lg \" style={{ minWidth: \"500px\" }}>\r\n            <h2 className=\"text-xl text-center font-semibold bg-transparent mb-4 mt-4\">{isPlaylistActive ? playlistTitle : \"Queue\"}</h2>\r\n            <ul className=\"space-y-2\">\r\n                {videos &&\r\n                    Array.isArray(videos) &&\r\n                    videos.map((video: Player, index: number) => (\r\n                        <li\r\n                            key={index}\r\n                            className={`w-full cursor-pointer p-2 rounded-md flex items-center space-x-4 justify-between\r\n                            ${videoPlaying?.url === video?.url ? \"bg-stone-300 \" : \"bg-stone-50 bg-opacity-40 hover:bg-gray-300\"}`}\r\n                            onClick={() => onVideoClick(video?.url, index)}\r\n                        >\r\n                            {/* Video Thumbnail */}\r\n                            <img\r\n                                src={video?.thumbnail || \"https://i.imgur.com/Dr1IZF3.jpeg\"}\r\n                                alt={video?.title}\r\n                                className=\"w-16 h-16 object-cover rounded-md\"\r\n                            />\r\n\r\n                            {/* Video Title and Channel */}\r\n                            <div className=\"relative flex flex-col w-full\">\r\n                                <span className=\"text-sm font-semibold\">{video?.title}</span>\r\n                                <span className=\"text-xs text-gray-500\">{video?.creator || video?.channel}</span>\r\n                            </div>\r\n\r\n                            {/* Action Icon */}\r\n                            <div\r\n                                className=\"relative pr-2\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation(); // Prevents click from closing tooltip immediately\r\n                                    handleTooltipClick(index); // Toggle tooltip visibility for the clicked video\r\n                                }}\r\n                            >\r\n                                <MoreVertIcon className=\"w-5 h-5 text-gray-600 hover:text-gray-900\" />\r\n\r\n                                {/* Tooltip */}\r\n                                {tooltipVisible && activeVideoIndex === index && (\r\n                                    <div\r\n                                        ref={clickRef}\r\n                                        className=\"absolute right-0 z-10 w-40 bg-white border border-gray-300 rounded-md shadow-lg mt-2\"\r\n                                    >\r\n                                        <button\r\n                                            className=\"block w-full px-4 py-2 text-left text-sm hover:bg-gray-200\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation(); // Stop propagation for button click only\r\n                                                handleRemoveVideo(index); // Call remove function\r\n                                            }}\r\n                                        >\r\n                                            {isPlaylistActive ? \"Remove from Playlist\" : \"Remove from Queue\"}\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"block w-full px-4 py-2 text-left text-sm hover:bg-gray-200\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation(); // Stop propagation for button click only\r\n                                                // handleDownload(video.url); // Call download function\r\n                                            }}\r\n                                        >\r\n                                            Download\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1769, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/ShufftleVideos.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMedia } from \"@/app/store\";\r\nimport ShuffleIcon from \"@mui/icons-material/Shuffle\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Shuffle = () => {\r\n    const { toggleLoop } = useMedia();\r\n\r\n    const onShuffle = () => toggleLoop(false);\r\n\r\n    return (\r\n        <StyledWrapper>\r\n            <button className=\"btn\" onClick={onShuffle}>\r\n                <ShuffleIcon className=\"icon\" />\r\n            </button>\r\n        </StyledWrapper>\r\n    );\r\n};\r\n\r\nconst wiggle = keyframes`\r\n    0%, 100% { transform: rotate(0deg); }\r\n    25% { transform: rotate(-10deg); }\r\n    50% { transform: rotate(10deg); }\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    .btn {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        border-radius: 10px;\r\n        border: none;\r\n        background-color: transparent;\r\n        position: relative;\r\n        cursor: pointer;\r\n        transition: transform 0.2s ease-in-out;\r\n        margin-left: 20px; /* Adjust margin as needed */\r\n    }\r\n\r\n    .btn::after {\r\n        content: \"Shuffle Videos\";\r\n        white-space: nowrap;\r\n        position: absolute;\r\n        font-size: 15px;\r\n        color: white;\r\n        font-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\", \"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transition: opacity 0.2s linear, top 0.2s linear;\r\n        top: 115%; /* Position the text below the button */\r\n    }\r\n\r\n    .btn:hover::after {\r\n        opacity: 1;\r\n        visibility: visible;\r\n        top: 105%; /* Position adjustment on hover */\r\n    }\r\n\r\n    .icon {\r\n        fill: black;\r\n        transition: fill 0.4s ease-in-out;\r\n        height: 28px;\r\n        width: 28px;\r\n    }\r\n\r\n    .btn:hover > .icon {\r\n        transform: scale(1.2); /* Scale effect on hover */\r\n        fill: rgb(255, 255, 255);\r\n    }\r\n\r\n    .btn:active > .icon {\r\n        animation: ${wiggle} 0.5s ease; /* Wiggle effect on click */\r\n    }\r\n`;\r\n\r\nexport default Shuffle;\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AACA;;;;;AAEA,MAAM,UAAU;IACZ,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAE9B,MAAM,YAAY,IAAM,WAAW;IAEnC,qBACI,8OAAC;kBACG,cAAA,8OAAC;YAAO,WAAU;YAAM,SAAS;sBAC7B,cAAA,8OAAC,4JAAA,CAAA,UAAW;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvC;AAEA,MAAM,SAAS,2KAAA,CAAA,YAAS,CAAC;;;;AAIzB,CAAC;AAED,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAgDd,EAAE,OAAO;;AAE5B,CAAC;uCAEc"}},
    {"offset": {"line": 1863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1879, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/QueueButton.tsx"],"sourcesContent":["import { toast } from \"sonner\";\r\nimport { usePlayer, useMedia, useUser } from \"@/app/store\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { containsVideo, processVideoAddition, createVideoObject } from \"@/app/utils\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst QueueButton = () => {\r\n    const [pressed, setPressed] = useState<boolean>(false)\r\n    const { user, togglePlaylist } = useUser();\r\n    const { tiktokVideo, soundCloudVideo, youtubeVideo, duration } = usePlayer();\r\n    const { videos, addVideo, setCurrentVideo, clearQueue, clearVideos } = useMedia();\r\n\r\n    const onClickEvent = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        await processVideoAddition(\r\n            \"queue\",\r\n            setCurrentVideo,\r\n            videos,\r\n            addVideo,\r\n            user,\r\n            togglePlaylist,\r\n            duration,\r\n            soundCloudVideo,\r\n            youtubeVideo,\r\n            tiktokVideo,\r\n            clearVideos,\r\n            pressed,\r\n            setPressed\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(videos)\r\n    }, [videos])\r\n\r\n    return (\r\n        <StyledWrapper>\r\n            <button className=\"btn\" title=\"Add New\" onClick={onClickEvent}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon\">\r\n                    <path d=\"M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z\" strokeWidth=\"1.5\" />\r\n                    <path d=\"M8 12H16\" strokeWidth=\"1.5\" />\r\n                    <path d=\"M12 16V8\" strokeWidth=\"1.5\" />\r\n                </svg>\r\n            </button>\r\n        </StyledWrapper>\r\n    );\r\n};\r\n\r\nconst wiggle = keyframes`\r\n    0%, 100% { transform: rotate(0deg); }\r\n    25% { transform: rotate(-10deg); }\r\n    50% { transform: rotate(10deg); }\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    .btn {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        border-radius: 10px;\r\n        border: none;\r\n        background-color: transparent;\r\n        position: relative;\r\n        cursor: pointer;\r\n        transition: transform 0.2s ease-in-out;\r\n        margin-left: 20px; /* Adjust margin as needed */\r\n        padding: 0; /* Reset padding for a consistent look */\r\n    }\r\n\r\n    .btn::after {\r\n        content: \"Add To Queue\";\r\n        white-space: nowrap;\r\n        position: absolute;\r\n        font-size: 15px;\r\n        color: white;\r\n        font-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\", \"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transition:\r\n            opacity 0.2s linear,\r\n            top 0.2s linear;\r\n        top: 115%; /* Position the text below the button */\r\n    }\r\n\r\n    .btn:hover::after {\r\n        opacity: 1;\r\n        visibility: visible;\r\n        top: 105%; /* Position adjustment on hover */\r\n    }\r\n\r\n    .icon {\r\n        stroke: #fff;\r\n        fill: none;\r\n        width: 35px;\r\n        height: 35px;\r\n        transition:\r\n            fill 0.4s ease-in-out,\r\n            transform 0.4s ease-in-out;\r\n    }\r\n\r\n    .btn:hover > .icon {\r\n        fill: #ff0000; /* Red fill on hover */\r\n        transform: rotate(90deg); /* Rotate effect */\r\n    }\r\n\r\n    .btn:active > .icon {\r\n        fill: #00d1b2; /* Teal fill on active */\r\n        animation: ${wiggle} 0.5s ease; /* Wiggle effect on click */\r\n    }\r\n`;\r\n\r\nexport default QueueButton;\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAHA;AAAA;AAAA;AAEA;AADA;;;;;;AAIA,MAAM,cAAc;IAChB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IACvC,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IACzE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAE9E,MAAM,eAAe,OAAO;QACxB,MAAM,CAAA,GAAA,sMAAA,CAAA,uBAAoB,AAAD,EACrB,SACA,iBACA,QACA,UACA,MACA,gBACA,UACA,iBACA,cACA,aACA,aACA,SACA;IAER;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,QAAQ,GAAG,CAAC;IAChB,GAAG;QAAC;KAAO;IAEX,qBACI,8OAAC;kBACG,cAAA,8OAAC;YAAO,WAAU;YAAM,OAAM;YAAU,SAAS;sBAC7C,cAAA,8OAAC;gBAAI,OAAM;gBAA6B,SAAQ;gBAAY,WAAU;;kCAClE,8OAAC;wBAAK,GAAE;wBAAwF,aAAY;;;;;;kCAC5G,8OAAC;wBAAK,GAAE;wBAAW,aAAY;;;;;;kCAC/B,8OAAC;wBAAK,GAAE;wBAAW,aAAY;;;;;;;;;;;;;;;;;;;;;;AAKnD;AAEA,MAAM,SAAS,2KAAA,CAAA,YAAS,CAAC;;;;AAIzB,CAAC;AAED,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAuDd,EAAE,OAAO;;AAE5B,CAAC;uCAEc"}},
    {"offset": {"line": 2024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2030, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/Slider.tsx"],"sourcesContent":["import { formatTime } from \"@/app/utils\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { usePlayer } from \"@/app/store/usePlayer\";\r\n\r\nexport default function PlayerSlider() {\r\n    const { duration, sliderValue, setSliderValue } = usePlayer();\r\n\r\n    const onSliderChange = (event: Event, value: number | number[]) => {\r\n        setSliderValue(value as [number, number]);\r\n    };\r\n    return (\r\n        <>\r\n            <Slider\r\n                min={0}\r\n                max={duration}\r\n                value={sliderValue}\r\n                onChange={onSliderChange}\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => formatTime(value)}\r\n                sx={{ color: \"#ffffff\" }}\r\n            />\r\n            <div className=\"w-full flex items-center justify-between mt-2\">\r\n                <span className=\"text-sm text-white\">{formatTime(sliderValue[0])}</span>\r\n                <span className=\"text-sm text-white\">{formatTime(sliderValue[1])}</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AADA;AADA;;;;;AAIe,SAAS;IACpB,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IAE1D,MAAM,iBAAiB,CAAC,OAAc;QAClC,eAAe;IACnB;IACA,qBACI;;0BACI,8OAAC,qJAAA,CAAA,UAAM;gBACH,KAAK;gBACL,KAAK;gBACL,OAAO;gBACP,UAAU;gBACV,mBAAkB;gBAClB,kBAAkB,CAAC,QAAU,CAAA,GAAA,0HAAA,CAAA,aAAU,AAAD,EAAE;gBACxC,IAAI;oBAAE,OAAO;gBAAU;;;;;;0BAE3B,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAK,WAAU;kCAAsB,CAAA,GAAA,0HAAA,CAAA,aAAU,AAAD,EAAE,WAAW,CAAC,EAAE;;;;;;kCAC/D,8OAAC;wBAAK,WAAU;kCAAsB,CAAA,GAAA,0HAAA,CAAA,aAAU,AAAD,EAAE,WAAW,CAAC,EAAE;;;;;;;;;;;;;;AAI/E"}},
    {"offset": {"line": 2092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2098, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/YoutubePlayer.tsx"],"sourcesContent":["import { toast } from \"sonner\";\r\nimport { useEffect } from \"react\";\r\nimport PlayerSlider from \"./Slider\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport { useMedia, usePlayer, useUser } from \"@/app/store\";\r\nimport { createSearchParams, Player } from \"@/app/utils\";\r\n\r\nexport default function YoutubePlayer({ youtubePlayerRef, youtubeVideo }: { youtubePlayerRef: any; youtubeVideo: Player }) {\r\n    const { resetSlider, setYoutubeVideo, setSoundCloudVideo, setTiktokVideo, setSliderValue, setDuration, sliderValue } = usePlayer();\r\n    const { setVideoIsEnded, playNextVideo, loopEnabled, playlistID } = useMedia();\r\n    const { isPlaylistActive } = useUser();\r\n\r\n    const url = youtubeVideo?.url;\r\n\r\n    useEffect(() => {\r\n        resetSlider();\r\n        setVideoIsEnded(false);\r\n    }, [youtubeVideo?.url, resetSlider]);\r\n\r\n    const handleDuration = (videoLength: number) => {\r\n        setDuration(videoLength);\r\n        setSliderValue([0, videoLength]);\r\n    };\r\n\r\n    const handleProgress = (progress: { playedSeconds: number }) => {\r\n        const tolerance = 1;\r\n\r\n        if (\r\n            (progress.playedSeconds >= sliderValue[1] - tolerance && progress.playedSeconds <= sliderValue[1] + tolerance) ||\r\n            progress.playedSeconds >= sliderValue[1]\r\n        ) {\r\n            if (loopEnabled) {\r\n                youtubePlayerRef.current.seekTo(sliderValue[0]); // Seek to the loop start\r\n            } else {\r\n                setVideoIsEnded(true);\r\n                playNextVideo(setTiktokVideo, setYoutubeVideo, setSoundCloudVideo, setSliderValue, isPlaylistActive, playlistID, createSearchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (!youtubeVideo) return;\r\n\r\n    return (\r\n        <>\r\n            <ReactPlayer\r\n                playing\r\n                controls\r\n                url={url}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                ref={youtubePlayerRef}\r\n                onDuration={handleDuration}\r\n                onProgress={handleProgress}\r\n                onError={() => {\r\n                    toast.error(\"Error loading Youtube video, please check the URL.\");\r\n                }}\r\n            />\r\n            <PlayerSlider />\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AADA;AAAA;AAAA;AACA;AAFA;;;;;;;;AAIe,SAAS,cAAc,EAAE,gBAAgB,EAAE,YAAY,EAAmD;IACrH,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,kBAAkB,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IAC/H,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAC3E,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAEnC,MAAM,MAAM,cAAc;IAE1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;QACA,gBAAgB;IACpB,GAAG;QAAC,cAAc;QAAK;KAAY;IAEnC,MAAM,iBAAiB,CAAC;QACpB,YAAY;QACZ,eAAe;YAAC;YAAG;SAAY;IACnC;IAEA,MAAM,iBAAiB,CAAC;QACpB,MAAM,YAAY;QAElB,IACI,AAAC,SAAS,aAAa,IAAI,WAAW,CAAC,EAAE,GAAG,aAAa,SAAS,aAAa,IAAI,WAAW,CAAC,EAAE,GAAG,aACpG,SAAS,aAAa,IAAI,WAAW,CAAC,EAAE,EAC1C;YACE,IAAI,aAAa;gBACb,iBAAiB,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,GAAG,yBAAyB;YAC9E,OAAO;gBACH,gBAAgB;gBAChB,cAAc,gBAAgB,iBAAiB,oBAAoB,gBAAgB,kBAAkB,YAAY,kIAAA,CAAA,qBAAkB;YACvI;QACJ;IACJ;IAEA,IAAI,CAAC,cAAc;IAEnB,qBACI;;0BACI,8OAAC,0IAAA,CAAA,UAAW;gBACR,OAAO;gBACP,QAAQ;gBACR,KAAK;gBACL,OAAM;gBACN,QAAO;gBACP,KAAK;gBACL,YAAY;gBACZ,YAAY;gBACZ,SAAS;oBACL,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBAChB;;;;;;0BAEJ,8OAAC,2IAAA,CAAA,UAAY;;;;;;;AAGzB"}},
    {"offset": {"line": 2177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2183, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/Tooltips.tsx"],"sourcesContent":["import Link from \"next/link\";\r\n\r\nexport default function Tooltips() {\r\n    return (\r\n        <Link href=\"/login\">\r\n            <div className=\"absolute left-1/2 top-[550px] transform -translate-x-1/5 z-10 w-64 p-4 bg-white shadow-lg border border-stone-900 rounded-lg\">\r\n                <p className=\"text-sm text-gray-700\">Want to watch this again later? Sign in to add this video to a playlist.</p>\r\n                <span className=\"mt-4 inline-block text-blue-600 hover:text-blue-700 font-semibold\">Sign in</span>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACpB,qBACI,8OAAC,4HAAA,CAAA,UAAI;QAAC,MAAK;kBACP,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAE,WAAU;8BAAwB;;;;;;8BACrC,8OAAC;oBAAK,WAAU;8BAAoE;;;;;;;;;;;;;;;;;AAIpG"}},
    {"offset": {"line": 2224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2230, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/PlaylistButton.tsx"],"sourcesContent":["import { toast } from \"sonner\";\r\nimport Tooltips from \"./Tooltips\";\r\nimport { useClickOutside } from \"@/app/hooks\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { usePlayer, useMedia, useUser } from \"@/app/store\";\r\nimport QueueMusicIcon from \"@mui/icons-material/QueueMusic\";\r\nimport { containsVideo, containsVideoID, createVideoObject, processVideoAddition } from \"@/app/utils\";\r\n\r\nconst PlaylistButton = () => {\r\n    const [pressed, setPressed] = useState<boolean>(false)\r\n    const { tiktokVideo, soundCloudVideo, youtubeVideo, duration } = usePlayer();\r\n    const { addToPlaylist, clearVideos, videos, addVideo, clearPlaylist, playlistID, playlistVideos, setCurrentVideo, clearQueue } = useMedia();\r\n    const { user, togglePlaylist } = useUser();\r\n    const [showTooltips, setShowTooltips] = useState<boolean>(false);\r\n    const clickRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useClickOutside(clickRef, setShowTooltips, [\"click\"], () => {\r\n        console.log(\"Clicked outside\");\r\n    });\r\n\r\n    const onClickEvent = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        await processVideoAddition(\r\n            \"playlist\",\r\n            setCurrentVideo,\r\n            videos,\r\n            addVideo,\r\n            user,\r\n            togglePlaylist,\r\n            duration,\r\n            soundCloudVideo,\r\n            tiktokVideo,\r\n            youtubeVideo,\r\n            clearVideos,\r\n            pressed,\r\n            setPressed,\r\n            setShowTooltips,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <StyledWrapper>\r\n            <button className=\"btn\" title=\"Add to Playlist\" onClick={onClickEvent}>\r\n                <QueueMusicIcon className=\"icon\" />\r\n            </button>\r\n\r\n            {showTooltips && (\r\n                <div ref={clickRef}>\r\n                    <Tooltips />\r\n                </div>\r\n            )}\r\n        </StyledWrapper>\r\n    );\r\n};\r\n\r\nconst wiggle = keyframes`\r\n    0%, 100% { transform: rotate(0deg); }\r\n    25% { transform: rotate(-10deg); }\r\n    50% { transform: rotate(10deg); }\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    .btn {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        border-radius: 10px;\r\n        border: none;\r\n        background-color: transparent;\r\n        position: relative;\r\n        cursor: pointer;\r\n        transition: transform 0.2s ease-in-out;\r\n        padding: 0;\r\n    }\r\n\r\n    .btn::after {\r\n        content: \"Add to Playlist\";\r\n        white-space: nowrap;\r\n        position: absolute;\r\n        font-size: 15px;\r\n        color: white;\r\n        font-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\", \"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transition:\r\n            opacity 0.2s linear,\r\n            top 0.2s linear;\r\n        top: 115%; /* Position the text below the button */\r\n    }\r\n\r\n    .btn:hover::after {\r\n        opacity: 1;\r\n        visibility: visible;\r\n        top: 105%; /* Position adjustment on hover */\r\n    }\r\n\r\n    .icon {\r\n        color: white;\r\n        width: 35px;\r\n        height: 35px;\r\n        transition:\r\n            color 0.4s ease-in-out,\r\n            transform 0.4s ease-in-out;\r\n    }\r\n\r\n    .btn:hover > .icon {\r\n        fill: #ff0000; /* Red on hover */\r\n        transform: scale(1.2); /* Scale effect */\r\n    }\r\n\r\n    .btn:active > .icon {\r\n        animation: ${wiggle} 0.8s ease; /* Wiggle effect on click */\r\n    }\r\n`;\r\n\r\nexport default PlaylistButton;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAAA;AAAA;AAHA;AAKA;AADA;AAFA;;;;;;;;;AAKA,MAAM,iBAAiB;IACnB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IACzE,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IACxI,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IAE/C,CAAA,GAAA,6KAAA,CAAA,kBAAe,AAAD,EAAE,UAAU,iBAAiB;QAAC;KAAQ,EAAE;QAClD,QAAQ,GAAG,CAAC;IAChB;IAEA,MAAM,eAAe,OAAO;QACxB,MAAM,CAAA,GAAA,sMAAA,CAAA,uBAAoB,AAAD,EACrB,YACA,iBACA,QACA,UACA,MACA,gBACA,UACA,iBACA,aACA,cACA,aACA,SACA,YACA;IAER;IAEA,qBACI,8OAAC;;0BACG,8OAAC;gBAAO,WAAU;gBAAM,OAAM;gBAAkB,SAAS;0BACrD,cAAA,8OAAC,+JAAA,CAAA,UAAc;oBAAC,WAAU;;;;;;;;;;;YAG7B,8BACG,8OAAC;gBAAI,KAAK;0BACN,cAAA,8OAAC,6IAAA,CAAA,UAAQ;;;;;;;;;;;;;;;;AAK7B;AAEA,MAAM,SAAS,2KAAA,CAAA,YAAS,CAAC;;;;AAIzB,CAAC;AAED,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAoDd,EAAE,OAAO;;AAE5B,CAAC;uCAEc"}},
    {"offset": {"line": 2367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2373, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/TiktokPlayer.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useMedia, usePlayer, useUser } from \"@/app/store\";\r\nimport { createSearchParams, ITikTokEmbed, Player } from \"@/app/utils\";\r\n\r\nexport default function TiktokPlayer({ tiktokVideo }: { tiktokVideo: Player }) {\r\n    if (!tiktokVideo) return null;\r\n\r\n    const { setYoutubeVideo, setSoundCloudVideo, setTiktokVideo, setSliderValue } = usePlayer();\r\n    const { loopEnabled, playNextVideo, playlistID } = useMedia();\r\n    const { isPlaylistActive } = useUser();\r\n    const videoID = tiktokVideo.videoID.split(\"+\")[1];\r\n    const iframeRef = useRef<HTMLIFrameElement | null>(null);\r\n    const [hasEnded, setHasEnded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const handlePlayerMessage = (event: MessageEvent) => {\r\n            if (event.data?.[\"x-tiktok-player\"]) {\r\n                if (event.data.type === \"onPlayerReady\") {\r\n                    iframeRef.current?.contentWindow?.postMessage({ type: \"unMute\", \"x-tiktok-player\": true }, \"*\");\r\n                }\r\n                if (event.data.type === \"onStateChange\" && event.data.value === 0) {\r\n                    setHasEnded(true);\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener(\"message\", handlePlayerMessage);\r\n        return () => {\r\n            window.removeEventListener(\"message\", handlePlayerMessage);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (hasEnded && !loopEnabled) {\r\n            playNextVideo(setTiktokVideo, setYoutubeVideo, setSoundCloudVideo, setSliderValue, isPlaylistActive, playlistID, createSearchParams);\r\n        }\r\n    }, [hasEnded]);\r\n\r\n    return (\r\n        <div className=\"bg-gray-700 rounded-lg h-[700px] w-[1000px]\">\r\n            <iframe\r\n                ref={iframeRef}\r\n                src={`https://www.tiktok.com/player/v1/${videoID}?autoplay=1&mute=0&loop=${loopEnabled ? 1 : 0}&volume_control=1&fullscreen_button=1`}\r\n                allow=\"fullscreen; autoplay\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                title=\"TikTok Video\"\r\n                style={{ border: \"none\" }}\r\n            />\r\n            {hasEnded && <div className=\"text-white\">The video has ended.</div>}\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;;;;;AAEe,SAAS,aAAa,EAAE,WAAW,EAA2B;IACzE,IAAI,CAAC,aAAa,OAAO;IAEzB,MAAM,EAAE,eAAe,EAAE,kBAAkB,EAAE,cAAc,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IACxF,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAC1D,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IACnC,MAAM,UAAU,YAAY,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACjD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,sBAAsB,CAAC;YACzB,IAAI,MAAM,IAAI,EAAE,CAAC,kBAAkB,EAAE;gBACjC,IAAI,MAAM,IAAI,CAAC,IAAI,KAAK,iBAAiB;oBACrC,UAAU,OAAO,EAAE,eAAe,YAAY;wBAAE,MAAM;wBAAU,mBAAmB;oBAAK,GAAG;gBAC/F;gBACA,IAAI,MAAM,IAAI,CAAC,IAAI,KAAK,mBAAmB,MAAM,IAAI,CAAC,KAAK,KAAK,GAAG;oBAC/D,YAAY;gBAChB;YACJ;QACJ;QAEA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO;YACH,OAAO,mBAAmB,CAAC,WAAW;QAC1C;IACJ,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,YAAY,CAAC,aAAa;YAC1B,cAAc,gBAAgB,iBAAiB,oBAAoB,gBAAgB,kBAAkB,YAAY,kIAAA,CAAA,qBAAkB;QACvI;IACJ,GAAG;QAAC;KAAS;IAEb,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBACG,KAAK;gBACL,KAAK,CAAC,iCAAiC,EAAE,QAAQ,wBAAwB,EAAE,cAAc,IAAI,EAAE,qCAAqC,CAAC;gBACrI,OAAM;gBACN,OAAM;gBACN,QAAO;gBACP,OAAM;gBACN,OAAO;oBAAE,QAAQ;gBAAO;;;;;;YAE3B,0BAAY,8OAAC;gBAAI,WAAU;0BAAa;;;;;;;;;;;;AAGrD"}},
    {"offset": {"line": 2455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2461, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/SoundCloudPlayer.tsx"],"sourcesContent":["import { useMedia, usePlayer, useUser } from \"@/app/store\";\r\nimport { createSearchParams, Player } from \"@/app/utils\";\r\nimport { useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player/soundcloud\";\r\nimport { toast } from \"sonner\";\r\nimport PlayerSlider from \"./Slider\";\r\n\r\nexport default function SoundCloudPlayer({ soundCloudPlayerRef, soundCloudVideo }: { soundCloudPlayerRef: any; soundCloudVideo: Player }) {\r\n    const url = soundCloudVideo?.url;\r\n    const { resetSlider, setYoutubeVideo, setSoundCloudVideo, setTiktokVideo, setSliderValue, setDuration, sliderValue } = usePlayer();\r\n    const { setVideoIsEnded, playNextVideo, loopEnabled, playlistID } = useMedia();\r\n    const { isPlaylistActive } = useUser();\r\n\r\n    useEffect(() => {\r\n        resetSlider();\r\n        setVideoIsEnded(false);\r\n    }, [soundCloudVideo?.url, resetSlider]);\r\n\r\n    const handleDuration = (videoLength: number) => {\r\n        setDuration(videoLength);\r\n        setSliderValue([0, videoLength]);\r\n    };\r\n\r\n    const handleProgress = (progress: { playedSeconds: number }) => {\r\n        const tolerance = 1;\r\n\r\n        if (\r\n            (progress.playedSeconds >= sliderValue[1] - tolerance && progress.playedSeconds <= sliderValue[1] + tolerance) ||\r\n            progress.playedSeconds >= sliderValue[1]\r\n        ) {\r\n            if (loopEnabled) {\r\n                soundCloudPlayerRef.current.seekTo(sliderValue[0]); // Seek to the loop start\r\n            } else {\r\n                setVideoIsEnded(true);\r\n                playNextVideo(setTiktokVideo, setYoutubeVideo, setSoundCloudVideo, setSliderValue, isPlaylistActive, playlistID, createSearchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (!soundCloudVideo) return;\r\n\r\n    return (\r\n        <div className=\"soundcloud-player\">\r\n            <ReactPlayer\r\n                playing\r\n                controls\r\n                url={url}\r\n                width=\"900px\"\r\n                height=\"600px\"\r\n                ref={soundCloudPlayerRef}\r\n                onProgress={handleProgress}\r\n                onDuration={handleDuration}\r\n                onError={() => {\r\n                    toast.error(\"Error loading SoundCloud track, please check the URL.\");\r\n                }}\r\n            />\r\n            <PlayerSlider />\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AALA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAIe,SAAS,iBAAiB,EAAE,mBAAmB,EAAE,eAAe,EAAyD;IACpI,MAAM,MAAM,iBAAiB;IAC7B,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,kBAAkB,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IAC/H,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAC3E,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;QACA,gBAAgB;IACpB,GAAG;QAAC,iBAAiB;QAAK;KAAY;IAEtC,MAAM,iBAAiB,CAAC;QACpB,YAAY;QACZ,eAAe;YAAC;YAAG;SAAY;IACnC;IAEA,MAAM,iBAAiB,CAAC;QACpB,MAAM,YAAY;QAElB,IACI,AAAC,SAAS,aAAa,IAAI,WAAW,CAAC,EAAE,GAAG,aAAa,SAAS,aAAa,IAAI,WAAW,CAAC,EAAE,GAAG,aACpG,SAAS,aAAa,IAAI,WAAW,CAAC,EAAE,EAC1C;YACE,IAAI,aAAa;gBACb,oBAAoB,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,GAAG,yBAAyB;YACjF,OAAO;gBACH,gBAAgB;gBAChB,cAAc,gBAAgB,iBAAiB,oBAAoB,gBAAgB,kBAAkB,YAAY,kIAAA,CAAA,qBAAkB;YACvI;QACJ;IACJ;IAEA,IAAI,CAAC,iBAAiB;IAEtB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,6IAAA,CAAA,UAAW;gBACR,OAAO;gBACP,QAAQ;gBACR,KAAK;gBACL,OAAM;gBACN,QAAO;gBACP,KAAK;gBACL,YAAY;gBACZ,YAAY;gBACZ,SAAS;oBACL,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBAChB;;;;;;0BAEJ,8OAAC,2IAAA,CAAA,UAAY;;;;;;;;;;;AAGzB"}},
    {"offset": {"line": 2545, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2551, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/ui.tsx"],"sourcesContent":["import Loop from \"./Loop\";\r\nimport Input from \"./Input\";\r\nimport { Toaster } from \"sonner\";\r\nimport Playlist from \"./Playlist\";\r\nimport { useEffect } from \"react\";\r\nimport { Player } from \"@/app/utils\";\r\nimport Shuffle from \"./ShufftleVideos\";\r\nimport QueueButton from \"./QueueButton\";\r\nimport YoutubePlayer from \"./YoutubePlayer\";\r\nimport PlaylistButton from \"./PlaylistButton\";\r\nimport { useMedia, useUser } from \"@/app/store\";\r\nimport TiktokPlayer from \"./TiktokPlayer\";\r\nimport SoundCloudPlayer from \"./SoundCloudPlayer\";\r\n\r\nexport default function UI({\r\n    youtubeVideo,\r\n    tiktokVideo,\r\n    youtubePlayerRef,\r\n    soundCloudVideo,\r\n    soundCloudPlayerRef,\r\n}: {\r\n    youtubeVideo: Player;\r\n    tiktokVideo: Player;\r\n    soundCloudVideo: Player;\r\n    youtubePlayerRef: any;\r\n    soundCloudPlayerRef: any;\r\n}) {\r\n    const { isPlaylistActive } = useUser();\r\n    const { clearQueue } = useMedia();\r\n\r\n    useEffect(() => {\r\n        console.log(isPlaylistActive);\r\n        clearQueue();\r\n    }, [isPlaylistActive]);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"mt-16 relative flex min-h-screen bg-gradient-to-t from-teal-200 via-teal-100 to-teal-50\">\r\n                <div className=\"flex-1 flex flex-col 2xl:flex-row justify-center items-start mt-4 mx-4 space-y-8 2xl:space-y-0 2xl:space-x-8\">\r\n                    {/* Video Player Section */}\r\n                    <div className=\"relative h-[850px] w-full 2xl:w-[1000px] flex flex-col justify-between items-center bg-transparent rounded-lg shadow-lg p-6\">\r\n                        <Input />\r\n\r\n                        {/* Video Players */}\r\n                        <YoutubePlayer youtubeVideo={youtubeVideo} youtubePlayerRef={youtubePlayerRef} />\r\n                        <TiktokPlayer tiktokVideo={tiktokVideo} />\r\n                        <SoundCloudPlayer soundCloudVideo={soundCloudVideo} soundCloudPlayerRef={soundCloudPlayerRef} />\r\n\r\n                        {/* Player Buttons */}\r\n                        <div className=\"rounded-lg flex items-center justify-between mt-2 space-x-20 mb-4\">\r\n                            <Loop />\r\n                            <PlaylistButton />\r\n                            <QueueButton />\r\n                            <Shuffle />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Playlist Section */}\r\n                    <div className=\"relative h-[850px] w-full 2xl:w-[500px] flex flex-col justify-between items-center bg-transparent rounded-lg shadow-lg p-6\">\r\n                        <Playlist />\r\n                        {/* <Queue isPlaylistActive={isPlaylistActive} />    */}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Toast Notification */}\r\n                <div className=\"fixed bottom-8 left-8 z-50 w-auto max-w-xs\">\r\n                    <Toaster duration={5000} richColors />\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;;;;;;;;;;;;;;AAIe,SAAS,GAAG,EACvB,YAAY,EACZ,WAAW,EACX,gBAAgB,EAChB,eAAe,EACf,mBAAmB,EAOtB;IACG,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IACnC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAE9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,QAAQ,GAAG,CAAC;QACZ;IACJ,GAAG;QAAC;KAAiB;IAErB,qBACI;kBACI,cAAA,8OAAC;YAAQ,WAAU;;8BACf,8OAAC;oBAAI,WAAU;;sCAEX,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,0IAAA,CAAA,UAAK;;;;;8CAGN,8OAAC,kJAAA,CAAA,UAAa;oCAAC,cAAc;oCAAc,kBAAkB;;;;;;8CAC7D,8OAAC,iJAAA,CAAA,UAAY;oCAAC,aAAa;;;;;;8CAC3B,8OAAC,qJAAA,CAAA,UAAgB;oCAAC,iBAAiB;oCAAiB,qBAAqB;;;;;;8CAGzE,8OAAC;oCAAI,WAAU;;sDACX,8OAAC,yIAAA,CAAA,UAAI;;;;;sDACL,8OAAC,mJAAA,CAAA,UAAc;;;;;sDACf,8OAAC,gJAAA,CAAA,UAAW;;;;;sDACZ,8OAAC,mJAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;sCAKhB,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,6IAAA,CAAA,UAAQ;;;;;;;;;;;;;;;;8BAMjB,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,wIAAA,CAAA,UAAO;wBAAC,UAAU;wBAAM,UAAU;;;;;;;;;;;;;;;;;;AAKvD"}},
    {"offset": {"line": 2705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2711, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/Guide.tsx"],"sourcesContent":["export default function Guide() {\r\n    return (\r\n        <section className=\"min-h-screen p-8 text-center bg-gradient-to-t from-stone-50 via-transparent to-stone-100\">\r\n            <h2 className=\"text-3xl font-bold mb-6 text-teal-600\">What is LooTube?</h2>\r\n            <p className=\"text-gray-700 mb-4\">\r\n                LoopTube is a free online tool to repeat any YouTube videos. Just select YouTube videos by typing a URL in the search bar, and you can\r\n                set AB loop at any point of the video. This is useful when you want to learn some skills (such as languages, sports, music, etc.) by\r\n                watching a specific part over and over.\r\n            </p>\r\n\r\n            <h3 className=\"text-2xl font-semibold mb-4 text-teal-700\">Features:</h3>\r\n            <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                <li>Select any video from a supported platform by pasting the URL</li>\r\n                <li>Repeat the full or a part of a video in an infinite loop</li>\r\n                <li>Control the video with simple buttons or keyboard shortcuts</li>\r\n                <li>Take notes while controlling the video with keyboard shortcuts</li>\r\n            </ul>\r\n\r\n            {/* Supported Platforms */}\r\n            <h3 className=\"text-2xl font-semibold mb-4 mt-6 text-teal-700\">Supported platforms:</h3>\r\n            <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                <li> Youtube </li>\r\n                <li> Youtube Shorts </li>\r\n                <li> Tiktok </li>\r\n            </ul>\r\n\r\n            {/* Report bugs */}\r\n            <h3 className=\"text-2xl font-semibold mb-4 mt-6 text-teal-700\">Report a Bug</h3>\r\n            <p className=\"text-gray-700 mb-4\">\r\n                We appreciate your feedback! If you encounter any issues while using LoopTube, please let us know so we can fix them. To report a bug,\r\n                kindly provide the following information:\r\n            </p>\r\n            <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                <li>\r\n                    <strong>Description:</strong> A brief description of the bug you encountered.\r\n                </li>\r\n                <li>\r\n                    <strong>Steps to Reproduce:</strong> Detailed steps on how to reproduce the bug.\r\n                </li>\r\n                <li>\r\n                    <strong>Expected Behavior:</strong> What you expected to happen when using the tool.\r\n                </li>\r\n                <li>\r\n                    <strong>Device & Browser:</strong> Information about your device and the browser you were using.\r\n                </li>\r\n            </ul>\r\n            <p className=\"text-gray-700 mt-4\">\r\n                You can report bugs directly to our support team at{\" \"}\r\n                <a href=\"mailto:support@looptube.com\" className=\"text-teal-700 hover:underline\">\r\n                    support@looptube.com\r\n                </a>{\" \"}\r\n                or use the contact form on our website.\r\n            </p>\r\n        </section>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAe,SAAS;IACpB,qBACI,8OAAC;QAAQ,WAAU;;0BACf,8OAAC;gBAAG,WAAU;0BAAwC;;;;;;0BACtD,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAMlC,8OAAC;gBAAG,WAAU;0BAA4C;;;;;;0BAC1D,8OAAC;gBAAG,WAAU;;kCACV,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAG;;;;;;;;;;;;0BAIR,8OAAC;gBAAG,WAAU;0BAAiD;;;;;;0BAC/D,8OAAC;gBAAG,WAAU;;kCACV,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAG;;;;;;;;;;;;0BAIR,8OAAC;gBAAG,WAAU;0BAAiD;;;;;;0BAC/D,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAIlC,8OAAC;gBAAG,WAAU;;kCACV,8OAAC;;0CACG,8OAAC;0CAAO;;;;;;4BAAqB;;;;;;;kCAEjC,8OAAC;;0CACG,8OAAC;0CAAO;;;;;;4BAA4B;;;;;;;kCAExC,8OAAC;;0CACG,8OAAC;0CAAO;;;;;;4BAA2B;;;;;;;kCAEvC,8OAAC;;0CACG,8OAAC;0CAAO;;;;;;4BAA0B;;;;;;;;;;;;;0BAG1C,8OAAC;gBAAE,WAAU;;oBAAqB;oBACsB;kCACpD,8OAAC;wBAAE,MAAK;wBAA8B,WAAU;kCAAgC;;;;;;oBAE3E;oBAAI;;;;;;;;;;;;;AAKzB"}},
    {"offset": {"line": 2937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2953, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/components/VideoPlayer/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport UI from \"./ui\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport YoutubePlayer from \"react-player/youtube\";\r\nimport { usePlayer, useClient, useUser } from \"@/app/store\";\r\nimport SoundCloudPlayer from \"react-player/soundcloud\";\r\nimport { createSearchParams, setNewPlayerVideo } from \"@/app/utils\";\r\nimport Guide from \"./Guide\";\r\n\r\nexport default function VideoPlayer() {\r\n    const { initializeClient, isClient } = useClient();\r\n    const youtubePlayerRef = useRef<YoutubePlayer | null>(null);\r\n    const soundCloudPlayerRef = useRef<SoundCloudPlayer | null>(null);\r\n\r\n    const { duration, tiktokVideo, sliderValue, youtubeVideo, setSliderValue, setTiktokVideo, soundCloudVideo, setYoutubeVideo, setSoundCloudVideo } =\r\n        usePlayer();\r\n\r\n    useEffect(() => {\r\n        initializeClient();\r\n    }, [initializeClient]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = useUser.getState().subscribeToAuthState();\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (typeof window === \"undefined\") return;\r\n\r\n        const params = new URLSearchParams(window.location.search);\r\n        const indexParam = params.get(\"index\");\r\n        const listParam = params.get(\"list\");\r\n\r\n        if (sliderValue[0] >= 0 && duration > 0) {\r\n            const player = youtubeVideo || tiktokVideo || soundCloudVideo;\r\n            const videoRef = youtubePlayerRef.current || soundCloudPlayerRef.current;\r\n            const timeoutId = setTimeout(() => {\r\n                if (videoRef) videoRef.seekTo(sliderValue[0]);\r\n\r\n                if (player) {\r\n                    let newSearchParams: Record<string, string> = {};\r\n                    var list = youtubeVideo?.list || listParam;\r\n                    var index = player.index || indexParam;\r\n                    if (player === youtubeVideo) {\r\n                        if (index && list) {\r\n                            newSearchParams = {\r\n                                yVideoID: youtubeVideo.videoID,\r\n                                start: sliderValue[0].toString(),\r\n                                end: sliderValue[1].toString(),\r\n                                list,\r\n                                index,\r\n                            };\r\n                        } else {\r\n                            newSearchParams = {\r\n                                yVideoID: youtubeVideo.videoID,\r\n                                start: sliderValue[0].toString(),\r\n                                end: sliderValue[1].toString(),\r\n                            };\r\n                        }\r\n                    } else if (player === tiktokVideo) {\r\n                        if (index && list) {\r\n                            newSearchParams = {\r\n                                tVideoID: tiktokVideo.videoID,\r\n                                list,\r\n                                index,\r\n                            };\r\n                        } else {\r\n                            newSearchParams = { tVideoID: tiktokVideo.videoID };\r\n                        }\r\n                    } else if (player === soundCloudVideo) {\r\n                        if (index && list) {\r\n                            newSearchParams = {\r\n                                yVideoID: soundCloudVideo.videoID,\r\n                                start: sliderValue[0].toString(),\r\n                                end: sliderValue[1].toString(),\r\n                                list,\r\n                                index,\r\n                            };\r\n                        } else {\r\n                            newSearchParams = {\r\n                                sVideoID: soundCloudVideo.videoID,\r\n                                start: sliderValue[0].toString(),\r\n                                end: sliderValue[1].toString(),\r\n                            };\r\n                        }\r\n                    }\r\n                    createSearchParams(newSearchParams);\r\n                }\r\n            }, 300);\r\n            return () => clearTimeout(timeoutId);\r\n        }\r\n    }, [sliderValue, duration]);\r\n\r\n    useEffect(() => {\r\n        setNewPlayerVideo(setTiktokVideo, setYoutubeVideo, setSliderValue, setSoundCloudVideo);\r\n    }, []);\r\n\r\n    if (!isClient) return; // return loading spinner\r\n\r\n    return (\r\n        <>\r\n            {isClient && (\r\n                <>\r\n                    <UI\r\n                        youtubeVideo={youtubeVideo}\r\n                        tiktokVideo={tiktokVideo}\r\n                        soundCloudVideo={soundCloudVideo}\r\n                        youtubePlayerRef={youtubePlayerRef}\r\n                        soundCloudPlayerRef={soundCloudPlayerRef}\r\n                    />\r\n                    <Guide />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAEA;AACA;AAHA;AAAA;AAAA;AAEA;AAPA;;;;;;;AAUe,SAAS;IACpB,MAAM,EAAE,gBAAgB,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IAC/C,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAwB;IACtD,MAAM,sBAAsB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA2B;IAE5D,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,kBAAkB,EAAE,GAC5I,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IAEZ,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;IACJ,GAAG;QAAC;KAAiB;IAErB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,cAAc,uHAAA,CAAA,UAAO,CAAC,QAAQ,GAAG,oBAAoB;QAC3D,OAAO,IAAM;IACjB,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,wCAAmC;;QAEnC,MAAM;QACN,MAAM;QACN,MAAM;IA4DV,GAAG;QAAC;QAAa;KAAS;IAE1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,CAAA,GAAA,gMAAA,CAAA,oBAAiB,AAAD,EAAE,gBAAgB,iBAAiB,gBAAgB;IACvE,GAAG,EAAE;IAEL,IAAI,CAAC,UAAU,QAAQ,yBAAyB;IAEhD,qBACI;kBACK,0BACG;;8BACI,8OAAC,uIAAA,CAAA,UAAE;oBACC,cAAc;oBACd,aAAa;oBACb,iBAAiB;oBACjB,kBAAkB;oBAClB,qBAAqB;;;;;;8BAEzB,8OAAC,0IAAA,CAAA,UAAK;;;;;;;;AAK1B"}},
    {"offset": {"line": 3024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}