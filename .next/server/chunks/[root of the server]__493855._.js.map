{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/formatTime.ts"],"sourcesContent":["export function formatTime(seconds: number) {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = Math.round(seconds % 60);\r\n\r\n    if (hours > 0) {\r\n        return `${hours}:${minutes.toString().padStart(2, \"0\")}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n    } else {\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS,WAAW,OAAe;IACtC,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;IACnC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ;IAC9C,MAAM,mBAAmB,KAAK,KAAK,CAAC,UAAU;IAE9C,IAAI,QAAQ,GAAG;QACX,OAAO,GAAG,MAAM,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,iBAAiB,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IAC5G,OAAO;QACH,OAAO,GAAG,QAAQ,CAAC,EAAE,iBAAiB,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;IACvE;AACJ"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/randomCodeGenerator.ts"],"sourcesContent":["import { randomBytes } from \"crypto\";\r\n\r\nexport default function randomCodeGenerator() {\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const length = 6;\r\n    const code = Array.from(randomBytes(length))\r\n        .map((byte) => characters[byte % characters.length])\r\n        .join(\"\");\r\n\r\n    const minutes = 10;\r\n    const timelimit = minutes * 60 * 1000;\r\n    const expirationDate = Date.now() + timelimit;\r\n\r\n    return {\r\n        code,\r\n        expirationDate,\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEe,SAAS;IACpB,MAAM,aAAa;IACnB,MAAM,SAAS;IACf,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,GAAA,+FAAA,CAAA,cAAW,AAAD,EAAE,SAC/B,GAAG,CAAC,CAAC,OAAS,UAAU,CAAC,OAAO,WAAW,MAAM,CAAC,EAClD,IAAI,CAAC;IAEV,MAAM,UAAU;IAChB,MAAM,YAAY,UAAU,KAAK;IACjC,MAAM,iBAAiB,KAAK,GAAG,KAAK;IAEpC,OAAO;QACH;QACA;IACJ;AACJ"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/createSearchParams.ts"],"sourcesContent":["export function createSearchParams(params: Record<string, string>) {\r\n    const searchParams = new URLSearchParams();\r\n\r\n    setTimeout(() => {\r\n        Object.entries(params).forEach(([key, value]) => {\r\n            searchParams.set(key, value);\r\n        });\r\n    \r\n        const newUrl = `${window.location.pathname}?${searchParams.toString()}`;\r\n    \r\n        if (window.location.search !== `?${searchParams.toString()}`) {\r\n            window.history.replaceState(null, \"\", newUrl);\r\n        }\r\n    }, 1000);\r\n}"],"names":[],"mappings":";;;AAAO,SAAS,mBAAmB,MAA8B;IAC7D,MAAM,eAAe,IAAI;IAEzB,WAAW;QACP,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;YACxC,aAAa,GAAG,CAAC,KAAK;QAC1B;QAEA,MAAM,SAAS,GAAG,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI;QAEvE,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI,EAAE;YAC1D,OAAO,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI;QAC1C;IACJ,GAAG;AACP"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/Email/sendVerificationEmail.ts"],"sourcesContent":["export async function sendVerificationEmail(email: string) {\r\n    try {\r\n        const response = await fetch(\"/api/emails/verification\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const { data, code, expirationDate } = await response.json();\r\n            return { success: true, data, code, expirationDate };\r\n        } else {\r\n            const errorData = await response.json();\r\n            return { success: false, error: errorData.error || \"Failed to send email\" };\r\n        }\r\n    } catch (error) {\r\n        return { success: false, error: (error as Error).message };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,eAAe,sBAAsB,KAAa;IACrD,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,4BAA4B;YACrD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAM;QACjC;QAEA,IAAI,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,MAAM,SAAS,IAAI;YAC1D,OAAO;gBAAE,SAAS;gBAAM;gBAAM;gBAAM;YAAe;QACvD,OAAO;YACH,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO;gBAAE,SAAS;gBAAO,OAAO,UAAU,KAAK,IAAI;YAAuB;QAC9E;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YAAE,SAAS;YAAO,OAAO,AAAC,MAAgB,OAAO;QAAC;IAC7D;AACJ"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/config.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\nimport { getFirestore, doc, getDoc, setDoc, collection, updateDoc, deleteDoc } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_SENDER_ID,\r\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig)\r\nconst googleAuth = new GoogleAuthProvider();\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nexport {\r\n    app,\r\n    auth,\r\n    db,\r\n    doc,\r\n    getDoc,\r\n    setDoc,\r\n    googleAuth,\r\n    deleteDoc,\r\n    updateDoc,\r\n    collection\r\n};"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AADA;;;;AAGA,MAAM,iBAAiB;IACnB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACT;AAEA,MAAM,MAAM,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;AAC1B,MAAM,aAAa,IAAI,sPAAA,CAAA,qBAAkB;AACzC,MAAM,KAAK,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,OAAO,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD,EAAE"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/fetchPlaylist.ts"],"sourcesContent":["import { db, doc, getDoc } from \"./config\";\r\n\r\nexport default async function fetchPlaylist(uid: string) {\r\n    try {\r\n        // Get the playlist ID from the user document\r\n        const userDocRef = doc(db, \"users\", uid);\r\n        const userDocSnapshot = await getDoc(userDocRef);\r\n        if (!userDocSnapshot.exists()) throw new Error(\"User document does not exist\");\r\n\r\n        const userData = userDocSnapshot.data();\r\n        const playlistID = userData?.videosPlaylistID;\r\n        if (!playlistID) throw new Error(\"Playlist ID is missing\");\r\n\r\n        // Fetch the playlist subcollection and it's values\r\n        const playlistDocRef = doc(db, \"users\", uid, \"playlists\", playlistID);\r\n\r\n        const playlistSnapshot = await getDoc(playlistDocRef);\r\n        if (!playlistSnapshot.exists()) throw new Error(\"Playlist document does not exist\");\r\n\r\n        const playlistData = playlistSnapshot.data();\r\n        if (!playlistData) throw new Error(\"No data found in playlist\");\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            playlistData,\r\n            playlistID,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            playlistData: null,\r\n            playlistID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;;AAEe,eAAe,cAAc,GAAW;IACnD,IAAI;QACA,6CAA6C;QAC7C,MAAM,aAAa,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS;QACpC,MAAM,kBAAkB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QACrC,IAAI,CAAC,gBAAgB,MAAM,IAAI,MAAM,IAAI,MAAM;QAE/C,MAAM,WAAW,gBAAgB,IAAI;QACrC,MAAM,aAAa,UAAU;QAC7B,IAAI,CAAC,YAAY,MAAM,IAAI,MAAM;QAEjC,mDAAmD;QACnD,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS,KAAK,aAAa;QAE1D,MAAM,mBAAmB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QACtC,IAAI,CAAC,iBAAiB,MAAM,IAAI,MAAM,IAAI,MAAM;QAEhD,MAAM,eAAe,iBAAiB,IAAI;QAC1C,IAAI,CAAC,cAAc,MAAM,IAAI,MAAM;QACnC,OAAO;YACH,SAAS;YACT,OAAO;YACP;YACA;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,cAAc;YACd,YAAY;QAChB;IACJ;AACJ"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/addNewClientUser.ts"],"sourcesContent":["import { db, setDoc, doc, collection } from \"./config\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\ninterface IAddNewClientUser {\r\n    uid: string;\r\n    email: string | null;\r\n    emailVerified: boolean;\r\n    displayName: string | null;\r\n    setUserRole: (role: string) => void;\r\n    setUserEmail: (email: string | null) => void;\r\n    setUserIsVerified: (verified: boolean) => void;\r\n    setUserUsername: (username: string | null) => void;\r\n}\r\n\r\nexport default async function AddNewClientUser({\r\n    uid,\r\n    email,\r\n    setUserRole,\r\n    displayName,\r\n    setUserEmail,\r\n    emailVerified,\r\n    setUserUsername,\r\n    setUserIsVerified,\r\n}: IAddNewClientUser) {\r\n    const role = \"standard\";\r\n\r\n    try {\r\n        // Generate a random playlist ID\r\n        const playlistID = uuidv4();\r\n\r\n        // Create the user document\r\n        await setDoc(doc(db, \"users\", uid), {\r\n            email,\r\n            username: displayName,\r\n            role: role,\r\n            isVerified: emailVerified,\r\n            videosPlaylistID: playlistID, // Store the generated Playlist ID\r\n        });\r\n\r\n        // Create a default playlist document in the 'playlists' subcollection\r\n        const playlistDocRef = doc(collection(db, \"users\", uid, \"playlists\"), playlistID);\r\n        await setDoc(playlistDocRef, {\r\n            owner: uid,\r\n            public: true,\r\n            title: \"My Playlist\",\r\n            videos: [],\r\n        });\r\n\r\n        // Create a publicPlaylists collection pointing to the playlist and owner uid\r\n        await setDoc(doc(db, \"publicPlaylists\", playlistID), {\r\n            owner: uid,\r\n            public: true,\r\n            videosPlaylistID: playlistID,\r\n            createdAt: new Date().toISOString(),\r\n        });\r\n\r\n        // Update user context\r\n        setUserRole(role);\r\n        setUserEmail(email);\r\n        setUserUsername(displayName);\r\n        setUserIsVerified(emailVerified);\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;AAAA;;;AAce,eAAe,iBAAiB,EAC3C,GAAG,EACH,KAAK,EACL,WAAW,EACX,WAAW,EACX,YAAY,EACZ,aAAa,EACb,eAAe,EACf,iBAAiB,EACD;IAChB,MAAM,OAAO;IAEb,IAAI;QACA,gCAAgC;QAChC,MAAM,aAAa,CAAA,GAAA,4KAAA,CAAA,KAAM,AAAD;QAExB,2BAA2B;QAC3B,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS,MAAM;YAChC;YACA,UAAU;YACV,MAAM;YACN,YAAY;YACZ,kBAAkB;QACtB;QAEA,sEAAsE;QACtE,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,aAAU,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS,KAAK,cAAc;QACtE,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB;YACzB,OAAO;YACP,QAAQ;YACR,OAAO;YACP,QAAQ,EAAE;QACd;QAEA,6EAA6E;QAC7E,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,mBAAmB,aAAa;YACjD,OAAO;YACP,QAAQ;YACR,kBAAkB;YAClB,WAAW,IAAI,OAAO,WAAW;QACrC;QAEA,sBAAsB;QACtB,YAAY;QACZ,aAAa;QACb,gBAAgB;QAChB,kBAAkB;QAElB,OAAO;YACH,SAAS;YACT,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;QACnC;IACJ;AACJ"}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/fetchPlaylistByID.ts"],"sourcesContent":["import { db, doc, getDoc } from \"./config\";\r\n\r\nexport default async function fetchPlaylistByID(playlistID: string) {\r\n    try {\r\n        const publicPlaylistsRef = doc(db, \"publicPlaylists\", playlistID);\r\n        const publicPlaylistSnapshot = await getDoc(publicPlaylistsRef);\r\n        if (!publicPlaylistSnapshot.exists()) throw new Error(\"Playlist is private or does not exist\");\r\n\r\n        const { owner } = publicPlaylistSnapshot.data() || {};\r\n        if (!owner) throw new Error(\"Owner of the playlist could not be determined\");\r\n\r\n        // Fetch playlist from user's subcollection\r\n        const playlistDocRef = doc(db, \"users\", owner, \"playlists\", playlistID);\r\n        const playlistSnapshot = await getDoc(playlistDocRef);\r\n        if (!playlistSnapshot.exists()) throw new Error(\"Playlist document does not exist\");\r\n\r\n        const playlistData = playlistSnapshot.data();\r\n\r\n        // Ensure the playlist is public\r\n        if (!playlistData?.public) throw new Error(\"Playlist is private\");\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: playlistData.title,\r\n            videos: playlistData.videos,\r\n            playlistID,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            videos: null,\r\n            playlistID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;;AAEe,eAAe,kBAAkB,UAAkB;IAC9D,IAAI;QACA,MAAM,qBAAqB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,mBAAmB;QACtD,MAAM,yBAAyB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QAC5C,IAAI,CAAC,uBAAuB,MAAM,IAAI,MAAM,IAAI,MAAM;QAEtD,MAAM,EAAE,KAAK,EAAE,GAAG,uBAAuB,IAAI,MAAM,CAAC;QACpD,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;QAE5B,2CAA2C;QAC3C,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS,OAAO,aAAa;QAC5D,MAAM,mBAAmB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QACtC,IAAI,CAAC,iBAAiB,MAAM,IAAI,MAAM,IAAI,MAAM;QAEhD,MAAM,eAAe,iBAAiB,IAAI;QAE1C,gCAAgC;QAChC,IAAI,CAAC,cAAc,QAAQ,MAAM,IAAI,MAAM;QAE3C,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,aAAa,KAAK;YACzB,QAAQ,aAAa,MAAM;YAC3B;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,QAAQ;YACR,YAAY;QAChB;IACJ;AACJ"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/addVideoToPlaylist.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\nimport { arrayUnion } from \"firebase/firestore\";\r\nimport { db, doc, getDoc, updateDoc } from \"./config\";\r\n\r\nexport default async function addVideoToPlaylist(uid: string, video: Player) {\r\n    try {\r\n        // Get the playlist ID from the user document\r\n        const userDocRef = doc(db, \"users\", uid);\r\n        const userDocSnapshot = await getDoc(userDocRef);\r\n        if (!userDocSnapshot.exists()) throw new Error(\"User document does not exist\");\r\n\r\n        const userData = userDocSnapshot.data();\r\n        const playlistID = userData?.videosPlaylistID;\r\n        if (!playlistID) throw new Error(\"Playlist ID is missing\");\r\n\r\n        // Fetch the playlist subcollection and it's values\r\n        const playlistDocRef = doc(db, \"users\", uid, \"playlists\", playlistID);\r\n        const playlistDocSnapshot = await getDoc(playlistDocRef);\r\n\r\n        if (!playlistDocSnapshot.exists()) {\r\n            throw new Error(\"Playlist does not exist\");\r\n        }\r\n        // Check if the video already exists in the playlist\r\n        const playlistData = playlistDocSnapshot.data();\r\n        const existingVideos = playlistData?.videos || [];\r\n\r\n        const videoExists = existingVideos.some((existingVideo: Player) => existingVideo?.videoID === video?.videoID);\r\n        if (videoExists) {\r\n            return {\r\n                success: false,\r\n                error: \"Video already exists in the playlist\",\r\n                playlistID,\r\n            };\r\n        }\r\n\r\n        // Update the playlist\r\n        await updateDoc(playlistDocRef, {\r\n            videos: arrayUnion(video),\r\n        });\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            playlistID,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            playlistID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;AAAA;;;AAEe,eAAe,mBAAmB,GAAW,EAAE,KAAa;IACvE,IAAI;QACA,6CAA6C;QAC7C,MAAM,aAAa,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS;QACpC,MAAM,kBAAkB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QACrC,IAAI,CAAC,gBAAgB,MAAM,IAAI,MAAM,IAAI,MAAM;QAE/C,MAAM,WAAW,gBAAgB,IAAI;QACrC,MAAM,aAAa,UAAU;QAC7B,IAAI,CAAC,YAAY,MAAM,IAAI,MAAM;QAEjC,mDAAmD;QACnD,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS,KAAK,aAAa;QAC1D,MAAM,sBAAsB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QAEzC,IAAI,CAAC,oBAAoB,MAAM,IAAI;YAC/B,MAAM,IAAI,MAAM;QACpB;QACA,oDAAoD;QACpD,MAAM,eAAe,oBAAoB,IAAI;QAC7C,MAAM,iBAAiB,cAAc,UAAU,EAAE;QAEjD,MAAM,cAAc,eAAe,IAAI,CAAC,CAAC,gBAA0B,eAAe,YAAY,OAAO;QACrG,IAAI,aAAa;YACb,OAAO;gBACH,SAAS;gBACT,OAAO;gBACP;YACJ;QACJ;QAEA,sBAAsB;QACtB,MAAM,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,gBAAgB;YAC5B,QAAQ,CAAA,GAAA,mKAAA,CAAA,aAAU,AAAD,EAAE;QACvB;QAEA,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,YAAY;QAChB;IACJ;AACJ"}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/storeGeneratedCode.ts"],"sourcesContent":["import { setLogLevel } from \"firebase/firestore\";\r\nimport { db, setDoc, doc, getDoc, deleteDoc } from \"./config\";\r\n\r\nexport default async function storeGeneratedCode(email: string, code: string, expirationDate: number) {\r\n    setLogLevel(\"info\");\r\n    try {\r\n        const sanitizedEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\r\n        await setDoc(doc(db, \"verification_codes\", sanitizedEmail), {\r\n            code,\r\n            isUsed: false,\r\n            isExpired: false,\r\n            expirationDate,\r\n        });\r\n\r\n        return {\r\n            success: true,\r\n            code,\r\n            error: null,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            code: null,\r\n        };\r\n    }\r\n}\r\n\r\nexport async function isCodeValid(email: string, inputCode: string) {\r\n    let verificationCode;\r\n    try {\r\n        const sanitizedEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\r\n        const docRef = doc(db, \"verification_codes\", sanitizedEmail);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        // If document does not exist, return valid false\r\n        if (!docSnap.exists()) {\r\n            return {\r\n                valid: false,\r\n                success: false,\r\n                error: \"Code is expired or already used\",\r\n            };\r\n        }\r\n\r\n        const data = docSnap.data();\r\n        const { code, isUsed, expirationDate } = data;\r\n        verificationCode = code;\r\n\r\n        // Check if the code has expired or is already used\r\n        const expired = Date.now() > expirationDate;\r\n        const used = isUsed;\r\n\r\n        // If expired or used, delete the document and return valid: false\r\n        if (expired || used) {\r\n            await deleteDoc(docRef);\r\n            return {\r\n                valid: false,\r\n                success: false,\r\n                error: \"Code is expired or already used\",\r\n            };\r\n        }\r\n\r\n        // Check if the input code matches the stored code\r\n        const validCode = inputCode === code;\r\n        if (!validCode) {\r\n            return {\r\n                valid: false,\r\n                success: false,\r\n                error: \"Invalid code\",\r\n            };\r\n        }\r\n\r\n        // If everything is valid, return valid as true and mark the code as used\r\n        await deleteDoc(docRef);\r\n        return {\r\n            valid: true,\r\n            success: true,\r\n            error: null,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            valid: false,\r\n            success: false,\r\n            error: (error as Error).message,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;AACA;;;AAEe,eAAe,mBAAmB,KAAa,EAAE,IAAY,EAAE,cAAsB;IAChG,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAAE;IACZ,IAAI;QACA,MAAM,iBAAiB,MAAM,OAAO,CAAC,iBAAiB;QACtD,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,sBAAsB,iBAAiB;YACxD;YACA,QAAQ;YACR,WAAW;YACX;QACJ;QAEA,OAAO;YACH,SAAS;YACT;YACA,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ;AAEO,eAAe,YAAY,KAAa,EAAE,SAAiB;IAC9D,IAAI;IACJ,IAAI;QACA,MAAM,iBAAiB,MAAM,OAAO,CAAC,iBAAiB;QACtD,MAAM,SAAS,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,sBAAsB;QAC7C,MAAM,UAAU,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QAE7B,iDAAiD;QACjD,IAAI,CAAC,QAAQ,MAAM,IAAI;YACnB,OAAO;gBACH,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;QACJ;QAEA,MAAM,OAAO,QAAQ,IAAI;QACzB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG;QACzC,mBAAmB;QAEnB,mDAAmD;QACnD,MAAM,UAAU,KAAK,GAAG,KAAK;QAC7B,MAAM,OAAO;QAEb,kEAAkE;QAClE,IAAI,WAAW,MAAM;YACjB,MAAM,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE;YAChB,OAAO;gBACH,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;QACJ;QAEA,kDAAkD;QAClD,MAAM,YAAY,cAAc;QAChC,IAAI,CAAC,WAAW;YACZ,OAAO;gBACH,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;QACJ;QAEA,yEAAyE;QACzE,MAAM,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE;QAChB,OAAO;YACH,OAAO;YACP,SAAS;YACT,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,OAAO;YACP,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;QACnC;IACJ;AACJ"}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/removeVideoFromPlaylist.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\nimport { arrayRemove } from \"firebase/firestore\";\r\nimport { db, doc, getDoc, updateDoc } from \"./config\";\r\n\r\nexport default async function removeVideoFromPlaylist(uid: string, video: Player) {\r\n    try {\r\n        // Get the playlist ID from the user document\r\n        const userDocRef = doc(db, \"users\", uid);\r\n        const userDocSnapshot = await getDoc(userDocRef);\r\n        if (!userDocSnapshot.exists()) throw new Error(\"User document does not exist\");\r\n\r\n        const userData = userDocSnapshot.data();\r\n        const playlistID = userData?.videosPlaylistID;\r\n        if (!playlistID) throw new Error(\"Playlist ID is missing\");\r\n\r\n        // Fetch the playlist subcollection and it's values\r\n        const playlistDocRef = doc(db, \"users\", uid, \"playlists\", playlistID);\r\n\r\n        // Remove the specific video\r\n        await updateDoc(playlistDocRef, {\r\n            videos: arrayRemove(video),\r\n        });\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            playlistID,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            playlistID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;AAAA;;;AAEe,eAAe,wBAAwB,GAAW,EAAE,KAAa;IAC5E,IAAI;QACA,6CAA6C;QAC7C,MAAM,aAAa,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS;QACpC,MAAM,kBAAkB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;QACrC,IAAI,CAAC,gBAAgB,MAAM,IAAI,MAAM,IAAI,MAAM;QAE/C,MAAM,WAAW,gBAAgB,IAAI;QACrC,MAAM,aAAa,UAAU;QAC7B,IAAI,CAAC,YAAY,MAAM,IAAI,MAAM;QAEjC,mDAAmD;QACnD,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS,KAAK,aAAa;QAE1D,4BAA4B;QAC5B,MAAM,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,gBAAgB;YAC5B,QAAQ,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAAE;QACxB;QAEA,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,YAAY;QAChB;IACJ;AACJ"}},
    {"offset": {"line": 648, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/authentication/login.ts"],"sourcesContent":["import { auth } from \"../config\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport default async function useLogin(email: string, password: string) {\r\n    try {\r\n        const userCredentials = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredentials.user;\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            user,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            user: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AADA;;;AAGe,eAAe,SAAS,KAAa,EAAE,QAAgB;IAClE,IAAI;QACA,MAAM,kBAAkB,MAAM,CAAA,GAAA,+PAAA,CAAA,6BAA0B,AAAD,EAAE,2IAAA,CAAA,OAAI,EAAE,OAAO;QACtE,MAAM,OAAO,gBAAgB,IAAI;QAEjC,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/authentication/signup.ts"],"sourcesContent":["import { auth } from \"../config\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport default async function useSignup(email: string, password: string, confirmPassword: string) {\r\n    if (!email || !password) {\r\n        return {\r\n            success: false,\r\n            error: \"Email and password are required\",\r\n            user: null,\r\n        };\r\n    }\r\n    const passwordValidation = PasswordIsValid(password, confirmPassword);\r\n    if (!passwordValidation.validPassword) {\r\n        return {\r\n            success: false,\r\n            error: passwordValidation.message,\r\n            user: null,\r\n        };\r\n    }\r\n\r\n    try {\r\n        const userCredentials = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = userCredentials.user;\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            user,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            user: null,\r\n        };\r\n    }\r\n}\r\n\r\nexport function PasswordIsValid(password: string, confirmPassword: string) {\r\n    const isLengthValid = password.length >= 8 && password.length <= 266; // Set minimum and maximum length\r\n    const hasTwoLetters = (password.match(/[A-Za-z]/g) || []).length >= 2; // Set minimum amount of letters\r\n    const hasTwoNumbers = (password.match(/[0-9]/g) || []).length >= 2; // Set minimum amount of numbers\r\n    const passwordsMatch = password === confirmPassword; // Check if the two passwords match\r\n    const validPassword = isLengthValid && hasTwoLetters && hasTwoNumbers && passwordsMatch; // Validate password based on the requirements above\r\n\r\n    // Set error messages if any of the conditions are not met\r\n    if (password === \"\" || confirmPassword === \"\" || !validPassword) {\r\n        let message = \"Password must be at least 8 characters long, contain at least 2 letters, 2 numbers, and match the confirm password.\";\r\n        if (!isLengthValid) message = \"Password must be between 8 and 266 characters.\";\r\n        else if (!hasTwoLetters) message = \"Password must contain at least 2 letters.\";\r\n        else if (!hasTwoNumbers) message = \"Password must contain at least 2 numbers.\";\r\n        else if (!passwordsMatch) message = \"Passwords do not match.\";\r\n\r\n        return {\r\n            validPassword,\r\n            message,\r\n        };\r\n    }\r\n    return {\r\n        validPassword,\r\n        message: \"Password validation successful\",\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AADA;;;AAGe,eAAe,UAAU,KAAa,EAAE,QAAgB,EAAE,eAAuB;IAC5F,IAAI,CAAC,SAAS,CAAC,UAAU;QACrB,OAAO;YACH,SAAS;YACT,OAAO;YACP,MAAM;QACV;IACJ;IACA,MAAM,qBAAqB,gBAAgB,UAAU;IACrD,IAAI,CAAC,mBAAmB,aAAa,EAAE;QACnC,OAAO;YACH,SAAS;YACT,OAAO,mBAAmB,OAAO;YACjC,MAAM;QACV;IACJ;IAEA,IAAI;QACA,MAAM,kBAAkB,MAAM,CAAA,GAAA,mQAAA,CAAA,iCAA8B,AAAD,EAAE,2IAAA,CAAA,OAAI,EAAE,OAAO;QAC1E,MAAM,OAAO,gBAAgB,IAAI;QAEjC,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ;AAEO,SAAS,gBAAgB,QAAgB,EAAE,eAAuB;IACrE,MAAM,gBAAgB,SAAS,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,KAAK,iCAAiC;IACvG,MAAM,gBAAgB,CAAC,SAAS,KAAK,CAAC,gBAAgB,EAAE,EAAE,MAAM,IAAI,GAAG,gCAAgC;IACvG,MAAM,gBAAgB,CAAC,SAAS,KAAK,CAAC,aAAa,EAAE,EAAE,MAAM,IAAI,GAAG,gCAAgC;IACpG,MAAM,iBAAiB,aAAa,iBAAiB,mCAAmC;IACxF,MAAM,gBAAgB,iBAAiB,iBAAiB,iBAAiB,gBAAgB,oDAAoD;IAE7I,0DAA0D;IAC1D,IAAI,aAAa,MAAM,oBAAoB,MAAM,CAAC,eAAe;QAC7D,IAAI,UAAU;QACd,IAAI,CAAC,eAAe,UAAU;aACzB,IAAI,CAAC,eAAe,UAAU;aAC9B,IAAI,CAAC,eAAe,UAAU;aAC9B,IAAI,CAAC,gBAAgB,UAAU;QAEpC,OAAO;YACH;YACA;QACJ;IACJ;IACA,OAAO;QACH;QACA,SAAS;IACb;AACJ"}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/authentication/logout.ts"],"sourcesContent":["import { auth } from \"../config\";\r\nimport { signOut } from \"firebase/auth\";\r\n\r\nexport default async function useLogout() {\r\n    try {\r\n        await signOut(auth);\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            user: null,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n        };\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AADA;;;AAGe,eAAe;IAC1B,IAAI;QACA,MAAM,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD,EAAE,2IAAA,CAAA,OAAI;QAClB,OAAO;YACH,SAAS;YACT,OAAO;YACP,MAAM;QACV;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;QACnC;IACJ;AACJ"}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/firebase/authentication/googleLogin.ts"],"sourcesContent":["import { auth, googleAuth } from \"../config\";\r\nimport { signInWithPopup } from \"firebase/auth\";\r\n\r\nexport default async function googleLogin() {\r\n    try {\r\n        const result = await signInWithPopup(auth, googleAuth);\r\n        const user = result.user;\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            user,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            user: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AADA;;;AAGe,eAAe;IAC1B,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,mPAAA,CAAA,kBAAe,AAAD,EAAE,2IAAA,CAAA,OAAI,EAAE,2IAAA,CAAA,aAAU;QACrD,MAAM,OAAO,OAAO,IAAI;QACxB,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/store/useUser.ts"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { auth, db, doc, getDoc } from \"@/app/firebase\";\r\nimport { onAuthStateChanged, Unsubscribe, User } from \"firebase/auth\";\r\n\r\ninterface UserState {\r\n    loading: boolean;\r\n    user: User | null;\r\n    role: string | null;\r\n    code: string | null;\r\n    email: string | null;\r\n    username: string | null;\r\n    isPlaylistActive: boolean;\r\n    isVerified: boolean | null;\r\n    codeIsUsed: boolean | null;\r\n    codeIsExpired: boolean | null;\r\n    setCode: (code: string | null) => void;\r\n    subscribeToAuthState: () => Unsubscribe;\r\n    setUserRole: (role: string | null) => void;\r\n    togglePlaylist: (enabled: boolean) => void;\r\n    setUserEmail: (email: string | null) => void;\r\n    fetchUserData: (uid: string) => Promise<void>;\r\n    setUserUsername: (username: string | null) => void;\r\n    setCodeIsUsed: (codeIsUsed: boolean | null) => void;\r\n    setUserIsVerified: (isVerified: boolean | null) => void;\r\n    setCodeIsExpired: (codeIsExpired: boolean | null) => void;\r\n}\r\n\r\nexport const useUser = create<UserState>((set) => ({\r\n    user: null,\r\n    role: null,\r\n    code: null,\r\n    email: null,\r\n    loading: true,\r\n    username: null,\r\n    codeIsUsed: null,\r\n    isVerified: null,\r\n    codeIsExpired: null,\r\n    isPlaylistActive: false,\r\n\r\n    setCode: (code) => set({ code }),\r\n    setUserRole: (role) => set({ role }),\r\n    setUserEmail: (email) => set({ email }),\r\n    setUserUsername: (username) => set({ username }),\r\n    setCodeIsUsed: (codeIsUsed) => set({ codeIsUsed }),\r\n    setUserIsVerified: (isVerified) => set({ isVerified }),\r\n    setCodeIsExpired: (codeIsExpired) => set({ codeIsExpired }),\r\n    togglePlaylist: (enabled) => set({ isPlaylistActive: enabled }),\r\n\r\n    fetchUserData: async (uid) => {\r\n        const userDocRef = doc(db, \"users\", uid);\r\n        const userDocSnap = await getDoc(userDocRef);\r\n\r\n        if (userDocSnap.exists()) {\r\n            const data = userDocSnap.data();\r\n            set({\r\n                role: data.role || null,\r\n                email: data.email || null,\r\n                username: data.displayName || null,\r\n                isVerified: data.isVerified || false,\r\n            });\r\n        }\r\n    },\r\n\r\n    // Initialize auth state\r\n    subscribeToAuthState: () => {\r\n        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n            set({ user: currentUser, loading: false });\r\n            if (currentUser) {\r\n                useUser.getState().fetchUserData(currentUser.uid);\r\n                set({ isPlaylistActive: true }); // Set to true upon login\r\n            } else {\r\n                set({\r\n                    role: null,\r\n                    email: null,\r\n                    username: null,\r\n                    isVerified: null,\r\n                    code: null,\r\n                    codeIsUsed: null,\r\n                    codeIsExpired: null,\r\n                    isPlaylistActive: false, // Set to false when logged out\r\n                });\r\n            }\r\n        });\r\n        return unsubscribe;\r\n    },\r\n}));\r\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;AACA;AAAA;AACA;;;;AAyBO,MAAM,UAAU,CAAA,GAAA,0IAAA,CAAA,SAAM,AAAD,EAAa,CAAC,MAAQ,CAAC;QAC/C,MAAM;QACN,MAAM;QACN,MAAM;QACN,OAAO;QACP,SAAS;QACT,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,eAAe;QACf,kBAAkB;QAElB,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,aAAa,CAAC,OAAS,IAAI;gBAAE;YAAK;QAClC,cAAc,CAAC,QAAU,IAAI;gBAAE;YAAM;QACrC,iBAAiB,CAAC,WAAa,IAAI;gBAAE;YAAS;QAC9C,eAAe,CAAC,aAAe,IAAI;gBAAE;YAAW;QAChD,mBAAmB,CAAC,aAAe,IAAI;gBAAE;YAAW;QACpD,kBAAkB,CAAC,gBAAkB,IAAI;gBAAE;YAAc;QACzD,gBAAgB,CAAC,UAAY,IAAI;gBAAE,kBAAkB;YAAQ;QAE7D,eAAe,OAAO;YAClB,MAAM,aAAa,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,2IAAA,CAAA,KAAE,EAAE,SAAS;YACpC,MAAM,cAAc,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;YAEjC,IAAI,YAAY,MAAM,IAAI;gBACtB,MAAM,OAAO,YAAY,IAAI;gBAC7B,IAAI;oBACA,MAAM,KAAK,IAAI,IAAI;oBACnB,OAAO,KAAK,KAAK,IAAI;oBACrB,UAAU,KAAK,WAAW,IAAI;oBAC9B,YAAY,KAAK,UAAU,IAAI;gBACnC;YACJ;QACJ;QAEA,wBAAwB;QACxB,sBAAsB;YAClB,MAAM,cAAc,CAAA,GAAA,sPAAA,CAAA,qBAAkB,AAAD,EAAE,2IAAA,CAAA,OAAI,EAAE,CAAC;gBAC1C,IAAI;oBAAE,MAAM;oBAAa,SAAS;gBAAM;gBACxC,IAAI,aAAa;oBACb,QAAQ,QAAQ,GAAG,aAAa,CAAC,YAAY,GAAG;oBAChD,IAAI;wBAAE,kBAAkB;oBAAK,IAAI,yBAAyB;gBAC9D,OAAO;oBACH,IAAI;wBACA,MAAM;wBACN,OAAO;wBACP,UAAU;wBACV,YAAY;wBACZ,MAAM;wBACN,YAAY;wBACZ,eAAe;wBACf,kBAAkB;oBACtB;gBACJ;YACJ;YACA,OAAO;QACX;IACJ,CAAC"}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/store/useMedia.ts"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { Player } from \"@/app/utils\";\r\nimport { User } from \"firebase/auth\";\r\nimport { fetchPlaylist, removeVideoFromPlaylist } from \"@/app/firebase\";\r\n\r\ninterface MediaState {\r\n    videos: Player[];\r\n    isLoading: boolean;\r\n    playlistID: string;\r\n    error: string | null;\r\n    playlistTitle: string;\r\n    playlistVideos: Player[];\r\n    queueVideos: Player[];\r\n    currentVideo: Player | null;\r\n    loopEnabled: boolean;\r\n    videoIsEnded: boolean;\r\n    isPlaylistActive: boolean;\r\n\r\n    // Playlist Methods\r\n    clearPlaylist: () => void;\r\n    addToPlaylist: (video: Player) => void;\r\n    togglePlaylist: (isActive: boolean) => void;\r\n    removeFromPlaylist: (video: Player, userID: string) => Promise<void>;\r\n    setPlaylistVideos: (videos: Player[]) => void;\r\n    fetchPlaylistData: (user: User | null) => Promise<void>;\r\n\r\n    // Queue Methods\r\n    clearQueue: () => void;\r\n    addToQueue: (video: Player) => void;\r\n    removeFromQueue: (video: Player) => void;\r\n\r\n    // Player Methods\r\n    addVideo: (video: Player) => void;\r\n    setVideos: (Videos: Player[]) => void;\r\n    clearVideos: () => void;\r\n    toggleLoop: (enabled: boolean) => void;\r\n    setCurrentVideo: (video: Player) => void;\r\n    setVideoIsEnded: (ended: boolean) => void;\r\n    playNextVideo: (\r\n        setTiktokVideo: (tiktokVideo: Player) => void,\r\n        setYoutubeVideo: (youtubeVideo: Player) => void,\r\n        setSoundCloudVideo: (soundCloudVideo: Player) => void,\r\n        setSliderValue: (value: [number, number]) => void,\r\n        isPlaylistActive: boolean,\r\n        playlistID: string | undefined,\r\n        createSearchParams: (params: Record<string, string>) => void\r\n    ) => void;\r\n    playSelectedVideo: (\r\n        index: number,\r\n        setTiktokVideo: (tiktokVideo: Player) => void,\r\n        setYoutubeVideo: (youtubeVideo: Player) => void,\r\n        setSoundCloudVideo: (soundCloudVideo: Player) => void,\r\n        setSliderValue: (value: [number, number]) => void,\r\n        isPlaylistActive: boolean,\r\n        playlistID: string | undefined\r\n    ) => void;\r\n    removeVideo: (video: Player) => void;\r\n}\r\n\r\nexport const useMedia = create<MediaState>((set, get) => ({\r\n    error: null,\r\n    isLoading: false,\r\n    queueVideos: [],\r\n    playlistVideos: [],\r\n    currentVideo: null,\r\n    loopEnabled: false,\r\n    videoIsEnded: false,\r\n    playlistID: \"\",\r\n    playlistTitle: \"\",\r\n    isPlaylistActive: false,\r\n\r\n    videos: [],\r\n    removeVideo: (video) =>\r\n        set((state) => ({\r\n            videos: state.videos.filter((v) => v?.videoID !== video?.videoID),\r\n        })),\r\n\r\n    addVideo: (video) =>\r\n        set((state) => ({\r\n            videos: [...state.videos, video],\r\n        })),\r\n    setVideos: (Videos: Player[]) => set({ videos: Videos }),\r\n    clearVideos: () => set({ videos: [] }),\r\n\r\n    setCurrentVideo: (video) => set({ currentVideo: video }),\r\n    setPlaylistVideos: (videos: Player[]) => set({ playlistVideos: videos }),\r\n\r\n    toggleLoop: (enabled: boolean) => set({ loopEnabled: enabled }),\r\n\r\n    addToQueue: (video) =>\r\n        set((state) => ({\r\n            queueVideos: [...state.queueVideos, video],\r\n        })),\r\n    removeFromQueue: (video) =>\r\n        set((state) => ({\r\n            queueVideos: state.queueVideos.filter((v) => v?.videoID !== video?.videoID),\r\n        })),\r\n    clearQueue: () => set({ queueVideos: [] }),\r\n\r\n    addToPlaylist: (video) =>\r\n        set((state) => ({\r\n            playlistVideos: [...state.playlistVideos, video],\r\n        })),\r\n    removeFromPlaylist: async (video, userID) => {\r\n        const result = await removeVideoFromPlaylist(userID, video);\r\n\r\n        if (result.success) {\r\n            set((state) => ({\r\n                playlistVideos: state.playlistVideos.filter((v) => v?.videoID !== video?.videoID),\r\n            }));\r\n        } else {\r\n            console.error(result.error);\r\n        }\r\n    },\r\n    clearPlaylist: () => set({ playlistVideos: [] }),\r\n\r\n    togglePlaylist: (isActive) => set({ isPlaylistActive: isActive }),\r\n\r\n    setVideoIsEnded: (ended) => set({ videoIsEnded: ended }),\r\n\r\n    playNextVideo: (setTiktokVideo, setYoutubeVideo, setSoundCloudVideo, setSliderValue, isPlaylistActive, playlistID, createSearchParams) => {\r\n        const { videos, currentVideo, setCurrentVideo } = get();\r\n\r\n        console.log(\"Active Videos:\", videos); // Check active videos\r\n\r\n        console.log(currentVideo);\r\n        if (!currentVideo || videos.length === 0) return;\r\n\r\n        const currentIndex = videos.findIndex((video) => video?.videoID === currentVideo.videoID);\r\n        const nextIndex = (currentIndex + 1) % videos.length;\r\n        const nextVideo = videos[nextIndex];\r\n\r\n        console.log(\"Current Video:\", currentVideo); // Check current video\r\n        console.log(\"Next Video:\", nextVideo); // Check next video\r\n\r\n        if ((nextVideo && nextVideo.platform === \"youtube\") || (nextVideo && nextVideo.url.includes(\"youtube\"))) {\r\n            setTiktokVideo(null);\r\n            setSoundCloudVideo(null);\r\n            setYoutubeVideo({ ...nextVideo, index: nextIndex.toString() });\r\n            setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n            console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n            const { start, end } = nextVideo;\r\n            setTimeout(() => {\r\n                if (start && end) {\r\n                    setSliderValue([parseInt(start), parseInt(end)]);\r\n                }\r\n            }, 500);\r\n        } else if ((nextVideo && nextVideo.platform === \"tiktok\") || (nextVideo && nextVideo.url.includes(\"tiktok\"))) {\r\n            console.log(\"Setting TikTok video:\", nextVideo.videoID); // Log next TikTok video\r\n            setYoutubeVideo(null);\r\n            setSoundCloudVideo(null);\r\n            setTiktokVideo({ ...nextVideo, index: nextIndex.toString() });\r\n            setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n            console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n            // const index = nextVideo?.index?.toString();\r\n            // if (playlistID && index) {\r\n            //     const newSearchParams: Record<string, string> = {\r\n            //         tVideoID: currentVideo.videoID,\r\n            //         list: playlistID,\r\n            //         index,\r\n            //     };\r\n            //     console.log(newSearchParams);\r\n            // }\r\n        } else if ((nextVideo && nextVideo.platform === \"soundcloud\") || (nextVideo && nextVideo.url.includes(\"soundcloud\"))) {\r\n            setYoutubeVideo(null);\r\n            setTiktokVideo(null);\r\n            setSoundCloudVideo({ ...nextVideo, index: nextIndex.toString() });\r\n            setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n\r\n            const { start, end } = nextVideo;\r\n            setTimeout(() => {\r\n                if (start && end) {\r\n                    setSliderValue([parseInt(start), parseInt(end)]);\r\n                }\r\n            }, 500);\r\n        }\r\n    },\r\n\r\n    playSelectedVideo: (index, setTiktokVideo, setYoutubeVideo, setSoundCloudVideo, setSliderValue, isPlaylistActive, playlistID) => {\r\n        const { playlistVideos, queueVideos, currentVideo, setCurrentVideo } = get();\r\n\r\n        const activeVideos = isPlaylistActive ? playlistVideos : queueVideos;\r\n        console.log(\"Active Videos:\", activeVideos); // Check active videos\r\n\r\n        console.log(currentVideo);\r\n        if (!currentVideo || activeVideos.length === 0 || index < 0 || index >= activeVideos.length) return;\r\n\r\n        const selectedVideo = activeVideos[index]; // Get the selected video based on the provided index\r\n        console.log(\"Selected Video:\", selectedVideo); // Log the selected video\r\n\r\n        if (selectedVideo) {\r\n            // Check the platform of the selected video\r\n            if (selectedVideo.platform === \"youtube\" || selectedVideo.url.includes(\"youtube\")) {\r\n                setTiktokVideo(null);\r\n                setSoundCloudVideo(null);\r\n                setYoutubeVideo({ ...selectedVideo, index: index.toString() });\r\n                setCurrentVideo({ ...selectedVideo, index: index.toString() });\r\n                console.log(\"Current video set to:\", selectedVideo); // Log current video after setting\r\n\r\n                const { start, end } = selectedVideo;\r\n                setTimeout(() => {\r\n                    if (start && end) {\r\n                        setSliderValue([parseInt(start), parseInt(end)]);\r\n                    }\r\n                }, 500);\r\n            } else if (selectedVideo.platform === \"tiktok\" || selectedVideo.url.includes(\"tiktok\")) {\r\n                console.log(\"Setting TikTok video:\", selectedVideo.videoID); // Log next TikTok video\r\n                setYoutubeVideo(null);\r\n                setSoundCloudVideo(null);\r\n                setTiktokVideo({ ...selectedVideo, index: index.toString() });\r\n                setCurrentVideo({ ...selectedVideo, index: index.toString() });\r\n                console.log(\"Current video set to:\", selectedVideo); // Log current video after setting\r\n\r\n                const newIndex = selectedVideo?.index?.toString();\r\n                if (playlistID && newIndex) {\r\n                    const newSearchParams: Record<string, string> = {\r\n                        tVideoID: selectedVideo.videoID,\r\n                        list: playlistID,\r\n                        index: newIndex,\r\n                    };\r\n                    console.log(newSearchParams);\r\n                    // Uncomment the next line if you want to create search params\r\n                    // createSearchParams(newSearchParams);\r\n                }\r\n            } else if (selectedVideo.platform === \"soundcloud\" || selectedVideo.url.includes(\"soundcloud\")) {\r\n                setTiktokVideo(null);\r\n                setYoutubeVideo(null);\r\n                setSoundCloudVideo({ ...selectedVideo, index: index.toString() });\r\n                setCurrentVideo({ ...selectedVideo, index: index.toString() });\r\n                console.log(\"Current video set to:\", selectedVideo); // Log current video after setting\r\n\r\n                const { start, end } = selectedVideo;\r\n                setTimeout(() => {\r\n                    if (start && end) {\r\n                        setSliderValue([parseInt(start), parseInt(end)]);\r\n                    }\r\n                }, 500);\r\n            }\r\n        } else {\r\n            console.warn(\"No video found at the specified index.\"); // Log a warning if the video is not found\r\n        }\r\n    },\r\n\r\n    fetchPlaylistData: async (user) => {\r\n        if (!user?.uid) return;\r\n\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const result = await fetchPlaylist(user.uid);\r\n            if (result.success && result.playlistData) {\r\n                set({\r\n                    playlistTitle: result.playlistData.title,\r\n                    playlistVideos: result.playlistData.videos as Player[],\r\n                    playlistID: result.playlistID,\r\n                    isLoading: false,\r\n                });\r\n            } else {\r\n                set({ error: result.error || \"Failed to fetch playlist.\", isLoading: false });\r\n            }\r\n        } catch (error) {\r\n            set({ error: (error as Error).message, isLoading: false });\r\n        }\r\n    },\r\n}));\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/store/usePlayer.ts"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { IPlayer, Player } from \"@/app/utils\";\r\n\r\nexport const usePlayer = create<IPlayer>((set, get) => ({\r\n    duration: 0,\r\n    currentTime: 0,\r\n    tiktokVideo: null,\r\n    youtubeVideo: null,\r\n    sliderValue: [0, 0],\r\n    soundCloudVideo: null,\r\n    setDuration: (duration) => {\r\n        set({ duration });\r\n        const sliderValue = get().sliderValue; // Automatically reset slider to match new duration\r\n        set({ sliderValue: [sliderValue[0], duration] });\r\n    },\r\n    setSliderValue: (value) => set({ sliderValue: value }),\r\n    setYoutubeVideo: (video: Player) => {\r\n        set({ youtubeVideo: video });\r\n    },\r\n    setTiktokVideo: (video: Player) => {\r\n        set({ tiktokVideo: video });\r\n    },\r\n    setSoundCloudVideo: (video: Player) => {\r\n        set({ soundCloudVideo: video });\r\n    },\r\n    resetSlider: () => {\r\n        const duration = get().duration;\r\n        set({ sliderValue: [0, duration] });\r\n    },\r\n}));\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,YAAY,CAAA,GAAA,0IAAA,CAAA,SAAM,AAAD,EAAW,CAAC,KAAK,MAAQ,CAAC;QACpD,UAAU;QACV,aAAa;QACb,aAAa;QACb,cAAc;QACd,aAAa;YAAC;YAAG;SAAE;QACnB,iBAAiB;QACjB,aAAa,CAAC;YACV,IAAI;gBAAE;YAAS;YACf,MAAM,cAAc,MAAM,WAAW,EAAE,mDAAmD;YAC1F,IAAI;gBAAE,aAAa;oBAAC,WAAW,CAAC,EAAE;oBAAE;iBAAS;YAAC;QAClD;QACA,gBAAgB,CAAC,QAAU,IAAI;gBAAE,aAAa;YAAM;QACpD,iBAAiB,CAAC;YACd,IAAI;gBAAE,cAAc;YAAM;QAC9B;QACA,gBAAgB,CAAC;YACb,IAAI;gBAAE,aAAa;YAAM;QAC7B;QACA,oBAAoB,CAAC;YACjB,IAAI;gBAAE,iBAAiB;YAAM;QACjC;QACA,aAAa;YACT,MAAM,WAAW,MAAM,QAAQ;YAC/B,IAAI;gBAAE,aAAa;oBAAC;oBAAG;iBAAS;YAAC;QACrC;IACJ,CAAC"}},
    {"offset": {"line": 1318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1324, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/store/useClient.ts"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\ninterface IClient {\r\n    isClient: boolean;\r\n    initializeClient: () => void;\r\n}\r\n\r\nexport const useClient = create<IClient>((set) => ({\r\n    isClient: false,\r\n    initializeClient: () => set({ isClient: true }),\r\n}));\r\n"],"names":[],"mappings":";;;AAAA;;AAOO,MAAM,YAAY,CAAA,GAAA,0IAAA,CAAA,SAAM,AAAD,EAAW,CAAC,MAAQ,CAAC;QAC/C,UAAU;QACV,kBAAkB,IAAM,IAAI;gBAAE,UAAU;YAAK;IACjD,CAAC"}},
    {"offset": {"line": 1335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1341, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/store/usePlaylist.ts"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { User } from \"firebase/auth\";\r\nimport { Player } from \"@/app/utils\";\r\nimport { fetchPlaylist } from \"@/app/firebase\";\r\n\r\ninterface IPlaylist {\r\n    playlistTitle: string;\r\n    playlistVideos: Player[];\r\n    currentVideo: Player;\r\n    playlistID: string;\r\n    isLoading: boolean;\r\n    error: string | null;\r\n    setCurrentVideo: (video: Player) => void;\r\n    setPlaylistVideos: (videos: Player[]) => void;\r\n    fetchPlaylistData: (user: User | null) => Promise<void>;\r\n}\r\n\r\nexport const usePlaylist = create<IPlaylist>((set) => ({\r\n    error: null,\r\n    isLoading: false,\r\n    playlistID: \"\",\r\n    playlistTitle: \"\",\r\n    playlistVideos: [],\r\n    currentVideo: null,\r\n\r\n    setCurrentVideo: (video) => set({ currentVideo: video }),\r\n    setPlaylistVideos: (videos: Player[]) => set({ playlistVideos: videos }),\r\n\r\n    fetchPlaylistData: async (user) => {\r\n        if (!user?.uid) return;\r\n\r\n        set({ isLoading: true, error: null });\r\n        try {\r\n            const result = await fetchPlaylist(user.uid);\r\n\r\n            if (result.success && result.playlistData) {\r\n                set({\r\n                    playlistTitle: result.playlistData.title,\r\n                    playlistVideos: result.playlistData.videos as Player[],\r\n                    playlistID: result.playlistID,\r\n                    isLoading: false,\r\n                });\r\n            } else {\r\n                set({ error: result.error || \"Failed to fetch playlist.\", isLoading: false });\r\n            }\r\n        } catch (error) {\r\n            set({ error: (error as Error).message, isLoading: false });\r\n        }\r\n    },\r\n}));\r\n"],"names":[],"mappings":";;;AAGA;AAHA;AAGA;;;AAcO,MAAM,cAAc,CAAA,GAAA,0IAAA,CAAA,SAAM,AAAD,EAAa,CAAC,MAAQ,CAAC;QACnD,OAAO;QACP,WAAW;QACX,YAAY;QACZ,eAAe;QACf,gBAAgB,EAAE;QAClB,cAAc;QAEd,iBAAiB,CAAC,QAAU,IAAI;gBAAE,cAAc;YAAM;QACtD,mBAAmB,CAAC,SAAqB,IAAI;gBAAE,gBAAgB;YAAO;QAEtE,mBAAmB,OAAO;YACtB,IAAI,CAAC,MAAM,KAAK;YAEhB,IAAI;gBAAE,WAAW;gBAAM,OAAO;YAAK;YACnC,IAAI;gBACA,MAAM,SAAS,MAAM,CAAA,GAAA,8KAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,GAAG;gBAE3C,IAAI,OAAO,OAAO,IAAI,OAAO,YAAY,EAAE;oBACvC,IAAI;wBACA,eAAe,OAAO,YAAY,CAAC,KAAK;wBACxC,gBAAgB,OAAO,YAAY,CAAC,MAAM;wBAC1C,YAAY,OAAO,UAAU;wBAC7B,WAAW;oBACf;gBACJ,OAAO;oBACH,IAAI;wBAAE,OAAO,OAAO,KAAK,IAAI;wBAA6B,WAAW;oBAAM;gBAC/E;YACJ,EAAE,OAAO,OAAO;gBACZ,IAAI;oBAAE,OAAO,AAAC,MAAgB,OAAO;oBAAE,WAAW;gBAAM;YAC5D;QACJ;IACJ,CAAC"}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1423, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/setNewVideo.ts"],"sourcesContent":["import { useMedia } from \"@/app/store\";\r\nimport { createSearchParams } from \"../createSearchParams\";\r\nimport { Player } from \"../interfaces\";\r\nimport { containsVideoID } from \"./containsVideo\";\r\nimport getVideoDetails from \"./getVideoDetails\";\r\n\r\ntype SetVideo = (video: Player) => void;\r\n\r\nexport default async function setNewVideo(\r\n    setYoutubeVideo: SetVideo,\r\n    setTiktokVideo: SetVideo,\r\n    isPlaylistActive: boolean,\r\n    setSliderValue: (value: [number, number]) => void,\r\n    playlistID?: string | undefined\r\n) {\r\n    const { playlistVideos, queueVideos, currentVideo, setCurrentVideo } = useMedia();\r\n\r\n    const activeVideos = isPlaylistActive ? playlistVideos : queueVideos;\r\n    console.log(\"Active Videos:\", activeVideos); // Check active videos\r\n\r\n    console.log(currentVideo);\r\n    if (!currentVideo || activeVideos.length === 0) return;\r\n\r\n    const currentIndex = activeVideos.findIndex((video) => video?.videoID === currentVideo.videoID);\r\n    const nextIndex = (currentIndex + 1) % activeVideos.length;\r\n    const nextVideo = activeVideos[nextIndex];\r\n\r\n    console.log(\"Current Video:\", currentVideo); // Check current video\r\n    console.log(\"Next Video:\", nextVideo); // Check next video\r\n\r\n    if ((nextVideo && nextVideo.platform === \"youtube\") || (nextVideo && nextVideo.url.includes(\"youtube\"))) {\r\n        setTiktokVideo(null);\r\n        setYoutubeVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n        const { start, end } = nextVideo;\r\n        setTimeout(() => {\r\n            if (start && end) {\r\n                setSliderValue([parseInt(start), parseInt(end)]);\r\n            }\r\n        }, 500);\r\n    } else if ((nextVideo && nextVideo.platform === \"tiktok\") || (nextVideo && nextVideo.url.includes(\"tiktok\"))) {\r\n        console.log(\"Setting TikTok video:\", nextVideo.videoID); // Log next TikTok video\r\n        setYoutubeVideo(null);\r\n        setTiktokVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        setCurrentVideo({ ...nextVideo, index: nextIndex.toString() });\r\n        console.log(\"Current video set to:\", nextVideo); // Log current video after setting\r\n\r\n        const index = nextVideo?.index?.toString();\r\n        if (playlistID && index) {\r\n            const newSearchParams: Record<string, string> = {\r\n                tVideoID: currentVideo.videoID,\r\n                list: playlistID,\r\n                index,\r\n            };\r\n            console.log(newSearchParams);\r\n            // createSearchParams(newSearchParams);\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    // const result = await getVideoDetails(url);\r\n    // if (!result) return;\r\n\r\n    // const videoDetails = result.soundCloudVideoDetails || result.tiktokVideoDetails || result.youtubeVideoDetails;\r\n    // if (!videoDetails) return;\r\n\r\n    // const { index, video } = containsVideoID(videos, videoDetails.videoID);\r\n    // if (!index || !video) return;\r\n\r\n    // const ccurrentVideo = videos[index];\r\n    // if (!currentVideo) return;\r\n\r\n    // const list = playlistID;\r\n    // const { start, end } = currentVideo;\r\n\r\n    // if (result.youtubeVideoDetails) {\r\n    //     if (start && end) {\r\n    //         if (!list || !index) {\r\n    //             setSliderValue([parseInt(start), parseInt(end)]);\r\n    //         } else {\r\n    //             setTimeout(() => {\r\n    //                 setSliderValue([parseInt(start), parseInt(end)]);\r\n    //             }, 500);\r\n    //         }\r\n    //     } else {\r\n    //         setSliderValue([0, duration]);\r\n    //     }\r\n\r\n    //     const extendedVideo: Player = {\r\n    //         ...currentVideo,\r\n    //         list: playlistID,\r\n    //         index: index.toString(),\r\n    //     };\r\n    //     setTiktokVideo(null);\r\n    //     setYoutubeVideo(extendedVideo);\r\n    // } else if (result.tiktokVideoDetails) {\r\n    //     const extendedVideo: Player = {\r\n    //         ...currentVideo,\r\n    //         list: playlistID,\r\n    //         index: index.toString(),\r\n    //     };\r\n    //     setYoutubeVideo(null);\r\n    //     setTiktokVideo(extendedVideo);\r\n    // }\r\n    // if (videos[index]) setCurrentVideo(videos[index]);\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1549, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/fetchTrackURL.ts"],"sourcesContent":["export default async function fetchTrackURL(trackURL: string) {\r\n    try {\r\n        const response = await fetch(`/api/scrape/soundcloud/track?url=${encodeURIComponent(trackURL)}`);\r\n        if (!response.ok) throw new Error(\"Network response was not ok\");\r\n\r\n        const data = await response.json();\r\n\r\n        const { href } = data;\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            href,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            href: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAe,eAAe,cAAc,QAAgB;IACxD,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,iCAAiC,EAAE,mBAAmB,WAAW;QAC/F,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAElC,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 1571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1745, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getTrackURL.ts"],"sourcesContent":["const cheerio = require(\"cheerio\");\r\n\r\nexport async function getTrackURL(embeddedTrackURL: string) {\r\n    try {\r\n        // Fetch the public SoundCloud page\r\n        const response = await fetch(embeddedTrackURL);\r\n        const html = await response.text();\r\n\r\n        // Load the page into Cheerio\r\n        const $ = cheerio.load(html);\r\n\r\n        // Get the real URL path from the embedded player page\r\n        const canonicalHref = $('link[rel=\"canonical\"]').attr('href');\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            href: canonicalHref ?? 'Canonical href not found',\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            href: null,\r\n        }\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA,MAAM;AAEC,eAAe,YAAY,gBAAwB;IACtD,IAAI;QACA,mCAAmC;QACnC,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,6BAA6B;QAC7B,MAAM,IAAI,QAAQ,IAAI,CAAC;QAEvB,sDAAsD;QACtD,MAAM,gBAAgB,EAAE,yBAAyB,IAAI,CAAC;QACtD,OAAO;YACH,SAAS;YACT,OAAO;YACP,MAAM,iBAAiB;QAC3B;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 1771, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1777, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/sanitizeURLs.ts"],"sourcesContent":["function sanitizeTiktokURL(url: string) {\r\n    const match = url.match(/\\/video\\/(\\d+)/); // Regex to match the video ID\r\n    return match ? match[1] : null;\r\n}\r\nfunction sanitizeYoutubeShortsURL(url: string) {\r\n    const match = url.match(/\\/shorts\\/([\\w-]+)/)\r\n    return match ? match[1] : null\r\n}\r\nfunction sanitizeYoutubeURL(url: string): string | null {\r\n    const match = url.match(/(?:v=)([^\"&?/\\s]{11})/)\r\n    return match ? match[1] : null\r\n}\r\nfunction sanitizeEmbeddedYoutubeURL(url: string): string | null {\r\n    const match = url.match(/youtu\\.be\\/([^\"&?/\\s]{11})/)\r\n    return match ? match[1] : null\r\n}\r\n\r\nexport {\r\n    sanitizeTiktokURL,\r\n    sanitizeYoutubeURL,\r\n    sanitizeYoutubeShortsURL,\r\n    sanitizeEmbeddedYoutubeURL,\r\n}"],"names":[],"mappings":";;;;;;AAAA,SAAS,kBAAkB,GAAW;IAClC,MAAM,QAAQ,IAAI,KAAK,CAAC,mBAAmB,8BAA8B;IACzE,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,yBAAyB,GAAW;IACzC,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,mBAAmB,GAAW;IACnC,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B;AACA,SAAS,2BAA2B,GAAW;IAC3C,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC9B"}},
    {"offset": {"line": 1800, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1806, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getVideoID.ts"],"sourcesContent":["import { \r\n    sanitizeTiktokURL,\r\n    sanitizeYoutubeURL,\r\n    sanitizeYoutubeShortsURL,\r\n    sanitizeEmbeddedYoutubeURL,\r\n } from './sanitizeURLs'\r\n\r\nexport default function getVideoID(platform: string, url: string) {\r\n    if (platform === \"Youtube\") return sanitizeYoutubeURL(url)\r\n    else if (platform === 'Youtube Shorts') return sanitizeYoutubeShortsURL(url)\r\n    else if (platform === 'Youtu.be') return sanitizeEmbeddedYoutubeURL(url)\r\n    else if (platform === 'Tiktok') return sanitizeTiktokURL(url)\r\n    else if (platform === 'SoundCloud') return 'SoundCloud'\r\n    else return null\r\n}"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,WAAW,QAAgB,EAAE,GAAW;IAC5D,IAAI,aAAa,WAAW,OAAO,CAAA,GAAA,6IAAA,CAAA,qBAAkB,AAAD,EAAE;SACjD,IAAI,aAAa,kBAAkB,OAAO,CAAA,GAAA,6IAAA,CAAA,2BAAwB,AAAD,EAAE;SACnE,IAAI,aAAa,YAAY,OAAO,CAAA,GAAA,6IAAA,CAAA,6BAA0B,AAAD,EAAE;SAC/D,IAAI,aAAa,UAAU,OAAO,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE;SACpD,IAAI,aAAa,cAAc,OAAO;SACtC,OAAO;AAChB"}},
    {"offset": {"line": 1819, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1825, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getPlatform.ts"],"sourcesContent":["export default function getPlatform(url: string) {\r\n    const supportedPlatforms: { regex: RegExp; name: string }[] = [\r\n        { regex: /youtu\\.be/i, name: \"Youtu.be\" },\r\n        { regex: /tiktok\\.com/i, name: \"Tiktok\" },\r\n        { regex: /youtube\\.com/i, name: \"Youtube\" },\r\n        { regex: /twitter\\.com/i, name: \"Twitter\" },\r\n        { regex: /instagram\\.com/i, name: \"Instagram\" },\r\n        { regex: /soundcloud\\.com/i, name: \"SoundCloud\" },\r\n    ];\r\n\r\n    for (const platform of supportedPlatforms) {\r\n        if (platform.regex.test(url)) {\r\n            if (platform.name === \"Youtube\" && url.includes(\"shorts\")) return \"Youtube Shorts\";\r\n            return platform.name;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n"],"names":[],"mappings":";;;AAAe,SAAS,YAAY,GAAW;IAC3C,MAAM,qBAAwD;QAC1D;YAAE,OAAO;YAAc,MAAM;QAAW;QACxC;YAAE,OAAO;YAAgB,MAAM;QAAS;QACxC;YAAE,OAAO;YAAiB,MAAM;QAAU;QAC1C;YAAE,OAAO;YAAiB,MAAM;QAAU;QAC1C;YAAE,OAAO;YAAmB,MAAM;QAAY;QAC9C;YAAE,OAAO;YAAoB,MAAM;QAAa;KACnD;IAED,KAAK,MAAM,YAAY,mBAAoB;QACvC,IAAI,SAAS,KAAK,CAAC,IAAI,CAAC,MAAM;YAC1B,IAAI,SAAS,IAAI,KAAK,aAAa,IAAI,QAAQ,CAAC,WAAW,OAAO;YAClE,OAAO,SAAS,IAAI;QACxB;IACJ;IACA,OAAO;AACX"}},
    {"offset": {"line": 1863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/fetchTrackDetails.ts"],"sourcesContent":["export default async function fetchTrackDetails(trackURL: string) {\r\n    try {\r\n        const response = await fetch(`/api/scrape/soundcloud?url=${encodeURIComponent(trackURL)}`);\r\n        if (!response.ok) throw new Error(\"Network response was not ok\");\r\n\r\n        const data = await response.json();\r\n\r\n        const { title, creator, thumbnail, trackID } = data;\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title,\r\n            creator,\r\n            thumbnail,\r\n            trackID,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n            trackID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAe,eAAe,kBAAkB,QAAgB;IAC5D,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,2BAA2B,EAAE,mBAAmB,WAAW;QACzF,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAElC,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG;QAE/C,OAAO;YACH,SAAS;YACT,OAAO;YACP;YACA;YACA;YACA;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;YACX,SAAS;QACb;IACJ;AACJ"}},
    {"offset": {"line": 1897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1903, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getYoutubeVideoDetails.ts"],"sourcesContent":["const YOUTUBE_API_KEY = process.env.NEXT_PUBLIC_YOUTUBE_API_KEY\r\n\r\nexport default async function getYoutubeVideoDetails(videoID: string) {\r\n    try {\r\n        const result = await fetch(\r\n            `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoID}&key=${YOUTUBE_API_KEY}`\r\n        )\r\n\r\n        if (!result.ok) throw new Error(`Failed to fetch video details: ${result.statusText}`)\r\n\r\n        const data = await result.json()\r\n        if (data.items && data.items.length < 0) throw new Error(`No video Found`)\r\n\r\n        const video = data.items[0].snippet\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: video.title,\r\n            creator: video.channelTitle,\r\n            thumbnail: video.thumbnails?.high?.url || video.thumbnails?.medium?.url || video.thumbnails?.default?.url,\r\n        }\r\n    }\r\n    catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n        }\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA,MAAM;AAES,eAAe,uBAAuB,OAAe;IAChE,IAAI;QACA,MAAM,SAAS,MAAM,MACjB,CAAC,6DAA6D,EAAE,QAAQ,KAAK,EAAE,iBAAiB;QAGpG,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,OAAO,UAAU,EAAE;QAErF,MAAM,OAAO,MAAM,OAAO,IAAI;QAC9B,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,MAAM,CAAC,cAAc,CAAC;QAEzE,MAAM,QAAQ,KAAK,KAAK,CAAC,EAAE,CAAC,OAAO;QAEnC,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,MAAM,KAAK;YAClB,SAAS,MAAM,YAAY;YAC3B,WAAW,MAAM,UAAU,EAAE,MAAM,OAAO,MAAM,UAAU,EAAE,QAAQ,OAAO,MAAM,UAAU,EAAE,SAAS;QAC1G;IACJ,EACA,OAAO,OAAO;QACV,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;QACf;IACJ;AACJ"}},
    {"offset": {"line": 1931, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1937, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/fetchTiktokVideoDetails.ts"],"sourcesContent":["export default async function fetchTiktokVideoDetails(url: string) {\r\n    try {\r\n        const response = await fetch(`/api/tiktok/video?url=${encodeURIComponent(url)}`);\r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n        }\r\n        \r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            data,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            data: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAe,eAAe,wBAAwB,GAAW;IAC7D,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,mBAAmB,MAAM;QAC/E,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO;YACH,SAAS;YACT,OAAO;YACP;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,MAAM;QACV;IACJ;AACJ"}},
    {"offset": {"line": 1960, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1966, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getVideoDetails.ts"],"sourcesContent":["import getVideoID from \"./getVideoID\";\r\nimport getPlatform from \"./getPlatform\";\r\nimport fetchTrackDetails from \"./fetchTrackDetails\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\nimport fetchTiktokVideoDetails from \"./fetchTiktokVideoDetails\";\r\n\r\nexport default async function getVideoDetails(url: string) {\r\n    const platform = getPlatform(url);\r\n    if (!platform) return null;\r\n\r\n    const videoID = getVideoID(platform, url);\r\n    if (!videoID) return null;\r\n\r\n    const PlayerDetails: IPlayerDetails = {\r\n        tiktokVideoDetails: null,\r\n        youtubeVideoDetails: null,\r\n        soundCloudVideoDetails: null,\r\n    };\r\n\r\n    if (platform === \"Youtube\") {\r\n        const result = await getYoutubeVideoDetails(videoID);\r\n        if (result.error) return null;\r\n\r\n        const { thumbnail, title, creator } = result;\r\n        return {\r\n            ...PlayerDetails,\r\n            youtubeVideoDetails: {\r\n                title,\r\n                videoID,\r\n                thumbnail,\r\n                creator,\r\n                url: `https://www.youtube.com/watch?v=${videoID}`,\r\n            },\r\n        };\r\n    } else if (platform === \"Tiktok\") {\r\n        const result = await fetchTiktokVideoDetails(url);\r\n        if (result.error) return null;\r\n\r\n        const { creator, title, thumbnail } = result.data;\r\n        const creatorAndID = `${creator}+${videoID}`;\r\n\r\n        return {\r\n            ...PlayerDetails,\r\n            tiktokVideoDetails: {\r\n                url,\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                videoID: creatorAndID,\r\n            },\r\n        };\r\n    } else if (platform === \"SoundCloud\") {\r\n        const result = await fetchTrackDetails(url);\r\n        if (result.error) return null;\r\n\r\n        const { creator, thumbnail, title, trackID } = result;\r\n        console.log({ creator, thumbnail, title, trackID })\r\n        return {\r\n            ...PlayerDetails,\r\n            soundCloudVideoDetails: {\r\n                url,\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                videoID: trackID,\r\n            },\r\n        };\r\n    }\r\n}\r\n\r\ninterface IPlayerDetails {\r\n    tiktokVideoDetails: null;\r\n    youtubeVideoDetails: null;\r\n    soundCloudVideoDetails: null;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEe,eAAe,gBAAgB,GAAW;IACrD,MAAM,WAAW,CAAA,GAAA,4IAAA,CAAA,UAAW,AAAD,EAAE;IAC7B,IAAI,CAAC,UAAU,OAAO;IAEtB,MAAM,UAAU,CAAA,GAAA,2IAAA,CAAA,UAAU,AAAD,EAAE,UAAU;IACrC,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,gBAAgC;QAClC,oBAAoB;QACpB,qBAAqB;QACrB,wBAAwB;IAC5B;IAEA,IAAI,aAAa,WAAW;QACxB,MAAM,SAAS,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAsB,AAAD,EAAE;QAC5C,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;QACtC,OAAO;YACH,GAAG,aAAa;YAChB,qBAAqB;gBACjB;gBACA;gBACA;gBACA;gBACA,KAAK,CAAC,gCAAgC,EAAE,SAAS;YACrD;QACJ;IACJ,OAAO,IAAI,aAAa,UAAU;QAC9B,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,UAAuB,AAAD,EAAE;QAC7C,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,OAAO,IAAI;QACjD,MAAM,eAAe,GAAG,QAAQ,CAAC,EAAE,SAAS;QAE5C,OAAO;YACH,GAAG,aAAa;YAChB,oBAAoB;gBAChB;gBACA;gBACA;gBACA;gBACA,SAAS;YACb;QACJ;IACJ,OAAO,IAAI,aAAa,cAAc;QAClC,MAAM,SAAS,MAAM,CAAA,GAAA,kJAAA,CAAA,UAAiB,AAAD,EAAE;QACvC,IAAI,OAAO,KAAK,EAAE,OAAO;QAEzB,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;QAC/C,QAAQ,GAAG,CAAC;YAAE;YAAS;YAAW;YAAO;QAAQ;QACjD,OAAO;YACH,GAAG,aAAa;YAChB,wBAAwB;gBACpB;gBACA;gBACA;gBACA;gBACA,SAAS;YACb;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 2040, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getTrackDetails.ts"],"sourcesContent":["const cheerio = require(\"cheerio\");\r\n\r\nexport async function getTrackDetails(trackUrl: string) {\r\n    try {\r\n        // Fetch the public SoundCloud page\r\n        const response = await fetch(trackUrl);\r\n        const html = await response.text();\r\n\r\n        // Load the page into Cheerio\r\n        const $ = cheerio.load(html);\r\n\r\n        // Look for the details in the Open Graph metadata\r\n        const thumbnail = $('meta[property=\"og:image\"]').attr(\"content\");\r\n        const title = $('meta[property=\"og:title\"]').attr(\"content\");\r\n\r\n        // Parse creator name:\r\n        let creator;\r\n        const fullTitle = $(\"title\").text();\r\n        const match = fullTitle.match(/ by (.*?) \\| Listen online/i);\r\n        if (match) {\r\n            creator = match[1]?.trim();\r\n        }\r\n\r\n        // const canonicalHref = $('link[rel=\"canonical\"]').attr('href');\r\n\r\n        // Parse track ID\r\n        let trackID = null;\r\n\r\n        // Try to find the track ID from twitter:player\r\n        const playerMeta = $('meta[property=\"twitter:player\"]').attr(\"content\");\r\n        if (playerMeta) {\r\n            const match = playerMeta.match(/tracks\\/(\\d+)/);\r\n            if (match) {\r\n                trackID = match[1];\r\n            }\r\n        }\r\n\r\n        // If trackID is still not found, try twitter:app:url:googleplay\r\n        if (!trackID) {\r\n            const appMeta = $('meta[property=\"twitter:app:url:googleplay\"]').attr(\"content\");\r\n            if (appMeta) {\r\n                const match = appMeta.match(/sounds:(\\d+)/);\r\n                if (match) {\r\n                    trackID = match[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: title ?? \"Title not found\",\r\n            creator: creator ?? \"Creator not found\",\r\n            thumbnail: thumbnail ?? \"Thumbnail not found\",\r\n            trackID: trackID ?? \"Track ID not found\",\r\n        };\r\n    } catch (error) {\r\n        console.error(\"Error fetching track page:\", error);\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n            trackID: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA,MAAM;AAEC,eAAe,gBAAgB,QAAgB;IAClD,IAAI;QACA,mCAAmC;QACnC,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,6BAA6B;QAC7B,MAAM,IAAI,QAAQ,IAAI,CAAC;QAEvB,kDAAkD;QAClD,MAAM,YAAY,EAAE,6BAA6B,IAAI,CAAC;QACtD,MAAM,QAAQ,EAAE,6BAA6B,IAAI,CAAC;QAElD,sBAAsB;QACtB,IAAI;QACJ,MAAM,YAAY,EAAE,SAAS,IAAI;QACjC,MAAM,QAAQ,UAAU,KAAK,CAAC;QAC9B,IAAI,OAAO;YACP,UAAU,KAAK,CAAC,EAAE,EAAE;QACxB;QAEA,iEAAiE;QAEjE,iBAAiB;QACjB,IAAI,UAAU;QAEd,+CAA+C;QAC/C,MAAM,aAAa,EAAE,mCAAmC,IAAI,CAAC;QAC7D,IAAI,YAAY;YACZ,MAAM,QAAQ,WAAW,KAAK,CAAC;YAC/B,IAAI,OAAO;gBACP,UAAU,KAAK,CAAC,EAAE;YACtB;QACJ;QAEA,gEAAgE;QAChE,IAAI,CAAC,SAAS;YACV,MAAM,UAAU,EAAE,+CAA+C,IAAI,CAAC;YACtE,IAAI,SAAS;gBACT,MAAM,QAAQ,QAAQ,KAAK,CAAC;gBAC5B,IAAI,OAAO;oBACP,UAAU,KAAK,CAAC,EAAE;gBACtB;YACJ;QACJ;QAEA,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,SAAS;YAChB,SAAS,WAAW;YACpB,WAAW,aAAa;YACxB,SAAS,WAAW;QACxB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;YACX,SAAS;QACb;IACJ;AACJ"}},
    {"offset": {"line": 2108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2114, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createVideoObject.ts"],"sourcesContent":["import { Player } from \"../interfaces\";\r\n\r\nexport default function createVideoObject(duration: number, tiktokVideo?: Player, youtubeVideo?: Player, soundCloudVideo?: Player): Player | null {\r\n    const video = tiktokVideo || youtubeVideo || soundCloudVideo;\r\n    if (!video) return null;\r\n\r\n    // Fetch url params\r\n    const params = new URLSearchParams(window.location.search);\r\n    const soundCloudVideoID = params.get(\"sVideoID\");\r\n    const youtubeVideoID = params.get(\"yVideoID\");\r\n    const tiktokVideoID = params.get(\"tVideoID\");\r\n    const start = params.get(\"start\");\r\n    const index = params.get(\"index\");\r\n    const list = params.get(\"list\");\r\n    const end = params.get(\"end\");\r\n\r\n    return {\r\n        ...video,\r\n        start: start || video.start || \"0\",\r\n        end: end || video.end || duration.toString(),\r\n        platform: tiktokVideo ? \"tiktok\" : youtubeVideo ? \"youtube\" : \"soundcloud\",\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAEe,SAAS,kBAAkB,QAAgB,EAAE,WAAoB,EAAE,YAAqB,EAAE,eAAwB;IAC7H,MAAM,QAAQ,eAAe,gBAAgB;IAC7C,IAAI,CAAC,OAAO,OAAO;IAEnB,mBAAmB;IACnB,MAAM,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACzD,MAAM,oBAAoB,OAAO,GAAG,CAAC;IACrC,MAAM,iBAAiB,OAAO,GAAG,CAAC;IAClC,MAAM,gBAAgB,OAAO,GAAG,CAAC;IACjC,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,MAAM,OAAO,GAAG,CAAC;IAEvB,OAAO;QACH,GAAG,KAAK;QACR,OAAO,SAAS,MAAM,KAAK,IAAI;QAC/B,KAAK,OAAO,MAAM,GAAG,IAAI,SAAS,QAAQ;QAC1C,UAAU,cAAc,WAAW,eAAe,YAAY;IAClE;AACJ"}},
    {"offset": {"line": 2136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2142, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createNewVideo.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\n\r\nexport default function createNewVideo(required: Player, optionals?: Record<string, string>) {\r\n    if (!required) return;\r\n\r\n    return {\r\n        ...required,\r\n        ...optionals,\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAEe,SAAS,eAAe,QAAgB,EAAE,SAAkC;IACvF,IAAI,CAAC,UAAU;IAEf,OAAO;QACH,GAAG,QAAQ;QACX,GAAG,SAAS;IAChB;AACJ"}},
    {"offset": {"line": 2152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2158, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/createVideo.ts"],"sourcesContent":["import createNewVideo from \"./createNewVideo\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\nimport { ICreateVideo, Player } from \"../interfaces\";\r\nimport fetchTiktokVideoDetails from \"./fetchTiktokVideoDetails\";\r\nimport fetchTrackURL from \"./fetchTrackURL\";\r\nimport fetchTrackDetails from \"./fetchTrackDetails\";\r\n\r\nexport default async function createVideo({ videoID, platform, setYoutubeVideo, setTiktokVideo, setSoundCloudVideo, optionals }: ICreateVideo) {\r\n    switch (platform) {\r\n        case \"youtube\":\r\n            if (typeof setYoutubeVideo === \"undefined\" || !setYoutubeVideo) return;\r\n\r\n            const youtubeResults = await getYoutubeVideoDetails(videoID);\r\n            if (!youtubeResults) return;\r\n\r\n            console.log(youtubeResults.creator);\r\n\r\n            const requiredYoutubeVideoDetails: Player = {\r\n                videoID: videoID,\r\n                title: youtubeResults.title,\r\n                platform: \"youtube\",\r\n                creator: youtubeResults.creator,\r\n                thumbnail: youtubeResults.thumbnail,\r\n                url: `https://www.youtube.com/watch?v=${videoID}`,\r\n            };\r\n\r\n            const newYoutubeVideo = createNewVideo(requiredYoutubeVideoDetails, optionals);\r\n            if (newYoutubeVideo) setYoutubeVideo(newYoutubeVideo);\r\n            break;\r\n\r\n        case \"tiktok\":\r\n            if (typeof setTiktokVideo === \"undefined\" || !setTiktokVideo) return;\r\n\r\n            const tiktokVideoURL = `https://www.tiktok.com/@${videoID.split(\"+\")[0]}/video/${videoID.split(\"+\")[1]}`;\r\n            const tiktokResults = await fetchTiktokVideoDetails(tiktokVideoURL);\r\n            if (tiktokResults.error) return null;\r\n            const { creator, title, thumbnail } = tiktokResults.data;\r\n            const creatorAndID = `${creator}+${videoID}`;\r\n            const requiredTiktokVideoDetails: Player = {\r\n                title,\r\n                creator,\r\n                thumbnail,\r\n                platform: \"tiktok\",\r\n                url: tiktokVideoURL,\r\n                videoID,\r\n            };\r\n            const newTiktokVideo = createNewVideo(requiredTiktokVideoDetails, optionals);\r\n            if (newTiktokVideo) setTiktokVideo(newTiktokVideo);\r\n            break;\r\n\r\n        case \"soundcloud\":\r\n            if (typeof setSoundCloudVideo === \"undefined\" || !setSoundCloudVideo) return;\r\n\r\n            const embedUrl = `https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${videoID}&color=%23ff5500&auto_play=true&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true`;\r\n            const extraction = await fetchTrackURL(embedUrl);\r\n            if (!extraction.success) return;\r\n\r\n            const soundCloudResults = await fetchTrackDetails(extraction.href);\r\n            if (soundCloudResults.success) {\r\n                const { title, creator, thumbnail, trackID } = soundCloudResults;\r\n                const newEmbedUrl = `https://api.soundcloud.com/tracks/${videoID}`;\r\n\r\n                const requiredSoundCloudVideoDetails: Player = {\r\n                    title,\r\n                    creator,\r\n                    thumbnail,\r\n                    videoID: trackID,\r\n                    url: newEmbedUrl,\r\n                    platform: \"soundcloud\",\r\n                };\r\n                const newSoundCloudVideo = createNewVideo(requiredSoundCloudVideoDetails, optionals);\r\n                if (newSoundCloudVideo) setSoundCloudVideo(newSoundCloudVideo);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;;;;;;AAEe,eAAe,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,SAAS,EAAgB;IACzI,OAAQ;QACJ,KAAK;YACD,IAAI,OAAO,oBAAoB,eAAe,CAAC,iBAAiB;YAEhE,MAAM,iBAAiB,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAsB,AAAD,EAAE;YACpD,IAAI,CAAC,gBAAgB;YAErB,QAAQ,GAAG,CAAC,eAAe,OAAO;YAElC,MAAM,8BAAsC;gBACxC,SAAS;gBACT,OAAO,eAAe,KAAK;gBAC3B,UAAU;gBACV,SAAS,eAAe,OAAO;gBAC/B,WAAW,eAAe,SAAS;gBACnC,KAAK,CAAC,gCAAgC,EAAE,SAAS;YACrD;YAEA,MAAM,kBAAkB,CAAA,GAAA,+IAAA,CAAA,UAAc,AAAD,EAAE,6BAA6B;YACpE,IAAI,iBAAiB,gBAAgB;YACrC;QAEJ,KAAK;YACD,IAAI,OAAO,mBAAmB,eAAe,CAAC,gBAAgB;YAE9D,MAAM,iBAAiB,CAAC,wBAAwB,EAAE,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE;YACxG,MAAM,gBAAgB,MAAM,CAAA,GAAA,wJAAA,CAAA,UAAuB,AAAD,EAAE;YACpD,IAAI,cAAc,KAAK,EAAE,OAAO;YAChC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,cAAc,IAAI;YACxD,MAAM,eAAe,GAAG,QAAQ,CAAC,EAAE,SAAS;YAC5C,MAAM,6BAAqC;gBACvC;gBACA;gBACA;gBACA,UAAU;gBACV,KAAK;gBACL;YACJ;YACA,MAAM,iBAAiB,CAAA,GAAA,+IAAA,CAAA,UAAc,AAAD,EAAE,4BAA4B;YAClE,IAAI,gBAAgB,eAAe;YACnC;QAEJ,KAAK;YACD,IAAI,OAAO,uBAAuB,eAAe,CAAC,oBAAoB;YAEtE,MAAM,WAAW,CAAC,yEAAyE,EAAE,QAAQ,oIAAoI,CAAC;YAC1O,MAAM,aAAa,MAAM,CAAA,GAAA,8IAAA,CAAA,UAAa,AAAD,EAAE;YACvC,IAAI,CAAC,WAAW,OAAO,EAAE;YAEzB,MAAM,oBAAoB,MAAM,CAAA,GAAA,kJAAA,CAAA,UAAiB,AAAD,EAAE,WAAW,IAAI;YACjE,IAAI,kBAAkB,OAAO,EAAE;gBAC3B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG;gBAC/C,MAAM,cAAc,CAAC,kCAAkC,EAAE,SAAS;gBAElE,MAAM,iCAAyC;oBAC3C;oBACA;oBACA;oBACA,SAAS;oBACT,KAAK;oBACL,UAAU;gBACd;gBACA,MAAM,qBAAqB,CAAA,GAAA,+IAAA,CAAA,UAAc,AAAD,EAAE,gCAAgC;gBAC1E,IAAI,oBAAoB,mBAAmB;YAC/C;YAEA;QAEJ;YACI;IACR;AACJ"}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2238, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/setNewPlayerVideo.ts"],"sourcesContent":["import { fetchTiktokVideoDetails, Player } from \"../index\";\r\nimport createVideo from \"./createVideo\";\r\nimport getYoutubeVideoDetails from \"./getYoutubeVideoDetails\";\r\n\r\nexport default async function setNewPlayerVideo(\r\n    setTiktokVideo: (tiktokVideo: Player) => void,\r\n    setYoutubeVideo: (youtubeVideo: Player) => void,\r\n    setSliderValue: (value: [number, number]) => void,\r\n    setSoundCloudVideo: (soundCloudVideo: Player) => void\r\n) {\r\n    // Fetch url params\r\n    const params = new URLSearchParams(window.location.search);\r\n    const soundCloudVideoID = params.get(\"sVideoID\");\r\n    const youtubeVideoID = params.get(\"yVideoID\");\r\n    const tiktokVideoID = params.get(\"tVideoID\");\r\n    const start = params.get(\"start\");\r\n    const index = params.get(\"index\");\r\n    const list = params.get(\"list\");\r\n    const end = params.get(\"end\");\r\n\r\n    // Default video\r\n    const defaultVideoID = \"FfsINwUQ75Q\";\r\n    const defaultUrl = `https://www.youtube.com/watch?v=${defaultVideoID}`;\r\n\r\n    // Youtube\r\n    const youtube_all = youtubeVideoID && start && end && list && index;\r\n    const youtube_base = youtubeVideoID && !start && !end && !list && !index;\r\n    const youtube_base_start_end = youtubeVideoID && start && end && !list && !index;\r\n\r\n    // Tiktok\r\n    const tiktok_all = tiktokVideoID && list && index;\r\n    const tiktok_base = tiktokVideoID && !list && !index;\r\n\r\n    // SoundCloud\r\n    const soundCloud_all = soundCloudVideoID && start && end && list && index;\r\n    const soundCloud_base = soundCloudVideoID && !start && !end && !list && !index;\r\n    const soundCloud_start_end = soundCloudVideoID && start && end && !list && !index;\r\n\r\n    // Default\r\n    const default_ = !youtubeVideoID && !tiktokVideoID && !soundCloudVideoID && !start && !end && !list && !index;\r\n\r\n    // Clear all video states\r\n    setTiktokVideo(null);\r\n    setYoutubeVideo(null);\r\n    setSoundCloudVideo(null);\r\n\r\n    // Play default video if no url params exist\r\n    if (params.size === 0 || default_) {\r\n        const result = await getYoutubeVideoDetails(defaultVideoID);\r\n        if (!result.success) return;\r\n\r\n        setYoutubeVideo({\r\n            url: defaultUrl,\r\n            platform: \"youtube\",\r\n            title: result.title,\r\n            creator: result.creator,\r\n            videoID: defaultVideoID,\r\n            thumbnail: result.thumbnail,\r\n        });\r\n    } else if (youtube_base) {\r\n        await createVideo({ setYoutubeVideo, platform: \"youtube\", videoID: youtubeVideoID });\r\n    } else if (youtube_all || youtube_base_start_end) {\r\n        await createVideo({\r\n            platform: \"youtube\",\r\n            optionals: { start, end },\r\n            setYoutubeVideo,\r\n            videoID: youtubeVideoID,\r\n        });\r\n        setTimeout(() => {\r\n            setSliderValue([parseInt(start), parseInt(end)]);\r\n        }, 1000);\r\n    } else if (tiktok_base || tiktok_all) {\r\n        await createVideo({ setTiktokVideo, platform: \"tiktok\", videoID: tiktokVideoID });\r\n    } else if (soundCloud_base) {\r\n        console.log('running soundcloud base')\r\n        await createVideo({ setSoundCloudVideo, platform: \"soundcloud\", videoID: soundCloudVideoID });\r\n    } else if (soundCloud_start_end || soundCloud_all) {\r\n        console.log('running soundcloud start_end or all')\r\n        await createVideo({\r\n            platform: \"soundcloud\",\r\n            optionals: { start, end },\r\n            setSoundCloudVideo,\r\n            videoID: soundCloudVideoID,\r\n        });\r\n        setTimeout(() => {\r\n            setSliderValue([parseInt(start), parseInt(end)]);\r\n        }, 1000);\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,kBAC1B,cAA6C,EAC7C,eAA+C,EAC/C,cAAiD,EACjD,kBAAqD;IAErD,mBAAmB;IACnB,MAAM,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACzD,MAAM,oBAAoB,OAAO,GAAG,CAAC;IACrC,MAAM,iBAAiB,OAAO,GAAG,CAAC;IAClC,MAAM,gBAAgB,OAAO,GAAG,CAAC;IACjC,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,QAAQ,OAAO,GAAG,CAAC;IACzB,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,MAAM,OAAO,GAAG,CAAC;IAEvB,gBAAgB;IAChB,MAAM,iBAAiB;IACvB,MAAM,aAAa,CAAC,gCAAgC,EAAE,gBAAgB;IAEtE,UAAU;IACV,MAAM,cAAc,kBAAkB,SAAS,OAAO,QAAQ;IAC9D,MAAM,eAAe,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IACnE,MAAM,yBAAyB,kBAAkB,SAAS,OAAO,CAAC,QAAQ,CAAC;IAE3E,SAAS;IACT,MAAM,aAAa,iBAAiB,QAAQ;IAC5C,MAAM,cAAc,iBAAiB,CAAC,QAAQ,CAAC;IAE/C,aAAa;IACb,MAAM,iBAAiB,qBAAqB,SAAS,OAAO,QAAQ;IACpE,MAAM,kBAAkB,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IACzE,MAAM,uBAAuB,qBAAqB,SAAS,OAAO,CAAC,QAAQ,CAAC;IAE5E,UAAU;IACV,MAAM,WAAW,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;IAExG,yBAAyB;IACzB,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IAEnB,4CAA4C;IAC5C,IAAI,OAAO,IAAI,KAAK,KAAK,UAAU;QAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAsB,AAAD,EAAE;QAC5C,IAAI,CAAC,OAAO,OAAO,EAAE;QAErB,gBAAgB;YACZ,KAAK;YACL,UAAU;YACV,OAAO,OAAO,KAAK;YACnB,SAAS,OAAO,OAAO;YACvB,SAAS;YACT,WAAW,OAAO,SAAS;QAC/B;IACJ,OAAO,IAAI,cAAc;QACrB,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAiB,UAAU;YAAW,SAAS;QAAe;IACtF,OAAO,IAAI,eAAe,wBAAwB;QAC9C,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAW,AAAD,EAAE;YACd,UAAU;YACV,WAAW;gBAAE;gBAAO;YAAI;YACxB;YACA,SAAS;QACb;QACA,WAAW;YACP,eAAe;gBAAC,SAAS;gBAAQ,SAAS;aAAK;QACnD,GAAG;IACP,OAAO,IAAI,eAAe,YAAY;QAClC,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAgB,UAAU;YAAU,SAAS;QAAc;IACnF,OAAO,IAAI,iBAAiB;QACxB,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAW,AAAD,EAAE;YAAE;YAAoB,UAAU;YAAc,SAAS;QAAkB;IAC/F,OAAO,IAAI,wBAAwB,gBAAgB;QAC/C,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAW,AAAD,EAAE;YACd,UAAU;YACV,WAAW;gBAAE;gBAAO;YAAI;YACxB;YACA,SAAS;QACb;QACA,WAAW;YACP,eAAe;gBAAC,SAAS;gBAAQ,SAAS;aAAK;QACnD,GAAG;IACP;AACJ"}},
    {"offset": {"line": 2341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2347, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/containsVideo.ts"],"sourcesContent":["import { Player } from \"@/app/utils\";\r\n\r\nfunction containsVideo(videos: Player[], newVideo: Player): boolean {\r\n    return videos.some((video) => (video && video.url) === (newVideo && newVideo.url));\r\n}\r\n\r\nfunction containsVideoID(videos: Player[], videoID: string) {\r\n    const index = videos.findIndex((video) => (video && video.videoID) === videoID);\r\n    return {\r\n        video: index !== -1 ? videos[index] : null,\r\n        index: index !== -1 ? index : null,\r\n    };\r\n}\r\n\r\nexport {\r\n    containsVideo,\r\n    containsVideoID,\r\n}"],"names":[],"mappings":";;;;AAEA,SAAS,cAAc,MAAgB,EAAE,QAAgB;IACrD,OAAO,OAAO,IAAI,CAAC,CAAC,QAAU,CAAC,SAAS,MAAM,GAAG,MAAM,CAAC,YAAY,SAAS,GAAG;AACpF;AAEA,SAAS,gBAAgB,MAAgB,EAAE,OAAe;IACtD,MAAM,QAAQ,OAAO,SAAS,CAAC,CAAC,QAAU,CAAC,SAAS,MAAM,OAAO,MAAM;IACvE,OAAO;QACH,OAAO,UAAU,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG;QACtC,OAAO,UAAU,CAAC,IAAI,QAAQ;IAClC;AACJ"}},
    {"offset": {"line": 2362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2378, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/processVideoAddition.ts"],"sourcesContent":["import { toast } from \"sonner\";\r\nimport { Player } from \"../interfaces\";\r\nimport { addVideoToPlaylist } from \"@/app/firebase\";\r\nimport { User } from \"firebase/auth\";\r\nimport createVideoObject from \"./createVideoObject\";\r\nimport { containsVideo } from \"./containsVideo\";\r\n\r\nexport default async function processVideoAddition(\r\n    buttonType: \"queue\" | \"playlist\",\r\n    setCurrentVideo: (video: Player) => void,\r\n    videos: Player[],\r\n    addVideo: (video: Player) => void,\r\n    user: User | null,\r\n    togglePlaylist: (enabled: boolean) => void,\r\n    duration: number,\r\n    soundCloudVideo: Player,\r\n    youtubeVideo: Player,\r\n    tiktokVideo: Player,\r\n    clearVideos: () => void,\r\n    pressed: boolean,\r\n    setPressed: React.Dispatch<React.SetStateAction<boolean>>,\r\n    setShowTooltips?: React.Dispatch<React.SetStateAction<boolean>>\r\n) {\r\n    const video = createVideoObject(duration, tiktokVideo, youtubeVideo, soundCloudVideo);\r\n    if (!video) return;\r\n\r\n    if (containsVideo(videos, video)) {\r\n        console.log(buttonType)\r\n        buttonType === \"playlist\" ? toast.error(\"Video is already in the playlist\") : toast.error(\"Video is already in the queue\");\r\n        return;\r\n    }\r\n\r\n    if (buttonType === \"playlist\") {\r\n        console.log(\"running playlist process\");\r\n        if (!pressed) clearVideos();\r\n        setPressed(true);\r\n        console.log(\"clearVideos was ran\");\r\n        togglePlaylist(true);\r\n\r\n        if (user) {\r\n            await addVideoToDB(user.uid, video);\r\n            addVideoToArray(setCurrentVideo, addVideo, video);\r\n            toastMessage(buttonType);\r\n        } else {\r\n            if (setShowTooltips) {\r\n                setShowTooltips(true);\r\n                return;\r\n            }\r\n        }\r\n    } else if (buttonType === \"queue\") {\r\n        console.log(\"running queue process\");\r\n        if (!pressed) clearVideos();\r\n        setPressed(true);\r\n        console.log(\"cearVideos was ran\");\r\n        togglePlaylist(false);\r\n        addVideoToArray(setCurrentVideo, addVideo, video);\r\n        toastMessage(buttonType);\r\n    }\r\n}\r\n\r\nasync function addVideoToDB(userID: string, video: Player) {\r\n    const result = await addVideoToPlaylist(userID, video);\r\n    if (result.error && result.error === \"Video already exists in the playlist\") {\r\n        toast.error(\"Video already exists in the playlist\");\r\n        return null;\r\n    }\r\n    return result.playlistID;\r\n}\r\n\r\nfunction addVideoToArray(setCurrentVideo: (video: Player) => void, addVideo: (video: Player) => void, video: Player) {\r\n    addVideo(video);\r\n    setCurrentVideo(video);\r\n}\r\nfunction toastMessage(buttonType: \"queue\" | \"playlist\") {\r\n    switch (buttonType) {\r\n        case \"queue\":\r\n            toast.success(\"Video added to the queue\");\r\n            break;\r\n        case \"playlist\":\r\n            toast.success(\"Video added to the playlist\");\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;AAHA;;;;;AAKe,eAAe,qBAC1B,UAAgC,EAChC,eAAwC,EACxC,MAAgB,EAChB,QAAiC,EACjC,IAAiB,EACjB,cAA0C,EAC1C,QAAgB,EAChB,eAAuB,EACvB,YAAoB,EACpB,WAAmB,EACnB,WAAuB,EACvB,OAAgB,EAChB,UAAyD,EACzD,eAA+D;IAE/D,MAAM,QAAQ,CAAA,GAAA,kJAAA,CAAA,UAAiB,AAAD,EAAE,UAAU,aAAa,cAAc;IACrE,IAAI,CAAC,OAAO;IAEZ,IAAI,CAAA,GAAA,8IAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,QAAQ;QAC9B,QAAQ,GAAG,CAAC;QACZ,eAAe,aAAa,0IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,sCAAsC,0IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QAC1F;IACJ;IAEA,IAAI,eAAe,YAAY;QAC3B,QAAQ,GAAG,CAAC;QACZ,IAAI,CAAC,SAAS;QACd,WAAW;QACX,QAAQ,GAAG,CAAC;QACZ,eAAe;QAEf,IAAI,MAAM;YACN,MAAM,aAAa,KAAK,GAAG,EAAE;YAC7B,gBAAgB,iBAAiB,UAAU;YAC3C,aAAa;QACjB,OAAO;YACH,IAAI,iBAAiB;gBACjB,gBAAgB;gBAChB;YACJ;QACJ;IACJ,OAAO,IAAI,eAAe,SAAS;QAC/B,QAAQ,GAAG,CAAC;QACZ,IAAI,CAAC,SAAS;QACd,WAAW;QACX,QAAQ,GAAG,CAAC;QACZ,eAAe;QACf,gBAAgB,iBAAiB,UAAU;QAC3C,aAAa;IACjB;AACJ;AAEA,eAAe,aAAa,MAAc,EAAE,KAAa;IACrD,MAAM,SAAS,MAAM,CAAA,GAAA,wLAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;IAChD,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,KAAK,wCAAwC;QACzE,0IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACZ,OAAO;IACX;IACA,OAAO,OAAO,UAAU;AAC5B;AAEA,SAAS,gBAAgB,eAAwC,EAAE,QAAiC,EAAE,KAAa;IAC/G,SAAS;IACT,gBAAgB;AACpB;AACA,SAAS,aAAa,UAAgC;IAClD,OAAQ;QACJ,KAAK;YACD,0IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd;QACJ,KAAK;YACD,0IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd;QACJ;YACI;IACR;AACJ"}},
    {"offset": {"line": 2448, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2454, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/utils/VideoPlayer/getTiktokVideoDetails.ts"],"sourcesContent":["export async function getTikTokVideoDetails(url: string) {\r\n    try {\r\n        const apiUrl = `https://www.tiktok.com/oembed?url=${encodeURIComponent(url)}`;\r\n\r\n        const response = await fetch(apiUrl);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to fetch TikTok metadata: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return {\r\n            success: true,\r\n            error: null,\r\n            title: data.title,\r\n            creator: data.author_unique_id,\r\n            thumbnail: data.thumbnail_url,\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: (error as Error).message,\r\n            title: null,\r\n            creator: null,\r\n            thumbnail: null,\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAO,eAAe,sBAAsB,GAAW;IACnD,IAAI;QACA,MAAM,SAAS,CAAC,kCAAkC,EAAE,mBAAmB,MAAM;QAE7E,MAAM,WAAW,MAAM,MAAM;QAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,SAAS,UAAU,EAAE;QAC7E;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO;YACH,SAAS;YACT,OAAO;YACP,OAAO,KAAK,KAAK;YACjB,SAAS,KAAK,gBAAgB;YAC9B,WAAW,KAAK,aAAa;QACjC;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,SAAS;YACT,OAAO,AAAC,MAAgB,OAAO;YAC/B,OAAO;YACP,SAAS;YACT,WAAW;QACf;IACJ;AACJ"}},
    {"offset": {"line": 2482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2554, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/CrawlingHammy/Documents/VisualStudioCode/flixburst/app/api/scrape/soundcloud/track/route.ts"],"sourcesContent":["import { getTrackURL } from \"@/app/utils\"; \r\nimport { NextRequest, NextResponse } from \"next/server\";\r\n\r\nexport async function GET(req: NextRequest) {\r\n    const { searchParams } = new URL(req.url);\r\n    const url = searchParams.get(\"url\"); \r\n\r\n    if (!url) {\r\n        return NextResponse.json({ error: \"URL is required\" }, { status: 400 });\r\n    }\r\n\r\n    try {\r\n        const result = await getTrackURL(url);\r\n        return NextResponse.json(result); \r\n    } catch (error) {\r\n        console.error(\"Error in API handler:\", error);\r\n        return NextResponse.json({ error: \"Error fetching track details\" }, { status: 500 });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,eAAe,IAAI,GAAgB;IACtC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,MAAM,aAAa,GAAG,CAAC;IAE7B,IAAI,CAAC,KAAK;QACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACzE;IAEA,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,4IAAA,CAAA,cAAW,AAAD,EAAE;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA+B,GAAG;YAAE,QAAQ;QAAI;IACtF;AACJ"}},
    {"offset": {"line": 2584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}